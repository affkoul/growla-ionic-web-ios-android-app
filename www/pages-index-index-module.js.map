{"version":3,"sources":["./src/addons/privatefiles/pages/index/index.html","./src/core/features/course/pages/index/index.html","./src/core/features/sitehome/pages/index/index.html","./src/addons/privatefiles/pages/index/index.module.ts","./src/addons/privatefiles/pages/index/index.ts","./src/core/features/course/pages/index/index.module.ts","./src/core/features/course/pages/index/index.page.ts","./src/core/features/sitehome/pages/index/index.module.ts","./src/core/features/sitehome/pages/index/index.ts"],"names":[],"mappings":"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","file":"pages-index-index-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>{{ title }}</h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!filesLoaded || (!showPrivateFiles && !showSiteFiles)\\\"\\n        (ionRefresh)=\\\"refreshData($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n\\n    <core-loading [hideUntil]=\\\"filesLoaded\\\" *ngIf=\\\"showPrivateFiles || showSiteFiles\\\">\\n        <!-- Allow selecting the files to see: private or site. -->\\n        <core-combobox [selection]=\\\"root\\\" (onChange)=\\\"rootChanged($event)\\\" *ngIf=\\\"showPrivateFiles && showSiteFiles && !path\\\">\\n            <ion-select-option class=\\\"ion-text-wrap\\\" value=\\\"my\\\">\\n                {{ 'addon.privatefiles.privatefiles' | translate }}\\n            </ion-select-option>\\n            <ion-select-option class=\\\"ion-text-wrap\\\" value=\\\"site\\\">\\n                {{ 'addon.privatefiles.sitefiles' | translate }}\\n            </ion-select-option>\\n        </core-combobox>\\n\\n        <!-- Display info about space used and space left. -->\\n        <ion-card class=\\\"core-info-card\\\" *ngIf=\\\"userQuota && filesInfo && filesInfo.filecount > 0\\\">\\n            <ion-item><ion-label>\\n            {{ 'core.quotausage' | translate:{$a: {used: spaceUsed, total: userQuotaReadable} } }}\\n            </ion-label></ion-item>\\n        </ion-card>\\n\\n        <!-- List of files. -->\\n        <ion-list *ngIf=\\\"files && files.length > 0\\\">\\n            <ng-container *ngFor=\\\"let file of files\\\">\\n                <ion-item button *ngIf=\\\"file.isdir\\\" class=\\\"item-file\\\" (click)=\\\"openFolder(file)\\\" detail=\\\"true\\\">\\n                    <ion-thumbnail slot=\\\"start\\\">\\n                        <img [src]=\\\"file.imgPath\\\" alt=\\\"\\\" role=\\\"presentation\\\">\\n                    </ion-thumbnail>\\n                    <ion-label>{{file.filename}}</ion-label>\\n                </ion-item>\\n                <core-file *ngIf=\\\"!file.isdir\\\" [file]=\\\"file\\\" [component]=\\\"component\\\" [componentId]=\\\"file.contextid\\\"></core-file>\\n            </ng-container>\\n        </ion-list>\\n\\n        <!-- Message telling there are no files. -->\\n        <core-empty-box *ngIf=\\\"!files || !files.length\\\" icon=\\\"far-folder-open\\\" [message]=\\\"'addon.privatefiles.emptyfilelist' | translate\\\">\\n        </core-empty-box>\\n    </core-loading>\\n\\n    <!-- Upload a private file. -->\\n    <ion-fab slot=\\\"fixed\\\" core-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" *ngIf=\\\"showUpload && root != 'site' && !path\\\">\\n        <ion-fab-button (click)=\\\"uploadFile()\\\" [attr.aria-label]=\\\"'core.fileuploader.uploadafile' | translate\\\">\\n            <ion-icon name=\\\"fas-plus\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            <span class=\\\"sr-only\\\">{{ 'core.fileuploader.uploadafile' | translate }}</span>\\n        </ion-fab-button>\\n    </ion-fab>\\n</ion-content>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>\\n            <core-format-text [text]=\\\"title\\\" contextLevel=\\\"course\\\" [contextInstanceId]=\\\"course?.id\\\"></core-format-text>\\n        </h1>\\n\\n        <ion-buttons slot=\\\"end\\\"></ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<core-tabs-outlet [tabs]=\\\"tabs\\\" [hideUntil]=\\\"loaded\\\" (ionChange)=\\\"tabSelected()\\\"></core-tabs-outlet>\\n\";","export default \"<core-navbar-buttons slot=\\\"end\\\">\\n    <ion-button *ngIf=\\\"searchEnabled\\\" (click)=\\\"openSearch()\\\" [attr.aria-label]=\\\"'core.courses.searchcourses' | translate\\\">\\n        <ion-icon name=\\\"fas-search\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n    </ion-button>\\n    <core-context-menu>\\n        <core-context-menu-item *ngIf=\\\"(downloadCourseEnabled || downloadCoursesEnabled)\\\" [priority]=\\\"1000\\\"\\n        [content]=\\\"'core.settings.showdownloadoptions' | translate\\\" (action)=\\\"toggleDownload()\\\"\\n        [iconAction]=\\\"downloadEnabledIcon\\\"></core-context-menu-item>\\n        <core-context-menu-item *ngIf=\\\"(downloadCourseEnabled || downloadCoursesEnabled)\\\" [priority]=\\\"500\\\"\\n        [content]=\\\"'addon.storagemanager.managestorage' | translate\\\"\\n        (action)=\\\"manageCoursesStorage()\\\" iconAction=\\\"fas-archive\\\"></core-context-menu-item>\\n    </core-context-menu>\\n</core-navbar-buttons>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!dataLoaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n    <core-block-course-blocks [courseId]=\\\"siteHomeId\\\" [downloadEnabled]=\\\"downloadEnabled\\\">\\n        <core-loading [hideUntil]=\\\"dataLoaded\\\">\\n                <ion-list>\\n                    <!-- Site home main contents. -->\\n                    <ng-container *ngIf=\\\"section && section.hasContent\\\">\\n                        <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"section.summary\\\">\\n                            <ion-label><core-format-text [text]=\\\"section.summary\\\" contextLevel=\\\"course\\\" [contextInstanceId]=\\\"siteHomeId\\\">\\n                            </core-format-text></ion-label>\\n                        </ion-item>\\n\\n                        <core-course-module *ngFor=\\\"let module of section.modules\\\" [module]=\\\"module\\\" [courseId]=\\\"siteHomeId\\\"\\n                            [downloadEnabled]=\\\"downloadEnabled\\\" [section]=\\\"section\\\"></core-course-module>\\n                    </ng-container>\\n\\n                    <!-- Site home items: news, categories, courses, etc. -->\\n                    <ng-container *ngIf=\\\"items.length > 0\\\">\\n                        <core-spacer *ngIf=\\\"section && section!.hasContent\\\"></core-spacer>\\n                        <ng-container *ngFor=\\\"let item of items\\\">\\n                            <ng-container [ngSwitch]=\\\"item\\\">\\n                                <ng-container *ngSwitchCase=\\\"'LIST_OF_COURSE'\\\">\\n                                    <ng-template *ngTemplateOutlet=\\\"allCourseList\\\"></ng-template>\\n                                </ng-container>\\n                                <ng-container *ngSwitchCase=\\\"'LIST_OF_CATEGORIES'\\\">\\n                                    <ng-template *ngTemplateOutlet=\\\"categories\\\"></ng-template>\\n                                </ng-container>\\n                                <ng-container *ngSwitchCase=\\\"'COURSE_SEARCH_BOX'\\\">\\n                                    <ng-template *ngTemplateOutlet=\\\"courseSearch\\\"></ng-template>\\n                                </ng-container>\\n                                <ng-container *ngSwitchCase=\\\"'ENROLLED_COURSES'\\\">\\n                                    <ng-template *ngTemplateOutlet=\\\"enrolledCourseList\\\"></ng-template>\\n                                </ng-container>\\n                                <ng-container *ngSwitchCase=\\\"'NEWS_ITEMS'\\\">\\n                                    <ng-template *ngTemplateOutlet=\\\"news\\\"></ng-template>\\n                                </ng-container>\\n                            </ng-container>\\n                        </ng-container>\\n                    </ng-container>\\n                </ion-list>\\n            <core-empty-box *ngIf=\\\"!hasContent\\\" icon=\\\"fas-box-open\\\" [message]=\\\"'core.course.nocontentavailable' | translate\\\">\\n\\n            </core-empty-box>\\n        </core-loading>\\n    </core-block-course-blocks>\\n</ion-content>\\n\\n<ng-template #allCourseList>\\n    <ion-item button class=\\\"ion-text-wrap\\\" (click)=\\\"openAvailableCourses()\\\" detail=\\\"true\\\">\\n        <ion-icon name=\\\"fas-graduation-cap\\\" fixed-width slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n        <ion-label>\\n            <h2>{{ 'core.courses.availablecourses' | translate}}</h2>\\n        </ion-label>\\n    </ion-item>\\n</ng-template>\\n\\n<ng-template #news>\\n    <core-course-module class=\\\"core-sitehome-news\\\" *ngIf=\\\"newsForumModule\\\" [module]=\\\"newsForumModule\\\" [courseId]=\\\"siteHomeId\\\">\\n    </core-course-module>\\n</ng-template>\\n\\n<ng-template #categories>\\n    <ion-item button class=\\\"ion-text-wrap\\\" (click)=\\\"openCourseCategories()\\\" detail=\\\"true\\\">\\n        <ion-icon name=\\\"fas-folder\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n        <ion-label>\\n            <h2>{{ 'core.courses.categories' | translate}}</h2>\\n        </ion-label>\\n    </ion-item>\\n</ng-template>\\n\\n<ng-template #enrolledCourseList>\\n    <ion-item button class=\\\"ion-text-wrap\\\" (click)=\\\"openMyCourses()\\\" detail=\\\"true\\\">\\n        <ion-icon name=\\\"fas-graduation-cap\\\" fixed-width slot=\\\"start\\\" aria-hidden=\\\"true\\\">\\n        </ion-icon>\\n        <ion-label><h2>{{ 'core.courses.mycourses' | translate}}</h2></ion-label>\\n    </ion-item>\\n</ng-template>\\n\\n<ng-template #courseSearch>\\n    <ion-item button class=\\\"ion-text-wrap\\\" (click)=\\\"openSearch()\\\" detail=\\\"true\\\">\\n        <ion-icon name=\\\"fas-search\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n        <ion-label><h2>{{ 'core.courses.searchcourses' | translate}}</h2></ion-label>\\n    </ion-item>\\n</ng-template>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonPrivateFilesIndexPage } from '.';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AddonPrivateFilesIndexPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        AddonPrivateFilesIndexPage,\n    ],\n    exports: [RouterModule],\n})\nexport class AddonPrivateFilesIndexPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { CoreApp } from '@services/app';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { Translate } from '@singletons';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport {\n    AddonPrivateFiles,\n    AddonPrivateFilesProvider,\n    AddonPrivateFilesFile,\n    AddonPrivateFilesGetUserInfoWSResult,\n    AddonPrivateFilesGetFilesWSParams,\n} from '@/addons/privatefiles/services/privatefiles';\nimport { AddonPrivateFilesHelper } from '@/addons/privatefiles/services/privatefiles-helper';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreNavigator } from '@services/navigator';\n\n/**\n * Page that displays the list of files.\n */\n@Component({\n    selector: 'page-addon-privatefiles-index',\n    templateUrl: 'index.html',\n})\nexport class AddonPrivateFilesIndexPage implements OnInit, OnDestroy {\n\n    title!: string; // Page title.\n    root?: 'my' | 'site'; // The root of the files loaded: 'my' or 'site'.\n    path?: AddonPrivateFilesGetFilesWSParams; // The path of the directory being loaded. If empty path it means load the root.\n    showPrivateFiles!: boolean; // Whether the user can view private files.\n    showSiteFiles!: boolean; // Whether the user can view site files.\n    showUpload!: boolean; // Whether the user can upload files.\n    userQuota?: number; // The user quota (in bytes).\n    filesInfo?: AddonPrivateFilesGetUserInfoWSResult; // Info about private files (size, number of files, etc.).\n    spaceUsed?: string; // Space used in a readable format.\n    userQuotaReadable?: string; // User quota in a readable format.\n    files?: AddonPrivateFilesFile[]; // List of files.\n    component!: string; // Component to link the file downloads to.\n    filesLoaded = false; // Whether the files are loaded.\n\n    protected updateSiteObserver: CoreEventObserver;\n\n    constructor() {\n        // Update visibility if current site info is updated.\n        this.updateSiteObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n            this.setVisibility();\n        }, CoreSites.getCurrentSiteId());\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.root = CoreNavigator.getRouteParam('root');\n        const contextId = CoreNavigator.getRouteNumberParam('contextid');\n\n        if (contextId) {\n            // Loading a certain folder.\n            this.path = {\n                contextid: contextId,\n                component: CoreNavigator.getRouteParam<string>('component')!,\n                filearea: CoreNavigator.getRouteParam<string>('filearea')!,\n                itemid: CoreNavigator.getRouteNumberParam('itemid')!,\n                filepath: CoreNavigator.getRouteParam<string>('filepath')!,\n                filename: CoreNavigator.getRouteParam<string>('filename')!,\n            };\n        }\n\n        this.title = this.path?.filename || Translate.instant('addon.privatefiles.files');\n\n        this.setVisibility();\n        this.userQuota = CoreSites.getCurrentSite()?.getInfo()?.userquota;\n\n        if (!this.root) {\n            // Load private files by default.\n            if (this.showPrivateFiles) {\n                this.root = 'my';\n            } else if (this.showSiteFiles) {\n                this.root = 'site';\n            }\n        }\n\n        if (this.root) {\n            this.rootChanged(this.root);\n        } else {\n            this.filesLoaded = true;\n        }\n    }\n\n    /**\n     * Set visibility of some items based on site data.\n     */\n    protected setVisibility(): void {\n        this.showPrivateFiles = AddonPrivateFiles.canViewPrivateFiles();\n        this.showSiteFiles = AddonPrivateFiles.canViewSiteFiles();\n        this.showUpload = AddonPrivateFiles.canUploadFiles();\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    refreshData(event?: IonRefresher): void {\n        this.refreshFiles().finally(() => {\n            event?.complete();\n        });\n    }\n\n    /**\n     * Function called when the root has changed.\n     *\n     * @param root New root.\n     */\n    rootChanged(root: 'my' | 'site'): void {\n        this.root = root;\n\n        this.filesLoaded = false;\n        this.component = this.root == 'my' ? AddonPrivateFilesProvider.PRIVATE_FILES_COMPONENT :\n            AddonPrivateFilesProvider.SITE_FILES_COMPONENT;\n\n        this.fetchFiles().finally(() => {\n            this.filesLoaded = true;\n        });\n    }\n\n    /**\n     * Upload a new file.\n     */\n    async uploadFile(): Promise<void> {\n        const canUpload = await AddonPrivateFiles.versionCanUploadFiles();\n\n        if (!canUpload) {\n            CoreDomUtils.showAlertTranslated('core.notice', 'addon.privatefiles.erroruploadnotworking');\n\n            return;\n        }\n\n        if (!CoreApp.isOnline()) {\n            CoreDomUtils.showErrorModal('core.fileuploader.errormustbeonlinetoupload', true);\n\n            return;\n        }\n\n        try {\n            await AddonPrivateFilesHelper.uploadPrivateFile(this.filesInfo);\n\n            // File uploaded, refresh the list.\n            this.filesLoaded = false;\n\n            await CoreUtils.ignoreErrors(this.refreshFiles());\n\n            this.filesLoaded = true;\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.fileuploader.errorwhileuploading', true);\n        }\n    }\n\n    /**\n     * Fetch the files.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchFiles(): Promise<void> {\n        try {\n            if (this.path) {\n                // Path is set, serve the files the user requested.\n                this.files = await AddonPrivateFiles.getFiles(this.path);\n\n                return;\n            }\n\n            // The path is unknown, the user must be requesting a root.\n            if (this.root == 'site') {\n                this.title = Translate.instant('addon.privatefiles.sitefiles');\n\n                this.files = await AddonPrivateFiles.getSiteFiles();\n            } else if (this.root == 'my') {\n                this.title = Translate.instant('addon.privatefiles.files');\n\n                this.files = await AddonPrivateFiles.getPrivateFiles();\n\n                if (this.showUpload && AddonPrivateFiles.canGetPrivateFilesInfo() && this.userQuota &&\n                    this.userQuota > 0) {\n                    // Get the info to calculate the available size.\n                    this.filesInfo = await AddonPrivateFiles.getPrivateFilesInfo();\n\n                    this.spaceUsed = CoreTextUtils.bytesToSize(this.filesInfo.filesizewithoutreferences, 1);\n                    this.userQuotaReadable = CoreTextUtils.bytesToSize(this.userQuota, 1);\n                } else {\n                    // User quota isn't useful, delete it.\n                    delete this.userQuota;\n                }\n            } else {\n                // Unknown root.\n                CoreDomUtils.showErrorModal('addon.privatefiles.couldnotloadfiles', true);\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.privatefiles.couldnotloadfiles', true);\n        }\n    }\n\n    /**\n     * Refresh the displayed files.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async refreshFiles(): Promise<void> {\n        try {\n            await Promise.all([\n                AddonPrivateFiles.invalidateDirectory(this.root, this.path),\n                AddonPrivateFiles.invalidatePrivateFilesInfoForUser(),\n            ]);\n        } finally {\n            await this.fetchFiles();\n        }\n    }\n\n    /**\n     * Open a folder.\n     *\n     * @param folder Folder to open.\n     */\n    openFolder(folder: AddonPrivateFilesFile): void {\n        const params = {\n            contextid: folder.contextid,\n            component: folder.component || '',\n            filearea: folder.filearea || '',\n            itemid: folder.itemid || 0,\n            filepath: folder.filepath || '',\n            filename: folder.filename || '',\n        };\n\n        if (folder.component) {\n            // Delete unused elements that may break the request.\n            params.filename = '';\n        }\n\n        const hash = <string> Md5.hashAsciiStr(JSON.stringify(params));\n\n        CoreNavigator.navigate(`../${hash}`, { params });\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.updateSiteObserver?.off();\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule, ROUTES, Routes } from '@angular/router';\n\nimport { resolveModuleRoutes } from '@/app/app-routing.module';\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreCourseIndexPage } from './index.page';\nimport { COURSE_INDEX_ROUTES } from './index-routing.module';\n\nfunction buildRoutes(injector: Injector): Routes {\n    const routes = resolveModuleRoutes(injector, COURSE_INDEX_ROUTES);\n\n    return [\n        {\n            path: '',\n            component: CoreCourseIndexPage,\n            data: {\n                isCourseIndex: true,\n            },\n            children: routes.children,\n        },\n        ...routes.siblings,\n    ];\n}\n\n@NgModule({\n    providers: [\n        { provide: ROUTES, multi: true, useFactory: buildRoutes, deps: [Injector] },\n    ],\n    imports: [\n        CoreSharedModule,\n    ],\n    declarations: [\n        CoreCourseIndexPage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreCourseIndexPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport { CoreTabsOutletTab, CoreTabsOutletComponent } from '@components/tabs-outlet/tabs-outlet';\nimport { CoreCourseFormatDelegate } from '../../services/format-delegate';\nimport { CoreCourseOptionsDelegate } from '../../services/course-options-delegate';\nimport { CoreCourseAnyCourseData } from '@features/courses/services/courses';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreCourse, CoreCourseWSModule } from '@features/course/services/course';\nimport { CoreCourseHelper } from '@features/course/services/course-helper';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreNavigator } from '@services/navigator';\nimport { CONTENTS_PAGE_NAME } from '@features/course/course.module';\n\n/**\n * Page that displays the list of courses the user is enrolled in.\n */\n@Component({\n    selector: 'page-core-course-index',\n    templateUrl: 'index.html',\n})\nexport class CoreCourseIndexPage implements OnInit, OnDestroy {\n\n    @ViewChild(CoreTabsOutletComponent) tabsComponent?: CoreTabsOutletComponent;\n\n    title?: string;\n    course?: CoreCourseAnyCourseData;\n    tabs: CourseTab[] = [];\n    loaded = false;\n\n    protected currentPagePath = '';\n    protected selectTabObserver: CoreEventObserver;\n    protected firstTabName?: string;\n    protected module?: CoreCourseWSModule;\n    protected modParams?: Params;\n    protected contentsTab: CoreTabsOutletTab = {\n        page: CONTENTS_PAGE_NAME,\n        title: 'core.course.contents',\n        pageParams: {},\n    };\n\n    constructor(private route: ActivatedRoute) {\n        this.selectTabObserver = CoreEvents.on(CoreEvents.SELECT_COURSE_TAB, (data) => {\n            if (!data.name) {\n                // If needed, set sectionId and sectionNumber. They'll only be used if the content tabs hasn't been loaded yet.\n                if (data.sectionId) {\n                    this.contentsTab.pageParams!.sectionId = data.sectionId;\n                }\n                if (data.sectionNumber) {\n                    this.contentsTab.pageParams!.sectionNumber = data.sectionNumber;\n                }\n\n                // Select course contents.\n                this.tabsComponent?.selectByIndex(0);\n            } else if (this.tabs) {\n                const index = this.tabs.findIndex((tab) => tab.name == data.name);\n\n                if (index >= 0) {\n                    this.tabsComponent?.selectByIndex(index);\n                }\n            }\n        });\n    }\n\n    /**\n     * Component being initialized.\n     */\n    async ngOnInit(): Promise<void> {\n        // Increase route depth.\n        const path = CoreNavigator.getRouteFullPath(this.route.snapshot);\n\n        CoreNavigator.increaseRouteDepth(path.replace(/(\\/deep)+/, ''));\n\n        // Get params.\n        this.course = CoreNavigator.getRouteParam('course');\n        this.firstTabName = CoreNavigator.getRouteParam('selectedTab');\n        this.module = CoreNavigator.getRouteParam<CoreCourseWSModule>('module');\n        this.modParams = CoreNavigator.getRouteParam<Params>('modParams');\n\n        this.currentPagePath = CoreNavigator.getCurrentPath();\n        this.contentsTab.page = CoreTextUtils.concatenatePaths(this.currentPagePath, this.contentsTab.page);\n        this.contentsTab.pageParams = {\n            course: this.course,\n            sectionId: CoreNavigator.getRouteNumberParam('sectionId'),\n            sectionNumber: CoreNavigator.getRouteNumberParam('sectionNumber'),\n        };\n\n        if (this.module) {\n            this.contentsTab.pageParams!.moduleId = this.module.id;\n        }\n\n        this.tabs.push(this.contentsTab);\n        this.loaded = true;\n\n        await Promise.all([\n            this.loadCourseHandlers(),\n            this.loadTitle(),\n        ]);\n    }\n\n    /**\n     * A tab was selected.\n     */\n    tabSelected(): void {\n        if (this.module) {\n            // Now that the first tab has been selected we can load the module.\n            CoreCourseHelper.openModule(this.module, this.course!.id, this.contentsTab.pageParams!.sectionId, this.modParams);\n\n            delete this.module;\n        }\n    }\n\n    /**\n     * Load course option handlers.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async loadCourseHandlers(): Promise<void> {\n        // Load the course handlers.\n        const handlers = await CoreCourseOptionsDelegate.getHandlersToDisplay(this.course!, false, false);\n\n        let tabToLoad: number | undefined;\n\n        // Create the full path.\n        handlers.forEach((handler, index) => {\n            handler.data.page = CoreTextUtils.concatenatePaths(this.currentPagePath, handler.data.page);\n            handler.data.pageParams = handler.data.pageParams || {};\n\n            // Check if this handler should be the first selected tab.\n            if (this.firstTabName && handler.name == this.firstTabName) {\n                tabToLoad = index + 1;\n            }\n        });\n\n        this.tabs = [...this.tabs, ...handlers.map(handler => ({\n            ...handler.data,\n            name: handler.name,\n        }))];\n\n        // Select the tab if needed.\n        this.firstTabName = undefined;\n        if (tabToLoad) {\n            setTimeout(() => {\n                this.tabsComponent?.selectByIndex(tabToLoad!);\n            });\n        }\n    }\n\n    /**\n     * Load title for the page.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async loadTitle(): Promise<void> {\n        // Get the title to display initially.\n        this.title = CoreCourseFormatDelegate.getCourseTitle(this.course!);\n\n        // Load sections.\n        const sections = await CoreUtils.ignoreErrors(CoreCourse.getSections(this.course!.id, false, true));\n\n        if (!sections) {\n            return;\n        }\n\n        // Get the title again now that we have sections.\n        this.title = CoreCourseFormatDelegate.getCourseTitle(this.course!, sections);\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        const path = CoreNavigator.getRouteFullPath(this.route.snapshot);\n\n        CoreNavigator.decreaseRouteDepth(path.replace(/(\\/deep)+/, ''));\n        this.selectTabObserver?.off();\n    }\n\n    /**\n     * User entered the page.\n     */\n    ionViewDidEnter(): void {\n        this.tabsComponent?.ionViewDidEnter();\n    }\n\n    /**\n     * User left the page.\n     */\n    ionViewDidLeave(): void {\n        this.tabsComponent?.ionViewDidLeave();\n    }\n\n}\n\ntype CourseTab = CoreTabsOutletTab & {\n    name?: string;\n};\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreBlockComponentsModule } from '@/core/features/block/components/components.module';\nimport { CoreCourseComponentsModule } from '@features/course/components/components.module';\n\nimport { CoreSiteHomeIndexPage } from '.';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreSiteHomeIndexPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreBlockComponentsModule,\n        CoreCourseComponentsModule,\n    ],\n    declarations: [\n        CoreSiteHomeIndexPage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreSiteHomeIndexPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\nimport { Params } from '@angular/router';\n\nimport { CoreSite, CoreSiteConfig } from '@classes/site';\nimport { CoreCourse, CoreCourseModuleBasicInfo, CoreCourseWSSection } from '@features/course/services/course';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreSites } from '@services/sites';\nimport { CoreSiteHome } from '@features/sitehome/services/sitehome';\nimport { CoreCourses, CoreCoursesProvider } from '@features//courses/services/courses';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreCourseHelper, CoreCourseModule } from '@features/course/services/course-helper';\nimport { CoreBlockCourseBlocksComponent } from '@features/block/components/course-blocks/course-blocks';\nimport { CoreCourseModuleDelegate, CoreCourseModuleHandlerData } from '@features/course/services/module-delegate';\nimport { CoreCourseModulePrefetchDelegate } from '@features/course/services/module-prefetch-delegate';\nimport { CoreNavigator } from '@services/navigator';\n\n/**\n * Page that displays site home index.\n */\n@Component({\n    selector: 'page-core-sitehome-index',\n    templateUrl: 'index.html',\n})\nexport class CoreSiteHomeIndexPage implements OnInit, OnDestroy {\n\n    @ViewChild(CoreBlockCourseBlocksComponent) courseBlocksComponent?: CoreBlockCourseBlocksComponent;\n\n    dataLoaded = false;\n    section?: CoreCourseWSSection & {\n        hasContent?: boolean;\n    };\n\n    hasContent = false;\n    items: string[] = [];\n    siteHomeId = 1;\n    currentSite?: CoreSite;\n    searchEnabled = false;\n    downloadEnabled = false;\n    downloadCourseEnabled = false;\n    downloadCoursesEnabled = false;\n    downloadEnabledIcon = 'far-square';\n    newsForumModule?: NewsForum;\n\n    protected updateSiteObserver?: CoreEventObserver;\n\n    /**\n     * Page being initialized.\n     */\n    ngOnInit(): void {\n        this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\n        this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\n        this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n\n        // Refresh the enabled flags if site is updated.\n        this.updateSiteObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n            this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\n            this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\n            this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n\n            this.switchDownload(this.downloadEnabled && this.downloadCourseEnabled && this.downloadCoursesEnabled);\n        }, CoreSites.getCurrentSiteId());\n\n        this.currentSite = CoreSites.getCurrentSite()!;\n        this.siteHomeId = CoreSites.getCurrentSiteHomeId();\n\n        const module = CoreNavigator.getRouteParam<CoreCourseModule>('module');\n        if (module) {\n            const modParams = CoreNavigator.getRouteParam<Params>('modParams');\n            CoreCourseHelper.openModule(module, this.siteHomeId, undefined, modParams);\n        }\n\n        this.loadContent().finally(() => {\n            this.dataLoaded = true;\n        });\n    }\n\n    /**\n     * Convenience function to fetch the data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async loadContent(): Promise<void> {\n        this.hasContent = false;\n\n        const config = this.currentSite!.getStoredConfig() || { numsections: 1, frontpageloggedin: undefined };\n\n        this.items = await CoreSiteHome.getFrontPageItems(config.frontpageloggedin);\n        this.hasContent = this.items.length > 0;\n\n        if (this.items.some((item) => item == 'NEWS_ITEMS')) {\n            // Get the news forum.\n            try {\n                const forum = await CoreSiteHome.getNewsForum();\n                this.newsForumModule = await CoreCourse.getModuleBasicInfo(forum.cmid);\n                this.newsForumModule.handlerData = CoreCourseModuleDelegate.getModuleDataFor(\n                    this.newsForumModule.modname,\n                    this.newsForumModule,\n                    this.siteHomeId,\n                    this.newsForumModule.section,\n                    true,\n                );\n            } catch {\n                // Ignore errors.\n            }\n        }\n\n        try {\n            const sections = await CoreCourse.getSections(this.siteHomeId!, false, true);\n\n            // Check \"Include a topic section\" setting from numsections.\n            this.section = config.numsections ? sections.find((section) => section.section == 1) : undefined;\n            if (this.section) {\n                const result = CoreCourseHelper.addHandlerDataForModules(\n                    [this.section],\n                    this.siteHomeId,\n                    undefined,\n                    undefined,\n                    true,\n                );\n                this.hasContent = result.hasContent || this.hasContent;\n            }\n\n            // Add log in Moodle.\n            CoreCourse.logView(\n                this.siteHomeId!,\n                undefined,\n                undefined,\n                this.currentSite!.getInfo()?.sitename,\n            ).catch(() => {\n                // Ignore errors.\n            });\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.course.couldnotloadsectioncontent', true);\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    doRefresh(refresher?: IonRefresher): void {\n        const promises: Promise<unknown>[] = [];\n\n        promises.push(CoreCourse.invalidateSections(this.siteHomeId!));\n        promises.push(this.currentSite!.invalidateConfig().then(async () => {\n            // Config invalidated, fetch it again.\n            const config: CoreSiteConfig = await this.currentSite!.getConfig();\n            this.currentSite!.setConfig(config);\n\n            return;\n        }));\n\n        if (this.section && this.section.modules) {\n            // Invalidate modules prefetch data.\n            promises.push(CoreCourseModulePrefetchDelegate.invalidateModules(this.section.modules, this.siteHomeId));\n        }\n\n        if (this.courseBlocksComponent) {\n            promises.push(this.courseBlocksComponent.invalidateBlocks());\n        }\n\n        Promise.all(promises).finally(async () => {\n            const p2: Promise<unknown>[] = [];\n\n            p2.push(this.loadContent());\n            if (this.courseBlocksComponent) {\n                p2.push(this.courseBlocksComponent.loadContent());\n            }\n\n            await Promise.all(p2).finally(() => {\n                refresher?.complete();\n            });\n        });\n    }\n\n    /**\n     * Toggle download enabled.\n     */\n    toggleDownload(): void {\n        this.switchDownload(!this.downloadEnabled);\n    }\n\n    /**\n     * Convenience function to switch download enabled.\n     *\n     * @param enable If enable or disable.\n     */\n    protected switchDownload(enable: boolean): void {\n        this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && enable;\n        this.downloadEnabledIcon = this.downloadEnabled ? 'far-check-square' : 'far-square';\n        CoreEvents.trigger(CoreCoursesProvider.EVENT_DASHBOARD_DOWNLOAD_ENABLED_CHANGED, { enabled: this.downloadEnabled });\n    }\n\n    /**\n     * Open page to manage courses storage.\n     */\n    manageCoursesStorage(): void {\n        CoreNavigator.navigateToSitePath('/storage');\n    }\n\n    /**\n     * Go to search courses.\n     */\n    openSearch(): void {\n        CoreNavigator.navigateToSitePath('courses/search');\n    }\n\n    /**\n     * Go to available courses.\n     */\n    openAvailableCourses(): void {\n        CoreNavigator.navigateToSitePath('courses/all');\n    }\n\n    /**\n     * Go to my courses.\n     */\n    openMyCourses(): void {\n        CoreNavigator.navigateToSitePath('courses/my');\n    }\n\n    /**\n     * Go to course categories.\n     */\n    openCourseCategories(): void {\n        CoreNavigator.navigateToSitePath('courses/categories');\n    }\n\n    /**\n     * Component being destroyed.\n     */\n    ngOnDestroy(): void {\n        this.updateSiteObserver?.off();\n    }\n\n}\n\ntype NewsForum = CoreCourseModuleBasicInfo & {\n    handlerData?: CoreCourseModuleHandlerData;\n};\n"],"sourceRoot":"webpack:///"}