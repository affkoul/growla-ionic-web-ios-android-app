{"version":3,"sources":["./src/core/features/courses/pages/categories/categories.html","./src/core/features/courses/pages/categories/categories.module.ts","./src/core/features/courses/pages/categories/categories.ts"],"names":[],"mappings":"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","file":"pages-categories-categories-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>\\n            <core-format-text [text]=\\\"title\\\" contextLevel=\\\"coursecat\\\" [contextInstanceId]=\\\"currentCategory && currentCategory!.id\\\">\\n            </core-format-text>\\n        </h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!categoriesLoaded\\\" (ionRefresh)=\\\"refreshCategories($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n    <core-loading [hideUntil]=\\\"categoriesLoaded\\\">\\n        <ion-item *ngIf=\\\"currentCategory\\\" class=\\\"ion-text-wrap\\\">\\n            <ion-icon name=\\\"fas-folder\\\" slot=\\\"start\\\" [attr.aria-label]=\\\"'core.category' | translate\\\"></ion-icon>\\n            <ion-label>\\n                <h2>\\n                    <core-format-text [text]=\\\"currentCategory!.name\\\" contextLevel=\\\"coursecat\\\"\\n                    [contextInstanceId]=\\\"currentCategory!.id\\\"></core-format-text>\\n                </h2>\\n            </ion-label>\\n        </ion-item>\\n        <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"currentCategory && currentCategory!.description\\\">\\n            <ion-label>\\n                <h2>\\n                    <core-format-text [text]=\\\"currentCategory!.description\\\" maxHeight=\\\"60\\\" contextLevel=\\\"coursecat\\\"\\n            [contextInstanceId]=\\\"currentCategory!.id\\\"></core-format-text>\\n                </h2>\\n            </ion-label>\\n        </ion-item>\\n\\n        <div *ngIf=\\\"categories.length > 0\\\">\\n            <ion-item-divider>\\n                <ion-label>\\n                    <h2>{{ 'core.courses.categories' | translate }}</h2>\\n                </ion-label>\\n            </ion-item-divider>\\n            <section *ngFor=\\\"let category of categories\\\">\\n                <ion-item button class=\\\"ion-text-wrap\\\" (click)=\\\"openCategory(category.id)\\\" [attr.aria-label]=\\\"category.name\\\"\\n                    detail=\\\"true\\\">\\n                    <ion-icon name=\\\"fas-folder\\\" slot=\\\"start\\\" [attr.aria-label]=\\\"'core.category' | translate\\\"></ion-icon>\\n                    <ion-label>\\n                        <h2>\\n                            <core-format-text [text]=\\\"category.name\\\" contextLevel=\\\"coursecat\\\" [contextInstanceId]=\\\"category.id\\\">\\n                            </core-format-text>\\n                        </h2>\\n                    </ion-label>\\n                    <ion-badge slot=\\\"end\\\" *ngIf=\\\"category.coursecount > 0\\\" color=\\\"light\\\">\\n                        <span aria-hidden=\\\"true\\\">{{ category.coursecount }}</span>\\n                        <span class=\\\"sr-only\\\">{{ 'core.courses.therearecourses' | translate:{ $a: category.coursecount } }}</span>\\n                    </ion-badge>\\n                </ion-item>\\n            </section>\\n        </div>\\n\\n        <div *ngIf=\\\"courses.length > 0\\\">\\n            <ion-item-divider>\\n                <ion-label>\\n                    <h2>{{ 'core.courses.courses' | translate }}</h2>\\n                </ion-label>\\n            </ion-item-divider>\\n            <core-courses-course-list-item *ngFor=\\\"let course of courses\\\" [course]=\\\"course\\\"></core-courses-course-list-item>\\n        </div>\\n        <core-empty-box *ngIf=\\\"!categories.length && !courses.length\\\" icon=\\\"fas-graduation-cap\\\"\\n            [message]=\\\"'core.courses.nocoursesyet' | translate\\\">\\n        </core-empty-box>\\n    </core-loading>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreCoursesComponentsModule } from '../../components/components.module';\n\nimport { CoreCoursesCategoriesPage } from './categories';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreCoursesCategoriesPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreCoursesComponentsModule,\n    ],\n    declarations: [\n        CoreCoursesCategoriesPage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreCoursesCategoriesPageModule { }\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreCategoryData, CoreCourses, CoreCourseSearchedData } from '../../services/courses';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\n\n/**\n * Page that displays a list of categories and the courses in the current category if any.\n */\n@Component({\n    selector: 'page-core-courses-categories',\n    templateUrl: 'categories.html',\n})\nexport class CoreCoursesCategoriesPage implements OnInit {\n\n    title: string;\n    currentCategory?: CoreCategoryData;\n    categories: CoreCategoryData[] = [];\n    courses: CoreCourseSearchedData[] = [];\n    categoriesLoaded = false;\n\n    protected categoryId = 0;\n\n    constructor() {\n        this.title = Translate.instant('core.courses.categories');\n    }\n\n    /**\n     * View loaded.\n     */\n    ngOnInit(): void {\n        this.categoryId = CoreNavigator.getRouteNumberParam('id') || 0;\n\n        this.fetchCategories().finally(() => {\n            this.categoriesLoaded = true;\n        });\n    }\n\n    /**\n     * Fetch the categories.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchCategories(): Promise<void> {\n        try{\n            const categories: CoreCategoryData[] = await CoreCourses.getCategories(this.categoryId, true);\n\n            this.currentCategory = undefined;\n\n            const index = categories.findIndex((category) => category.id == this.categoryId);\n\n            if (index >= 0) {\n                this.currentCategory = categories[index];\n                // Delete current Category to avoid problems with the formatTree.\n                delete categories[index];\n            }\n\n            // Sort by depth and sortorder to avoid problems formatting Tree.\n            categories.sort((a, b) => {\n                if (a.depth == b.depth) {\n                    return (a.sortorder > b.sortorder) ? 1 : ((b.sortorder > a.sortorder) ? -1 : 0);\n                }\n\n                return a.depth > b.depth ? 1 : -1;\n            });\n\n            this.categories = CoreUtils.formatTree(categories, 'parent', 'id', this.categoryId);\n\n            if (this.currentCategory) {\n                this.title = this.currentCategory.name;\n\n                try {\n                    this.courses = await CoreCourses.getCoursesByField('category', this.categoryId);\n                } catch (error) {\n                    CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcourses', true);\n                }\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcategories', true);\n        }\n    }\n\n    /**\n     * Refresh the categories.\n     *\n     * @param refresher Refresher.\n     */\n    refreshCategories(refresher?: IonRefresher): void {\n        const promises: Promise<void>[] = [];\n\n        promises.push(CoreCourses.invalidateUserCourses());\n        promises.push(CoreCourses.invalidateCategories(this.categoryId, true));\n        promises.push(CoreCourses.invalidateCoursesByField('category', this.categoryId));\n        promises.push(CoreSites.getCurrentSite()!.invalidateConfig());\n\n        Promise.all(promises).finally(() => {\n            this.fetchCategories().finally(() => {\n                refresher?.complete();\n            });\n        });\n    }\n\n    /**\n     * Open a category.\n     *\n     * @param categoryId Category Id.\n     */\n    openCategory(categoryId: number): void {\n        CoreNavigator.navigateToSitePath('courses/categories/' + categoryId);\n    }\n\n}\n"],"sourceRoot":"webpack:///"}