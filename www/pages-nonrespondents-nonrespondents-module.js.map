{"version":3,"sources":["./src/addons/mod/feedback/pages/nonrespondents/nonrespondents.html","./src/addons/mod/feedback/pages/nonrespondents/nonrespondents.module.ts","./src/addons/mod/feedback/pages/nonrespondents/nonrespondents.ts"],"names":[],"mappings":"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","file":"pages-nonrespondents-nonrespondents-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>{{ 'addon.mod_feedback.responses' |translate }}</h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshFeedback($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\n        <ion-list class=\\\"ion-no-margin\\\">\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"groupInfo && (groupInfo.separateGroups || groupInfo.visibleGroups)\\\">\\n                <ion-label id=\\\"addon-feedback-groupslabel\\\">\\n                    <ng-container *ngIf=\\\"groupInfo.separateGroups\\\">{{'core.groupsseparate' | translate }}</ng-container>\\n                    <ng-container *ngIf=\\\"groupInfo.visibleGroups\\\">{{'core.groupsvisible' | translate }}</ng-container>\\n                </ion-label>\\n                <ion-select [(ngModel)]=\\\"selectedGroup\\\" (ionChange)=\\\"loadAttempts(selectedGroup)\\\"\\n                    aria-labelledby=\\\"addon-feedback-groupslabel\\\" interface=\\\"action-sheet\\\"\\n                    [interfaceOptions]=\\\"{header: 'core.group' | translate}\\\">\\n                    <ion-select-option *ngFor=\\\"let groupOpt of groupInfo.groups\\\" [value]=\\\"groupOpt.id\\\">\\n                        {{groupOpt.name}}\\n                    </ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n\\n            <ion-item-divider>\\n                <ion-label><h2>{{ 'addon.mod_feedback.non_respondents_students' | translate : {$a: total } }}</h2></ion-label>\\n            </ion-item-divider>\\n            <ng-container *ngIf=\\\"total > 0\\\">\\n                <ion-item *ngFor=\\\"let user of users\\\" class=\\\"ion-text-wrap\\\">\\n                    <core-user-avatar [user]=\\\"user\\\" slot=\\\"start\\\"></core-user-avatar>\\n                    <ion-label>\\n                        <p class=\\\"item-heading\\\">{{ user.fullname }}</p>\\n                        <p>\\n                            <ion-badge color=\\\"success\\\" *ngIf=\\\"user.started\\\">\\n                                {{ 'addon.mod_feedback.started' | translate}}\\n                            </ion-badge>\\n                            <ion-badge color=\\\"danger\\\" *ngIf=\\\"!user.started\\\">\\n                                {{ 'addon.mod_feedback.not_started' | translate}}\\n                            </ion-badge>\\n                        </p>\\n                    </ion-label>\\n                </ion-item>\\n            </ng-container>\\n\\n            <core-infinite-loading [enabled]=\\\"canLoadMore\\\" (action)=\\\"loadAttempts(undefined, $event)\\\" [error]=\\\"loadMoreError\\\">\\n            </core-infinite-loading>\\n        </ion-list>\\n    </core-loading>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddonModFeedbackNonRespondentsPage } from './nonrespondents';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AddonModFeedbackNonRespondentsPage,\n    },\n];\n\n@NgModule({\n    declarations: [\n        AddonModFeedbackNonRespondentsPage,\n    ],\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    exports: [RouterModule],\n})\nexport class AddonModFeedbackNonRespondentsPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreGroupInfo, CoreGroups } from '@services/groups';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonModFeedback, AddonModFeedbackWSFeedback } from '../../services/feedback';\nimport { AddonModFeedbackHelper, AddonModFeedbackNonRespondent } from '../../services/feedback-helper';\n\n/**\n * Page that displays feedback non respondents.\n */\n@Component({\n    selector: 'page-addon-mod-feedback-nonrespondents',\n    templateUrl: 'nonrespondents.html',\n})\nexport class AddonModFeedbackNonRespondentsPage implements OnInit {\n\n    protected cmId!: number;\n    protected courseId!: number;\n    protected feedback?: AddonModFeedbackWSFeedback;\n    protected page = 0;\n\n    selectedGroup!: number;\n    groupInfo?: CoreGroupInfo;\n    users: AddonModFeedbackNonRespondent[] = [];\n    total = 0;\n    canLoadMore = false;\n    loaded = false;\n    loadMoreError = false;\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.cmId = CoreNavigator.getRouteNumberParam('cmId')!;\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId')!;\n        this.selectedGroup = CoreNavigator.getRouteNumberParam('group') || 0;\n\n        this.fetchData();\n    }\n\n    /**\n     * Fetch all the data required for the view.\n     *\n     * @param refresh Empty events array first.\n     * @return Promise resolved when done.\n     */\n    protected async fetchData(refresh: boolean = false): Promise<void> {\n        this.page = 0;\n        this.total = 0;\n        this.users = [];\n\n        try {\n            this.feedback = await AddonModFeedback.getFeedback(this.courseId, this.cmId);\n\n            this.groupInfo = await CoreGroups.getActivityGroupInfo(this.cmId);\n\n            this.selectedGroup = CoreGroups.validateGroupId(this.selectedGroup, this.groupInfo);\n\n            await this.loadGroupUsers(this.selectedGroup);\n        } catch (message) {\n            CoreDomUtils.showErrorModalDefault(message, 'core.course.errorgetmodule', true);\n\n            if (!refresh) {\n                // Some call failed on first fetch, go back.\n                CoreNavigator.back();\n            }\n        }\n    }\n\n    /**\n     * Load Group responses.\n     *\n     * @param groupId If defined it will change group if not, it will load more users for the same group.\n     * @return Promise resolved when done.\n     */\n    protected async loadGroupUsers(groupId?: number): Promise<void> {\n        this.loadMoreError = false;\n\n        if (typeof groupId == 'undefined') {\n            this.page++;\n        } else {\n            this.selectedGroup = groupId;\n            this.page = 0;\n            this.total = 0;\n            this.users = [];\n            this.loaded = false;\n        }\n\n        try {\n            const response = await AddonModFeedbackHelper.getNonRespondents(this.feedback!.id, {\n                groupId: this.selectedGroup,\n                page: this.page,\n                cmId: this.cmId,\n            });\n\n            this.total = response.total;\n            if (this.users.length < response.total) {\n                this.users = this.users.concat(response.users);\n            }\n\n            this.canLoadMore = this.users.length < response.total;\n        } catch (error) {\n            this.loadMoreError = true;\n\n            throw error;\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Change selected group or load more users.\n     *\n     * @param groupId Group ID selected. If not defined, it will load more users.\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     */\n    async loadAttempts(groupId?: number, infiniteComplete?: () => void): Promise<void> {\n        try {\n            await this.loadGroupUsers(groupId);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n        } finally {\n            infiniteComplete && infiniteComplete();\n        }\n    }\n\n    /**\n     * Refresh the attempts.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshFeedback(refresher: IonRefresher): Promise<void> {\n        try {\n            const promises: Promise<void>[] = [];\n\n            promises.push(CoreGroups.invalidateActivityGroupInfo(this.cmId));\n            if (this.feedback) {\n                promises.push(AddonModFeedback.invalidateNonRespondentsData(this.feedback.id));\n            }\n\n            await CoreUtils.ignoreErrors(Promise.all(promises));\n\n            await this.fetchData(true);\n        } finally {\n            refresher.complete();\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}