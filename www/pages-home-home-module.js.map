{"version":3,"sources":["./src/core/features/mainmenu/pages/home/home.html","./src/core/features/mainmenu/pages/home/home.module.ts","./src/core/features/mainmenu/pages/home/home.scss","./src/core/features/mainmenu/pages/home/home.ts"],"names":[],"mappings":"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","file":"pages-home-home-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>\\n            <core-format-text [text]=\\\"siteName\\\" contextLevel=\\\"system\\\" [contextInstanceId]=\\\"0\\\"></core-format-text>\\n            <img src=\\\"assets/img/top_logo.png\\\" class=\\\"core-header-logo\\\" [alt]=\\\"siteName\\\">\\n        </h1>\\n    \\n    </ion-toolbar>\\n</ion-header>\\n<core-loading [hideUntil]=\\\"loaded\\\">\\n    <core-empty-box *ngIf=\\\"tabs.length == 0\\\" icon=\\\"fas-home\\\" [message]=\\\"'core.courses.nocourses' | translate\\\"></core-empty-box>\\n</core-loading>\\n<core-tabs-outlet *ngIf=\\\"tabs.length > 0\\\" [selectedIndex]=\\\"selectedTab\\\" [hideUntil]=\\\"loaded\\\" [tabs]=\\\"tabs\\\"\\n    (ionChange)=\\\"tabSelected()\\\">\\n</core-tabs-outlet>\\n\";","// (C) Copyright 2015 GROWLA Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule, ROUTES, Routes } from '@angular/router';\n\nimport { resolveModuleRoutes } from '@/app/app-routing.module';\nimport { CoreSharedModule } from '@/core/shared.module';\n\nimport { CoreMainMenuHomePage } from './home';\nimport { MAIN_MENU_HOME_ROUTES } from './home-routing.module';\nimport { buildTabMainRoutes } from '@features/mainmenu/mainmenu-tab-routing.module';\nimport { CoreMainMenuHomeHandlerService } from '@features/mainmenu/services/handlers/mainmenu';\n\nfunction buildRoutes(injector: Injector): Routes {\n    const routes = resolveModuleRoutes(injector, MAIN_MENU_HOME_ROUTES);\n\n    return [\n        ...buildTabMainRoutes(injector, {\n            path: '',\n            data: {\n                mainMenuTabRoot: CoreMainMenuHomeHandlerService.PAGE_NAME,\n            },\n            component: CoreMainMenuHomePage,\n            children: routes.children,\n        }),\n        ...routes.siblings,\n    ];\n}\n\n@NgModule({\n    imports: [\n        CoreSharedModule,\n    ],\n    providers: [\n        { provide: ROUTES, multi: true, useFactory: buildRoutes, deps: [Injector] },\n    ],\n    declarations: [\n        CoreMainMenuHomePage,\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class CoreMainMenuHomePageModule {}\n","export default \"/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/*\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/*\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n * Extracted from ionic.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\n.in-toolbar h1 .core-header-logo {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","// (C) Copyright 2015 GROWLA Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { CoreSites } from '@services/sites';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreTabsOutletComponent, CoreTabsOutletTab } from '@components/tabs-outlet/tabs-outlet';\nimport { CoreMainMenuHomeDelegate, CoreMainMenuHomeHandlerToDisplay } from '../../services/home-delegate';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ActivatedRoute } from '@angular/router';\nimport { CoreNavigator, CoreRedirectPayload } from '@services/navigator';\nimport { CoreCourseHelper } from '@features/course/services/course-helper';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreContentLinksDelegate } from '@features/contentlinks/services/contentlinks-delegate';\nimport { CoreContentLinksHelper } from '@features/contentlinks/services/contentlinks-helper';\n\n/**\n * Page that displays the Home.\n */\n@Component({\n    selector: 'page-core-mainmenu-home',\n    templateUrl: 'home.html',\n    styleUrls: ['home.scss'],\n})\nexport class CoreMainMenuHomePage implements OnInit {\n\n    @ViewChild(CoreTabsOutletComponent) tabsComponent?: CoreTabsOutletComponent;\n\n    siteName!: string;\n    tabs: CoreTabsOutletTab[] = [];\n    loaded = false;\n    selectedTab?: number;\n\n    protected subscription?: Subscription;\n    protected updateSiteObserver?: CoreEventObserver;\n    protected pendingRedirect?: CoreRedirectPayload;\n    protected urlToOpen?: string;\n\n    constructor(\n        protected route: ActivatedRoute,\n    ) {\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit(): void {\n        this.route.queryParams.subscribe((params: Partial<CoreRedirectPayload> & { urlToOpen?: string }) => {\n            this.urlToOpen = params.urlToOpen ?? this.urlToOpen;\n\n            if (params.redirectPath) {\n                this.pendingRedirect = {\n                    redirectPath: params.redirectPath,\n                    redirectOptions: params.redirectOptions,\n                };\n            }\n        });\n\n        this.loadSiteName();\n\n        this.subscription = CoreMainMenuHomeDelegate.getHandlersObservable().subscribe((handlers) => {\n            handlers && this.initHandlers(handlers);\n        });\n\n        // Refresh the enabled flags if site is updated.\n        this.updateSiteObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n            this.loadSiteName();\n        }, CoreSites.getCurrentSiteId());\n    }\n\n    /**\n     * Init handlers on change (size or handlers).\n     */\n    initHandlers(handlers: CoreMainMenuHomeHandlerToDisplay[]): void {\n        // Re-build the list of tabs.\n        const loaded = CoreMainMenuHomeDelegate.areHandlersLoaded();\n        const handlersMap = CoreUtils.arrayToObject(handlers, 'title');\n        const newTabs = handlers.map((handler): CoreTabsOutletTab => {\n            const tab = this.tabs.find(tab => tab.title == handler.title);\n\n            // If a handler is already in the list, use existing object to prevent re-creating the tab.\n            if (tab) {\n                return tab;\n            }\n\n            return {\n                page: `/main/home/${handler.page}`,\n                pageParams: handler.pageParams,\n                title: handler.title,\n                class: handler.class,\n                icon: handler.icon,\n                badge: handler.badge,\n            };\n        });\n\n        // Sort them by priority so new handlers are in the right position.\n        newTabs.sort((a, b) => (handlersMap[b.title].priority || 0) - (handlersMap[a.title].priority || 0));\n\n        if (typeof this.selectedTab == 'undefined' && newTabs.length > 0) {\n            let maxPriority = 0;\n\n            this.selectedTab = Object.entries(newTabs).reduce((maxIndex, [index, tab]) => {\n                const selectPriority = handlersMap[tab.title].selectPriority ?? 0;\n\n                if (selectPriority > maxPriority) {\n                    maxPriority = selectPriority;\n                    maxIndex = Number(index);\n                }\n\n                return maxIndex;\n            }, 0);\n        }\n\n        this.tabs = newTabs;\n\n        // Try to prevent empty box displayed for an instant when it shouldn't.\n        setTimeout(() => {\n            this.loaded = loaded;\n        }, 50);\n    }\n\n    /**\n     * Load the site name.\n     */\n    protected loadSiteName(): void {\n        this.siteName = CoreSites.getCurrentSite()!.getSiteName();\n    }\n\n    /**\n     * Handle a redirect.\n     *\n     * @param data Data received.\n     */\n    protected handleRedirect(data: CoreRedirectPayload): void {\n        const params = data.redirectOptions?.params;\n        const coursePathMatches = data.redirectPath.match(/^course\\/(\\d+)\\/?$/);\n\n        if (coursePathMatches) {\n            if (!params?.course) {\n                CoreCourseHelper.getAndOpenCourse(Number(coursePathMatches[1]), params);\n            } else {\n                CoreCourse.openCourse(params.course, params);\n            }\n        } else {\n            CoreNavigator.navigateToSitePath(data.redirectPath, {\n                ...data.redirectOptions,\n                preferCurrentTab: false,\n            });\n        }\n    }\n\n    /**\n     * Handle a URL to open.\n     *\n     * @param url URL to open.\n     */\n    protected async handleUrlToOpen(url: string): Promise<void> {\n        const actions = await CoreContentLinksDelegate.getActionsFor(url, undefined);\n\n        const action = CoreContentLinksHelper.getFirstValidAction(actions);\n        if (action) {\n            action.action(action.sites![0]);\n        }\n    }\n\n    /**\n     * Tab was selected.\n     */\n    tabSelected(): void {\n        if (this.pendingRedirect) {\n            this.handleRedirect(this.pendingRedirect);\n        } else if (this.urlToOpen) {\n            this.handleUrlToOpen(this.urlToOpen);\n        }\n\n        delete this.pendingRedirect;\n        delete this.urlToOpen;\n    }\n\n    /**\n     * User entered the page.\n     */\n    ionViewDidEnter(): void {\n        this.tabsComponent?.ionViewDidEnter();\n    }\n\n    /**\n     * User left the page.\n     */\n    ionViewDidLeave(): void {\n        this.tabsComponent?.ionViewDidLeave();\n    }\n\n}\n"],"sourceRoot":"webpack:///"}