{"version":3,"sources":["./src/core/features/courses/pages/available-courses/available-courses.html","./src/core/features/courses/pages/available-courses/available-courses.module.ts","./src/core/features/courses/pages/available-courses/available-courses.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,iQAAkM,+CAA+C,yNAAyN,oCAAoC,+eAA+e,E;;;;;;;;;;;;ACA5+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEQ;AACc;AAEC;AACyB;AAEX;AAEtE,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kFAA+B;KAC7C;CACJ,CAAC;IAaW,qCAAqC,SAArC,qCAAqC;CAAI;AAAzC,qCAAqC;IAXjD,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,oEAAgB;YAChB,yFAA2B;SAC9B;QACD,YAAY,EAAE;YACV,kFAA+B;SAClC;QACD,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,qCAAqC,CAAI;AAAJ;;;;;;;;;;;;;ACxClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEiB;AAGN;AACO;AAC0B;AAE7E;;GAEG;IAKU,+BAA+B,SAA/B,+BAA+B;;QAExC,YAAO,GAA6B,EAAE,CAAC;QACvC,kBAAa,GAAG,KAAK,CAAC;IA8C1B,CAAC;IA5CG;;OAEG;IACH,QAAQ;QACJ,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE;YAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACa,WAAW;;YACvB,MAAM,iBAAiB,GAAG,yDAAS,CAAC,oBAAoB,EAAE,CAAC;YAE3D,IAAI;gBACA,MAAM,OAAO,GAAG,MAAM,6DAAW,CAAC,iBAAiB,EAAE,CAAC;gBAEtD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,IAAI,iBAAiB,CAAC,CAAC;aAC7E;YAAC,OAAO,KAAK,EAAE;gBACZ,gEAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,+BAA+B,EAAE,IAAI,CAAC,CAAC;aACpF;QACL,CAAC;KAAA;IAED;;;;OAIG;IACH,cAAc,CAAC,SAAuB;QAClC,MAAM,QAAQ,GAAoB,EAAE,CAAC;QAErC,QAAQ,CAAC,IAAI,CAAC,6DAAW,CAAC,qBAAqB,EAAE,CAAC,CAAC;QACnD,QAAQ,CAAC,IAAI,CAAC,6DAAW,CAAC,wBAAwB,EAAE,CAAC,CAAC;QAEtD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE;YAC/B,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE;gBAC5B,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,GAAG;YAC1B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;CAEJ;AAjDY,+BAA+B;IAJ3C,+DAAS,CAAC;QACP,QAAQ,EAAE,qCAAqC;QAC/C,mQAAqC;KACxC,CAAC;GACW,+BAA+B,CAiD3C;AAjD2C","file":"pages-available-courses-available-courses-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>{{ 'core.courses.availablecourses' | translate }}</h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!coursesLoaded\\\" (ionRefresh)=\\\"refreshCourses($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n    <core-loading [hideUntil]=\\\"coursesLoaded\\\">\\n        <ng-container *ngIf=\\\"courses.length > 0\\\">\\n            <core-courses-course-list-item *ngFor=\\\"let course of courses\\\" [course]=\\\"course\\\"></core-courses-course-list-item>\\n        </ng-container>\\n        <core-empty-box *ngIf=\\\"!courses.length\\\" icon=\\\"fas-graduation-cap\\\" [message]=\\\"'core.courses.nocourses' | translate\\\"></core-empty-box>\\n    </core-loading>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreCoursesComponentsModule } from '../../components/components.module';\n\nimport { CoreCoursesAvailableCoursesPage } from './available-courses';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreCoursesAvailableCoursesPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreCoursesComponentsModule,\n    ],\n    declarations: [\n        CoreCoursesAvailableCoursesPage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreCoursesAvailableCoursesPageModule { }\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\n\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreCourses, CoreCourseSearchedData } from '../../services/courses';\n\n/**\n * Page that displays available courses in current site.\n */\n@Component({\n    selector: 'page-core-courses-available-courses',\n    templateUrl: 'available-courses.html',\n})\nexport class CoreCoursesAvailableCoursesPage implements OnInit {\n\n    courses: CoreCourseSearchedData[] = [];\n    coursesLoaded = false;\n\n    /**\n     * View loaded.\n     */\n    ngOnInit(): void {\n        this.loadCourses().finally(() => {\n            this.coursesLoaded = true;\n        });\n    }\n\n    /**\n     * Load the courses.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async loadCourses(): Promise<void> {\n        const frontpageCourseId = CoreSites.getCurrentSiteHomeId();\n\n        try {\n            const courses = await CoreCourses.getCoursesByField();\n\n            this.courses = courses.filter((course) => course.id != frontpageCourseId);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcourses', true);\n        }\n    }\n\n    /**\n     * Refresh the courses.\n     *\n     * @param refresher Refresher.\n     */\n    refreshCourses(refresher: IonRefresher): void {\n        const promises: Promise<void>[] = [];\n\n        promises.push(CoreCourses.invalidateUserCourses());\n        promises.push(CoreCourses.invalidateCoursesByField());\n\n        Promise.all(promises).finally(() => {\n            this.loadCourses().finally(() => {\n                refresher?.complete();\n            });\n        });\n    }\n\n}\n"],"sourceRoot":"webpack:///"}