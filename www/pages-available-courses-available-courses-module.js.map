{"version":3,"sources":["./src/core/features/courses/pages/available-courses/available-courses.html","./src/core/features/courses/pages/available-courses/available-courses.module.ts","./src/core/features/courses/pages/available-courses/available-courses.scss","./src/core/features/courses/pages/available-courses/available-courses.ts"],"names":[],"mappings":"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","file":"pages-available-courses-available-courses-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>{{ 'core.courses.availablecourses' | translate }}</h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!coursesLoaded\\\" (ionRefresh)=\\\"refreshCourses($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n    <core-loading [hideUntil]=\\\"coursesLoaded\\\">\\n        <!-- 现有课程列表 -->\\n        <ng-container *ngIf=\\\"courses.length > 0\\\">\\n            <core-courses-course-list-item *ngFor=\\\"let course of courses\\\" [course]=\\\"course\\\"></core-courses-course-list-item>\\n        </ng-container>\\n        <core-empty-box *ngIf=\\\"!courses.length\\\" icon=\\\"fas-graduation-cap\\\" [message]=\\\"'core.courses.nocourses' | translate\\\"></core-empty-box>\\n    </core-loading>\\n    <ion-infinite-scroll class=\\\"scroll\\\" threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n        <ion-infinite-scroll-content\\n          loadingSpinner=\\\"bubbles\\\"\\n          loadingText=\\\"正在加载...\\\">\\n        </ion-infinite-scroll-content>\\n      </ion-infinite-scroll>\\n      <div *ngIf=\\\"IsILastPage\\\" >\\n        <ion-row>\\n            <ion-col text-center class=\\\"text\\\">\\n              没有更多内容\\n            </ion-col>\\n        </ion-row>\\n      </div>\\n</ion-content>\\n\";","// (C) Copyright 2015 GROWLA Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreCoursesComponentsModule } from '../../components/components.module';\n\nimport { CoreCoursesAvailableCoursesPage } from './available-courses';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreCoursesAvailableCoursesPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreCoursesComponentsModule,\n    ],\n    declarations: [\n        CoreCoursesAvailableCoursesPage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreCoursesAvailableCoursesPageModule { }\n","export default \".text {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb3JlL2ZlYXR1cmVzL2NvdXJzZXMvcGFnZXMvYXZhaWxhYmxlLWNvdXJzZXMvYXZhaWxhYmxlLWNvdXJzZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2NvcmUvZmVhdHVyZXMvY291cnNlcy9wYWdlcy9hdmFpbGFibGUtY291cnNlcy9hdmFpbGFibGUtY291cnNlcy5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRleHR7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\";","// (C) Copyright 2015 GROWLA Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\n\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreCourses, CoreCourseSearchedData } from '../../services/courses';\nimport { IonInfiniteScroll } from '@ionic/angular';\nimport { ViewChild } from '@angular/core';\n/**\n * Page that displays available courses in current site.\n */\n@Component({\n    selector: 'page-core-courses-available-courses',\n    templateUrl: 'available-courses.html',\n    styleUrls: ['./available-courses.scss'],\n})\n\nexport class CoreCoursesAvailableCoursesPage implements OnInit {\n    @ViewChild(IonInfiniteScroll)\n    infiniteScroll!: IonInfiniteScroll;\n    courses: CoreCourseSearchedData[] = [];\n    coursesLoaded = false;\n    array: CoreCourseSearchedData[] = [];\n    IsILastPage:boolean = false\n    /**\n     * View loaded.\n     */\n    ngOnInit(): void {\n        this.loadCourses().finally(() => {\n            this.coursesLoaded = true;\n        });\n    }\n\n    /**\n     * Load the courses.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async loadCourses(): Promise<void> {\n        const frontpageCourseId = CoreSites.getCurrentSiteHomeId();\n\n        try {\n            const courses = await CoreCourses.getCoursesByField();\n             this.array = await courses.filter((course) => course.id != frontpageCourseId);\n             \n            let arr = await JSON.parse(JSON.stringify(this.array))\n             this.array = await arr.splice(20)\n             this.courses = await arr\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcourses', true);\n        }\n    }\n    loadData(event) {\n        setTimeout(() => {\n          event.target.complete();\n          let arr =JSON.parse(JSON.stringify(this.array))\n          this.array = arr.splice(20)\n          this.courses = [...this.courses,...arr]\n          // App logic to determine if all data is loaded\n          // and disable the infinite scroll\n          if (this.array.length <20) {\n           this.courses = this.courses.concat(this.array)\n            event.target.disabled = true;\n            this.IsILastPage = true\n          }\n        }, 500);\n      }\n    toggleInfiniteScroll() {\n        \n        this.infiniteScroll.disabled = !this.infiniteScroll.disabled;\n      }\n    /**\n     * Refresh the courses.\n     *\n     * @param refresher Refresher.\n     */\n    refreshCourses(refresher: IonRefresher): void {\n        const promises: Promise<void>[] = [];\n\n        promises.push(CoreCourses.invalidateUserCourses());\n        promises.push(CoreCourses.invalidateCoursesByField());\n\n        Promise.all(promises).finally(() => {\n            this.loadCourses().finally(() => {\n                refresher?.complete();\n            });\n        });\n    }\n\n}\n"],"sourceRoot":"webpack:///"}