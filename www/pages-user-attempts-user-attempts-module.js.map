{"version":3,"sources":["./src/addons/mod/h5pactivity/pages/user-attempts/user-attempts.html","./src/addons/mod/h5pactivity/pages/user-attempts/user-attempts.module.ts","./src/addons/mod/h5pactivity/pages/user-attempts/user-attempts.scss","./src/addons/mod/h5pactivity/pages/user-attempts/user-attempts.ts"],"names":[],"mappings":"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","file":"pages-user-attempts-user-attempts-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>\\n            <core-format-text *ngIf=\\\"h5pActivity\\\" [text]=\\\"h5pActivity.name\\\" contextLevel=\\\"module\\\"\\n                [contextInstanceId]=\\\"h5pActivity.coursemodule\\\" [courseId]=\\\"courseId\\\">\\n            </core-format-text>\\n        </h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\n        <!-- User viewed. -->\\n        <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"user && !isCurrentUser\\\" core-user-link [userId]=\\\"user.id\\\" [courseId]=\\\"courseId\\\"\\n            [attr.aria-label]=\\\"user.fullname\\\">\\n            <core-user-avatar [user]=\\\"user\\\" slot=\\\"start\\\" [courseId]=\\\"courseId\\\"></core-user-avatar>\\n            <ion-label>\\n                <h2>{{ user.fullname }}</h2>\\n            </ion-label>\\n        </ion-item>\\n        <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"user && isCurrentUser\\\">\\n            <core-user-avatar [user]=\\\"user\\\" slot=\\\"start\\\" [courseId]=\\\"courseId\\\"></core-user-avatar>\\n            <ion-label>\\n                <h2>{{ 'addon.mod_h5pactivity.myattempts' | translate }}</h2>\\n            </ion-label>\\n        </ion-item>\\n\\n        <ion-list *ngIf=\\\"attemptsData\\\">\\n            <!-- Attempts used to calculate the score. -->\\n            <ng-container *ngIf=\\\"attemptsData.scored\\\">\\n                <ion-item-divider>\\n                    <ion-label>\\n                        <h2>{{ attemptsData.scored.title }}</h2>\\n                    </ion-label>\\n                </ion-item-divider>\\n                <ng-container *ngTemplateOutlet=\\\"attemptsTemplate; context: {attempts: attemptsData.scored.attempts}\\\">\\n                </ng-container>\\n            </ng-container>\\n\\n            <!-- All attempts. -->\\n            <ng-container *ngIf=\\\"attemptsData.attempts && attemptsData.attempts.length\\\">\\n                <ion-item-divider>\\n                    <ion-label>\\n                        <h2>{{ 'addon.mod_h5pactivity.all_attempts' | translate }}</h2>\\n                    </ion-label>\\n                </ion-item-divider>\\n                <ng-container *ngTemplateOutlet=\\\"attemptsTemplate; context: {attempts: attemptsData.attempts}\\\"></ng-container>\\n            </ng-container>\\n        </ion-list>\\n\\n        <!-- No attempts. -->\\n        <core-empty-box *ngIf=\\\"attemptsData && (!attemptsData.attempts || !attemptsData.attempts.length)\\\" icon=\\\"fas-chart-bar\\\"\\n            [message]=\\\"'addon.mod_h5pactivity.attempts_none' | translate\\\">\\n        </core-empty-box>\\n    </core-loading>\\n</ion-content>\\n\\n<!-- Template to render a list of conversations. -->\\n<ng-template #attemptsTemplate let-attempts=\\\"attempts\\\">\\n    <!-- \\\"Header\\\" of the table -->\\n    <ion-item class=\\\"ion-text-wrap addon-mod_h5pactivity-table-header hide-detail\\\" detail=\\\"true\\\">\\n        <ion-label>\\n            <ion-row class=\\\"ion-align-items-center\\\">\\n                <ion-col class=\\\"ion-text-center\\\">#</ion-col>\\n                <ion-col class=\\\"ion-text-center\\\" size=\\\"5\\\" size-md=\\\"2\\\">{{ 'core.date' | translate }}</ion-col>\\n                <ion-col class=\\\"ion-text-center\\\">{{ 'addon.mod_h5pactivity.score' | translate }}</ion-col>\\n                <ion-col class=\\\"ion-text-center ion-hide-md-down\\\">{{ 'addon.mod_h5pactivity.maxscore' | translate }}</ion-col>\\n                <ion-col class=\\\"ion-text-center ion-hide-md-down\\\">{{ 'addon.mod_h5pactivity.duration' | translate }}</ion-col>\\n                <ion-col class=\\\"ion-text-center ion-hide-md-down\\\">{{ 'addon.mod_h5pactivity.completion' | translate }}</ion-col>\\n                <ion-col class=\\\"ion-text-center\\\">{{ 'core.success' | translate }}</ion-col>\\n            </ion-row>\\n        </ion-label>\\n    </ion-item>\\n\\n    <!-- List of attempts. -->\\n    <ion-item class=\\\"ion-text-wrap addon-mod_h5pactivity-table-row\\\" *ngFor=\\\"let attempt of attempts\\\" button detail=\\\"true\\\"\\n        [attr.aria-label]=\\\"'addon.mod_h5pactivity.viewattempt' | translate:{$a: attempt.attempt}\\\" (click)=\\\"openAttempt(attempt)\\\">\\n\\n        <ion-label>\\n            <ion-row class=\\\"ion-align-items-center\\\">\\n                <ion-col class=\\\"ion-text-center\\\">{{ attempt.attempt }}</ion-col>\\n                <ion-col class=\\\"ion-text-center\\\" size=\\\"5\\\" size-md=\\\"2\\\">\\n                    {{ attempt.timemodified | coreFormatDate:'strftimedatetimeshort' }}\\n                </ion-col>\\n                <ion-col class=\\\"ion-text-center\\\">\\n                    {{ attempt.rawscore }}<span class=\\\"ion-hide-md-up\\\"> / {{ attempt.maxscore }}</span>\\n                </ion-col>\\n                <ion-col class=\\\"ion-text-center ion-hide-md-down\\\">{{ attempt.maxscore }}</ion-col>\\n                <ion-col class=\\\"ion-text-center ion-hide-md-down\\\">{{ attempt.durationReadable }}</ion-col>\\n                <ion-col class=\\\"ion-text-center ion-hide-md-down\\\">\\n                    <img *ngIf=\\\"attempt.completion\\\" src=\\\"assets/img/completion/completion-auto-y.svg\\\"\\n                        [alt]=\\\"'addon.mod_h5pactivity.attempt_completion_yes' | translate\\\">\\n                    <img *ngIf=\\\"!attempt.completion\\\" src=\\\"assets/img/completion/completion-auto-n.svg\\\"\\n                        [alt]=\\\"'addon.mod_h5pactivity.attempt_completion_no' | translate\\\">\\n                </ion-col>\\n                <ion-col class=\\\"ion-text-center addon-mod_h5pactivity-table-success-col\\\">\\n                    <ion-icon *ngIf=\\\"attempt.success !== null && attempt.success\\\" name=\\\"fas-check-circle\\\"\\n                        [attr.aria-label]=\\\"'addon.mod_h5pactivity.attempt_success_pass' | translate\\\">\\n                    </ion-icon>\\n                    <ion-icon *ngIf=\\\"attempt.success !== null && !attempt.success\\\" name=\\\"far-circle\\\"\\n                        [attr.aria-label]=\\\"'addon.mod_h5pactivity.attempt_success_fail' | translate\\\">\\n                    </ion-icon>\\n                    <img *ngIf=\\\"attempt.success === null\\\" src=\\\"assets/img/icons/empty.svg\\\"\\n                        [alt]=\\\"'addon.mod_h5pactivity.attempt_success_unknown' | translate\\\">\\n                </ion-col>\\n            </ion-row>\\n        </ion-label>\\n    </ion-item>\\n</ng-template>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonModH5PActivityUserAttemptsPage } from './user-attempts';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AddonModH5PActivityUserAttemptsPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        AddonModH5PActivityUserAttemptsPage,\n    ],\n    exports: [RouterModule],\n})\nexport class AddonModH5PActivityUserAttemptsPageModule {}\n","export default \":host .addon-mod_h5pactivity-table-header {\\n  font-weight: bold;\\n}\\n:host .addon-mod_h5pactivity-table-row .addon-mod_h5pactivity-table-success-col {\\n  font-size: 1.2em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvbW9kL2g1cGFjdGl2aXR5L3BhZ2VzL3VzZXItYXR0ZW1wdHMvdXNlci1hdHRlbXB0cy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksaUJBQUE7QUFBUjtBQUdJO0VBQ0ksZ0JBQUE7QUFEUiIsImZpbGUiOiJzcmMvYWRkb25zL21vZC9oNXBhY3Rpdml0eS9wYWdlcy91c2VyLWF0dGVtcHRzL3VzZXItYXR0ZW1wdHMuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgICAuYWRkb24tbW9kX2g1cGFjdGl2aXR5LXRhYmxlLWhlYWRlciB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIH1cblxuICAgIC5hZGRvbi1tb2RfaDVwYWN0aXZpdHktdGFibGUtcm93IC5hZGRvbi1tb2RfaDVwYWN0aXZpdHktdGFibGUtc3VjY2Vzcy1jb2wge1xuICAgICAgICBmb250LXNpemU6IDEuMmVtO1xuICAgIH1cbn1cbiJdfQ== */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\n\nimport { CoreUser, CoreUserProfile } from '@features/user/services/user';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport {\n    AddonModH5PActivity,\n    AddonModH5PActivityAttempt,\n    AddonModH5PActivityData,\n    AddonModH5PActivityUserAttempts,\n} from '../../services/h5pactivity';\n\n/**\n * Page that displays user attempts of a certain user.\n */\n@Component({\n    selector: 'page-addon-mod-h5pactivity-user-attempts',\n    templateUrl: 'user-attempts.html',\n    styleUrls: ['user-attempts.scss'],\n})\nexport class AddonModH5PActivityUserAttemptsPage implements OnInit {\n\n    loaded = false;\n    courseId!: number;\n    cmId!: number;\n    h5pActivity?: AddonModH5PActivityData;\n    attemptsData?: AddonModH5PActivityUserAttempts;\n    user?: CoreUserProfile;\n    isCurrentUser = false;\n\n    protected userId!: number;\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId')!;\n        this.cmId = CoreNavigator.getRouteNumberParam('cmId')!;\n        this.userId = CoreNavigator.getRouteNumberParam('userId') || CoreSites.getCurrentSiteUserId();\n        this.isCurrentUser = this.userId == CoreSites.getCurrentSiteUserId();\n\n        try {\n            await this.fetchData();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading attempts.');\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    doRefresh(refresher: IonRefresher): void {\n        this.refreshData().finally(() => {\n            refresher.complete();\n        });\n    }\n\n    /**\n     * Get quiz data and attempt data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchData(): Promise<void> {\n        this.h5pActivity = await AddonModH5PActivity.getH5PActivity(this.courseId, this.cmId);\n\n        await Promise.all([\n            this.fetchAttempts(),\n            this.fetchUserProfile(),\n        ]);\n    }\n\n    /**\n     * Get attempts.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchAttempts(): Promise<void> {\n        this.attemptsData = await AddonModH5PActivity.getUserAttempts(this.h5pActivity!.id, {\n            cmId: this.cmId,\n            userId: this.userId,\n        });\n    }\n\n    /**\n     * Get user profile.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchUserProfile(): Promise<void> {\n        try {\n            this.user = await CoreUser.getProfile(this.userId, this.courseId, true);\n        } catch (error) {\n            // Ignore errors.\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async refreshData(): Promise<void> {\n        const promises = [\n            AddonModH5PActivity.invalidateActivityData(this.courseId),\n        ];\n\n        if (this.h5pActivity) {\n            promises.push(AddonModH5PActivity.invalidateUserAttempts(this.h5pActivity.id, this.userId));\n        }\n\n        await CoreUtils.ignoreErrors(Promise.all(promises));\n\n        await this.fetchData();\n    }\n\n    /**\n     * Open the page to view an attempt.\n     *\n     * @param attempt Attempt.\n     */\n    openAttempt(attempt: AddonModH5PActivityAttempt): void {\n        CoreNavigator.navigate(`../../attemptresults/${attempt.id}`);\n    }\n\n}\n"],"sourceRoot":"webpack:///"}