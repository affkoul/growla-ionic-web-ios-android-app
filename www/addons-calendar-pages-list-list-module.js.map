{"version":3,"sources":["./src/addons/calendar/pages/list/list.html","./src/addons/calendar/pages/list/list.module.ts","./src/addons/calendar/pages/list/list.page.ts","./src/addons/calendar/pages/list/list.scss"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,iQAAkM,+CAA+C,kpCAAkpC,oCAAoC,8XAA8X,mCAAmC,0CAA0C,GAAG,yhBAAyhB,iEAAiE,ybAAyb,kBAAkB,qjBAAqjB,2DAA2D,0GAA0G,mBAAmB,qXAAqX,6DAA6D,4HAA4H,oFAAoF,kKAAkK,6FAA6F,6UAA6U,8BAA8B,8PAA8P,qCAAqC,mpBAAmpB,yCAAyC,qEAAqE,E;;;;;;;;;;;;ACAt6L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEQ;AACc;AACiD;AAC3C;AACf;AAEU;AAEJ;AAEpD,MAAM,eAAe,GAAG,CAAC,4FAAsB,EAAE,6FAAuB,CAAC,CAAC;AAE1E,MAAM,YAAY,GAAW;IACzB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gEAAqB;KACnC;IACD,GAAG,eAAe;CACrB,CAAC;AAEF,MAAM,YAAY,GAAW;IACzB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gEAAqB;QAChC,QAAQ,EAAE;YACN,GAAG,eAAe;SACrB;KACJ;CACJ,CAAC;AAEF,MAAM,MAAM,GAAW;IACnB,GAAG,iFAAiB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,2DAAU,CAAC,QAAQ,CAAC;IAC7D,GAAG,iFAAiB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,2DAAU,CAAC,QAAQ,CAAC;CAChE,CAAC;IAYW,2BAA2B,SAA3B,2BAA2B;CAAG;AAA9B,2BAA2B;IAVvC,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,oEAAgB;SACnB;QACD,YAAY,EAAE;YACV,gEAAqB;SACxB;QACD,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,2BAA2B,CAAG;AAAH;;;;;;;;;;;;;AC3DxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEuC;AACd;AAKzB;AACsC;AACmB;AACE;AACe;AACxD;AACE;AACT;AAC2B;AACJ;AAC3B;AACZ;AACqB;AACoC;AAGvC;AACgC;AAC5B;AACE;AAEpD;;GAEG;IAMU,qBAAqB,SAArB,qBAAqB;IAmD9B;QA/CU,gBAAW,GAAG,CAAC,CAAC;QAChB,eAAU,GAAG,CAAC,CAAC;QACf,qBAAgB,GAAG,CAAC,CAAC,CAAC,6DAA6D;QACnF,wBAAmB,GAAG,KAAK,CAAC;QAC5B,kBAAa,GAAG,KAAK,CAAC;QACtB,eAAU,GAAuC,EAAE,CAAC;QAGpD,iBAAY,GAAkC,EAAE,CAAC;QACjD,kBAAa,GAAkC,EAAE,CAAC;QAClD,kBAAa,GAAc,EAAE,CAAC;QAexC,YAAO,GAAsC,EAAE,CAAC;QAChD,iBAAY,GAAG,KAAK,CAAC;QACrB,WAAM,GAAkC,EAAE,CAAC,CAAC,oCAAoC;QAChF,yBAAoB,GAAG,KAAK,CAAC;QAC7B,mBAAc,GAAkC,EAAE,CAAC;QACnD,gBAAW,GAAG,KAAK,CAAC;QACpB,kBAAa,GAAG,KAAK,CAAC;QACtB,cAAS,GAAG,KAAK,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;QACnB,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,8DAAa,CAAC,YAAY,CAAC;QACtC,WAAM,GAAwB;YAC1B,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,SAAS;YACnB,UAAU,EAAE,SAAS;YACrB,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI;SACjB,CAAC;QAIE,IAAI,CAAC,UAAU,GAAG,0DAAS,CAAC,oBAAoB,EAAE,CAAC;QACnD,IAAI,CAAC,oBAAoB,GAAG,qFAAsB,CAAC,WAAW,EAAE,CAAC;QACjE,IAAI,CAAC,aAAa,GAAG,0DAAS,CAAC,gBAAgB,EAAE,CAAC;QAElD,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC3B,8CAA8C;YAC9C,IAAI,CAAC,oBAAoB,GAAG,8DAAU,CAAC,EAAE,CAAC,wEAAqB,CAAC,iCAAiC,EAAE,GAAG,EAAE;gBACpG,gEAAa,CAAC,2BAA2B,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACjE,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SAC1B;QAED,oEAAoE;QACpE,IAAI,CAAC,gBAAgB,GAAG,8DAAU,CAAC,EAAE,CAAC,wEAAqB,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE,EAAE;YAClF,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;gBACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aACnC;QACL,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAEvB,uEAAuE;QACvE,IAAI,CAAC,iBAAiB,GAAG,8DAAU,CAAC,EAAE,CAAC,wEAAqB,CAAC,yBAAyB,EAAE,GAAG,EAAE;YACzF,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACpC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAEvB,sEAAsE;QACtE,IAAI,CAAC,iBAAiB,GAAG,8DAAU,CAAC,EAAE,CAAC,wEAAqB,CAAC,gBAAgB,EAAE,CAAC,IAAI,EAAE,EAAE;YACpF,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;gBACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aACnC;QACL,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAEvB,kEAAkE;QAClE,IAAI,CAAC,YAAY,GAAG,8DAAU,CAAC,EAAE,CAAC,iFAAyB,CAAC,WAAW,EAAE,GAAG,EAAE;YAC1E,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAEvB,kFAAkF;QAClF,IAAI,CAAC,kBAAkB,GAAG,8DAAU,CAAC,EAAE,CAAC,iFAAyB,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE,EAAE;YACtF,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE;gBAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;QACL,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAEvB,4CAA4C;QAC5C,IAAI,CAAC,mBAAmB,GAAG,8DAAU,CAAC,EAAE,CACpC,wEAAqB,CAAC,mBAAmB,EACzC,CAAC,IAAI,EAAE,EAAE;YACL,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACpB,6EAA6E;gBAC7E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBACvC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aAC1B;iBAAM;gBACH,mCAAmC;gBACnC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;QACL,CAAC,EACD,IAAI,CAAC,aAAa,CACrB,CAAC;QAEF,2CAA2C;QAC3C,IAAI,CAAC,qBAAqB,GAAG,8DAAU,CAAC,EAAE,CACtC,wEAAqB,CAAC,qBAAqB,EAC3C,CAAC,IAAI,EAAE,EAAE;YACL,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACxB,OAAO;aACV;YAED,4CAA4C;YAC5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YAExC,2DAA2D;YAC3D,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACvD,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;gBACb,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aACvC;YAED,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QACjF,CAAC,EACD,IAAI,CAAC,aAAa,CACrB,CAAC;QAEF,IAAI,CAAC,qBAAqB;YACtB,8DAAU,CAAC,EAAE,CAAC,wEAAqB,CAAC,oBAAoB,EAAE,CAAO,IAAI,EAAE,EAAE,CAAC;;gBACtE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBAEnB,2FAA2F;gBAC3F,IAAI,CAAC,SAAS,GAAG,MAAM,6EAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAE/E,IAAI,CAAC,YAAY,EAAE,CAAC;gBAEpB,UAAI,CAAC,OAAO,0CAAE,WAAW,GAAG;YAChC,CAAC,EAAC,CAAC;QAEP,sCAAsC;QACtC,IAAI,CAAC,cAAc,GAAG,oDAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YACpD,sFAAsF;YACtF,mDAAM,CAAC,GAAG,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,QAAQ,GAAG,sDAAO,CAAC,QAAQ,EAAE,CAAC;YACvC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACG,QAAQ;;YACV,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,kEAAa,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;YACrE,IAAI,CAAC,QAAQ,GAAG,8DAAa,CAAC,YAAY,CAAC;YAE3C,MAAM,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAC7C,CAAC;KAAA;IAED;;;;;;;OAOG;IACG,SAAS,CAAC,OAAO,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,UAAU,GAAG,KAAK;;YAC7D,IAAI,CAAC,WAAW,GAAG,kEAAa,CAAC,SAAS,EAAE,CAAC;YAC7C,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,sDAAO,CAAC,QAAQ,EAAE,CAAC;YAEnC,IAAI,IAAI,EAAE;gBACN,qCAAqC;gBACrC,IAAI;oBACA,MAAM,MAAM,GAAG,MAAM,yEAAiB,CAAC,UAAU,EAAE,CAAC;oBACpD,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;wBAC3C,gEAAY,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;qBACnD;oBAED,IAAI,MAAM,CAAC,OAAO,EAAE;wBAChB,+BAA+B;wBAC/B,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;wBAEvB,8DAAU,CAAC,OAAO,CACd,iFAAyB,CAAC,aAAa,EACvC,MAAM,EACN,IAAI,CAAC,aAAa,CACrB,CAAC;qBACL;iBACJ;gBAAC,OAAO,KAAK,EAAE;oBACZ,IAAI,UAAU,EAAE;wBACZ,gEAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAC;qBACrE;iBACJ;aACJ;YAED,IAAI;gBACA,MAAM,QAAQ,GAAoB,EAAE,CAAC;gBAErC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBAExB,QAAQ,CAAC,IAAI,CAAC,6EAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;oBACnF,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;oBAEzB,OAAO;gBACX,CAAC,CAAC,CAAC,CAAC;gBAEJ,gCAAgC;gBAChC,QAAQ,CAAC,IAAI,CAAC,4FAAiB,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;oBACvF,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;oBAE9B,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC,CAAC;gBAEJ,sBAAsB;gBACtB,QAAQ,CAAC,IAAI,CAAC,+EAAoB,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,EAAE;oBAC3E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC;oBAE5D,qCAAqC;oBACrC,MAAM,MAAM,GAAkC,aAAa,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CACtE,6EAAmB,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC;oBAEvD,IAAI,CAAC,aAAa,GAAG,6EAAmB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oBAE5D,OAAO;gBACX,CAAC,CAAC,CAAC,CAAC;gBAEJ,iCAAiC;gBACjC,QAAQ,CAAC,IAAI,CAAC,+EAAoB,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;oBACrE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;oBAClD,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;oBAEzB,OAAO;gBACX,CAAC,CAAC,CAAC,CAAC;gBAEJ,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aAC/B;YAAC,OAAO,KAAK,EAAE;gBACZ,gEAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,gCAAgC,EAAE,IAAI,CAAC,CAAC;aACrF;YAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,8DAAa,CAAC,SAAS,CAAC;QAC5C,CAAC;KAAA;IAED;;;;;OAKG;IACG,WAAW,CAAC,OAAO,GAAG,KAAK;;YAC7B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAE3B,IAAI;gBACA,MAAM,gBAAgB,GAClB,MAAM,gEAAa,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,wEAAqB,CAAC,aAAa,CAAC,CAAC;gBAE9G,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,IAAI,CAAC,gBAAgB,GAAG,CAAC,EAAE,EAAE,gEAAgE;wBAC7F,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;wBACzB,IAAI,OAAO,EAAE;4BACT,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;4BACvB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;4BACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;yBACpC;qBACJ;yBAAM;wBACH,wCAAwC;wBACxC,IAAI,CAAC,UAAU,IAAI,wEAAqB,CAAC,aAAa,CAAC;wBAEvD,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;qBAC7B;iBACJ;qBAAM;oBACH,MAAM,YAAY,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,6EAAmB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;oBAEjG,wCAAwC;oBACxC,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;oBAE9C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;oBAE7D,IAAI,OAAO,EAAE;wBACT,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;wBACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;qBACxB;yBAAM;wBACH,kGAAkG;wBAClG,IAAI,CAAC,YAAY,GAAG,gEAAS,CAAC,4BAA4B,CAAC,IAAI,CAAC,YAAY,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;wBAClG,IAAI,CAAC,MAAM,GAAG,gEAAS,CAAC,4BAA4B,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;qBACnF;oBACD,IAAI,CAAC,YAAY,EAAE,CAAC;oBAEpB,mDAAmD;oBACnD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;wBACzC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;wBACtE,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAChD,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBAExB,2EAA2E;oBAC3E,gEAAa,CAAC,2BAA2B,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAE7D,IAAI,CAAC,UAAU,IAAI,wEAAqB,CAAC,aAAa,CAAC;iBAC1D;gBAED,mGAAmG;gBACnG,wEAAwE;gBACxE,yBAAyB;aAC5B;YAAC,OAAO,KAAK,EAAE;gBACZ,gEAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,gCAAgC,EAAE,IAAI,CAAC,CAAC;gBAClF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,uDAAuD;aACrF;YAED,uDAAuD;YACvD,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAE3B,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;aAChC;QACL,CAAC;KAAA;IAED;;;;;OAKG;IACH,cAAc,CAAC,gBAA6B;QACxC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE;YAC5B,gBAAgB,IAAI,gBAAgB,EAAE,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAES,YAAY;QAClB,IAAI,CAAC,cAAc,GAAG,6EAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3G,CAAC;IAED;;;;;OAKG;IACO,oBAAoB,CAAC,MAAqC;QAChE,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,aAAa,EAAE;YAChD,qBAAqB;YACrB,OAAO,IAAI,CAAC,aAAa,CAAC;SAC7B;QAED,+EAA+E;QAC/E,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,KAAK,CAAC,UAAU,IAAI,WAAW,IAAI,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;QAErG,OAAO,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACa,cAAc;;YAC1B,IAAI;gBACA,MAAM,IAAI,GAAG,MAAM,8EAAW,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBACtD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAChC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,0BAA0B;gBAC1B,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;oBACtB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;gBAC5C,CAAC,CAAC,CAAC;aACN;YAAC,WAAM;gBACJ,iBAAiB;aACpB;QACL,CAAC;KAAA;IAED;;;;;OAKG;IACO,WAAW,CAAC,YAA2C;QAC7D,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;YAC1D,uCAAuC;YACvC,OAAO,YAAY,CAAC;SACvB;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,8DAAa,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/E,MAAM,GAAG,GAAG,KAAK,GAAG,CAAC,8DAAa,CAAC,WAAW,GAAG,wEAAqB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC1F,IAAI,MAAM,GAAG,YAAY,CAAC;QAE1B,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;YAC3B,2DAA2D;YAC3D,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;gBACrB,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;SACN;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;YAC3B,0DAA0D;YAC1D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE;gBAC7B,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;gBAExE,OAAO,CAAC,YAAY,CAAC;YACzB,CAAC,CAAC,CAAC;SACN;QAED,yDAAyD;QACzD,MAAM,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE;YAC5D,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,KAAK,CAAC,SAAS,GAAG,KAAK,EAAE;gBACjD,kFAAkF;gBAClF,OAAO,IAAI,CAAC;aACf;YAED,OAAO,CAAC,KAAK,CAAC,SAAS,IAAI,KAAK,IAAI,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,SAAS,IAAI,GAAG,CAAC;QACjH,CAAC,CAAC,CAAC;QAEH,mCAAmC;QACnC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;QAE5C,OAAO,6EAAmB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAClD,CAAC;IAED;;;;;;;OAOG;IACG,SAAS,CAAC,SAAwB,EAAE,IAAiB,EAAE,UAAoB;;YAC7E,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACpB,OAAO;aACV;YAED,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE;gBACpD,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,GAAG;gBACtB,IAAI,IAAI,IAAI,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IAED;;;;;;OAMG;IACG,aAAa,CAAC,IAAc,EAAE,UAAoB;;YACpD,IAAI,CAAC,QAAQ,GAAG,8DAAa,CAAC,YAAY,CAAC;YAE3C,MAAM,QAAQ,GAAoB,EAAE,CAAC;YAErC,QAAQ,CAAC,IAAI,CAAC,gEAAa,CAAC,oBAAoB,EAAE,CAAC,CAAC;YACpD,QAAQ,CAAC,IAAI,CAAC,gEAAa,CAAC,2BAA2B,EAAE,CAAC,CAAC;YAE3D,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC1B,QAAQ,CAAC,IAAI,CAAC,8EAAW,CAAC,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;gBACzD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;aACpC;YAED,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;QACtF,CAAC;KAAA;IAED;;;;;;;OAOG;IACO,QAAQ,CAAC,KAAkC,EAAE,SAAuC;QAC1F,IAAI,CAAC,SAAS,EAAE;YACZ,wBAAwB;YACxB,OAAO,IAAI,CAAC;SACf;QAED,4BAA4B;QAC5B,OAAO,CAAC,8CAAM,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,EAAE,KAAK,CAAC,CAAC;IACrF,CAAC;IAED;;;;;OAKG;IACO,WAAW,CAAC,KAAkC;QACpD,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;YACrB,eAAe;YACf,OAAO,IAAI,CAAC;SACf;QAED,4BAA4B;QAC5B,OAAO,8CAAM,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,EAAE,KAAK,CAAC,CAAC;IACvG,CAAC;IAED;;;;OAIG;IACG,UAAU,CAAC,KAAiB;;YAC9B,MAAM,gEAAY,CAAC,WAAW,CAAC;gBAC3B,SAAS,EAAE,8FAAmC;gBAC9C,cAAc,EAAE;oBACZ,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;iBACtB;gBACD,KAAK;aACR,CAAC,CAAC;QACP,CAAC;KAAA;IAED;;;;OAIG;IACH,QAAQ,CAAC,OAAgB;QACrB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC;QAEvB,MAAM,MAAM,GAAW,EAAE,CAAC;QAE1B,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YACtB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;SAC1C;QAED,kEAAa,CAAC,kBAAkB,CAAC,iBAAiB,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED;;OAEG;IACH,YAAY;QACR,kEAAa,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,CAAC;IAC3D,CAAC;IAED;;;;OAIG;IACH,SAAS,CAAC,OAAe;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,OAAO,IAAI,CAAC,EAAE;YACd,8CAA8C;YAC9C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;SAC1B;aAAM;YACH,kEAAa,CAAC,kBAAkB,CAAC,mBAAmB,OAAO,EAAE,CAAC,CAAC;SAClE;IACL,CAAC;IAED;;;;;OAKG;IACO,aAAa,CAAC,OAAe,EAAE,OAAgB;QACrD,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,IAAI,OAAO,CAAC,CAAC;QAErE,IAAI,KAAK,EAAE;YACP,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;SAC3B;IACL,CAAC;IAED;;OAEG;IACH,WAAW;;QACP,UAAI,CAAC,oBAAoB,0CAAE,GAAG,GAAG;QACjC,UAAI,CAAC,gBAAgB,0CAAE,GAAG,GAAG;QAC7B,UAAI,CAAC,iBAAiB,0CAAE,GAAG,GAAG;QAC9B,UAAI,CAAC,iBAAiB,0CAAE,GAAG,GAAG;QAC9B,UAAI,CAAC,mBAAmB,0CAAE,GAAG,GAAG;QAChC,UAAI,CAAC,qBAAqB,0CAAE,GAAG,GAAG;QAClC,UAAI,CAAC,YAAY,0CAAE,GAAG,GAAG;QACzB,UAAI,CAAC,kBAAkB,0CAAE,GAAG,GAAG;QAC/B,UAAI,CAAC,qBAAqB,0CAAE,GAAG,GAAG;QAClC,UAAI,CAAC,cAAc,0CAAE,WAAW,GAAG;IACvC,CAAC;CAEJ;;;sBAnlBI,uDAAS,SAAC,yDAAU;;AAFZ,qBAAqB;IALjC,+DAAS,CAAC;QACP,QAAQ,EAAE,0BAA0B;QACpC,sNAAwB;;KAE3B,CAAC;GACW,qBAAqB,CAqlBjC;AArlBiC;;;;;;;;;;;;;ACjDlC;AAAe,gFAAiB,mBAAmB,GAAG,6CAA6C,mVAAmV,E","file":"addons-calendar-pages-list-list-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>{{ 'addon.calendar.calendarevents' | translate }}</h1>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"openFilter($event)\\\" [attr.aria-label]=\\\"'core.filter' | translate\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"fas-filter\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            </ion-button>\\n            <core-context-menu>\\n                <core-context-menu-item [hidden]=\\\"!notificationsEnabled\\\" [priority]=\\\"600\\\"\\n                [content]=\\\"'core.settings.settings' | translate\\\" (action)=\\\"openSettings()\\\" iconAction=\\\"fas-cogs\\\">\\n            </core-context-menu-item>\\n                <core-context-menu-item [hidden]=\\\"!eventsLoaded || !hasOffline || !isOnline\\\" [priority]=\\\"400\\\"\\n                [content]=\\\"'core.settings.synchronizenow' | translate\\\" (action)=\\\"doRefresh(undefined, $event, true)\\\"\\n                [iconAction]=\\\"syncIcon\\\" [closeOnClick]=\\\"false\\\"></core-context-menu-item>\\n            </core-context-menu>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!eventsLoaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n    <core-loading [hideUntil]=\\\"eventsLoaded\\\">\\n        <!-- There is data to be synchronized -->\\n        <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"hasOffline\\\">\\n            <ion-item>\\n                <ion-icon name=\\\"fas-exclamation-triangle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                <ion-label>{{ 'core.hasdatatosync' | translate:{$a: 'addon.calendar.calendar' | translate} }}</ion-label>\\n            </ion-item>\\n        </ion-card>\\n\\n        <core-empty-box *ngIf=\\\"!filteredEvents || !filteredEvents.length\\\" icon=\\\"fas-calendar\\\"\\n            [message]=\\\"'addon.calendar.noevents' | translate\\\">\\n        </core-empty-box>\\n\\n        <ion-list *ngIf=\\\"filteredEvents && filteredEvents.length\\\" class=\\\"ion-no-margin\\\">\\n            <ng-container *ngFor=\\\"let event of filteredEvents\\\">\\n                <ion-item-divider *ngIf=\\\"event.showDate\\\">\\n                    <ion-label><p class=\\\"item-heading\\\">{{ event.timestart * 1000 | coreFormatDate: \\\"strftimedayshort\\\" }}</p></ion-label>\\n                </ion-item-divider>\\n                <ion-item class=\\\"addon-calendar-event ion-text-wrap\\\" [attr.aria-label]=\\\"event.name\\\" (click)=\\\"gotoEvent(event.id)\\\"\\n                    [attr.aria-current]=\\\"event.id == eventId ? 'page' : 'false'\\\"\\n                    [ngClass]=\\\"['addon-calendar-eventtype-'+event.eventtype]\\\" button detail=\\\"true\\\">\\n                    <img *ngIf=\\\"event.moduleIcon\\\" src=\\\"{{event.moduleIcon}}\\\" slot=\\\"start\\\" class=\\\"core-module-icon\\\" alt=\\\"\\\"\\n                        role=\\\"presentation\\\">\\n                    <ion-icon *ngIf=\\\"event.eventIcon && !event.moduleIcon\\\" [name]=\\\"event.eventIcon\\\" slot=\\\"start\\\"\\n                        aria-hidden=\\\"true\\\">\\n                    </ion-icon>\\n                    <ion-label>\\n                        <p class=\\\"item-heading\\\">\\n                            <!-- Add the icon title so accessibility tools read it. -->\\n                            <span class=\\\"sr-only\\\">\\n                                {{ 'addon.calendar.type' + event.formattedType | translate }}\\n                                <span class=\\\"sr-only\\\" *ngIf=\\\"event.moduleIcon && event.iconTitle\\\">{{ event.iconTitle }}</span>\\n                            </span>\\n                            <core-format-text [text]=\\\"event.name\\\" [contextLevel]=\\\"event.contextLevel\\\"\\n                                [contextInstanceId]=\\\"event.contextInstanceId\\\">\\n                            </core-format-text>\\n                        </p>\\n                        <p>\\n                            {{ event.timestart * 1000 | coreFormatDate: \\\"strftimetime\\\" }}\\n                            <span *ngIf=\\\"event.timeduration && event.endsSameDay\\\">\\n                                - {{ (event.timestart + event.timeduration) * 1000 | coreFormatDate: \\\"strftimetime\\\" }}\\n                            </span>\\n                            <span *ngIf=\\\"event.timeduration && !event.endsSameDay\\\">\\n                                - {{ (event.timestart + event.timeduration) * 1000 | coreFormatDate: \\\"strftimedatetimeshort\\\" }}\\n                            </span>\\n                        </p>\\n                    </ion-label>\\n                    <ion-note *ngIf=\\\"event.offline && !event.deleted\\\" slot=\\\"end\\\">\\n                        <ion-icon name=\\\"fas-clock\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                        <span class=\\\"ion-text-wrap\\\">{{ 'core.notsent' | translate }}</span>\\n                    </ion-note>\\n                    <ion-note *ngIf=\\\"event.deleted\\\" slot=\\\"end\\\">\\n                        <ion-icon name=\\\"fas-trash\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                        <span class=\\\"ion-text-wrap\\\">{{ 'core.deletedoffline' | translate }}</span>\\n                    </ion-note>\\n                </ion-item>\\n            </ng-container>\\n        </ion-list>\\n\\n        <core-infinite-loading [enabled]=\\\"canLoadMore\\\" (action)=\\\"loadMoreEvents($event)\\\" [error]=\\\"loadMoreError\\\">\\n        </core-infinite-loading>\\n    </core-loading>\\n\\n    <!-- Create a calendar event. -->\\n    <ion-fab slot=\\\"fixed\\\" core-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" *ngIf=\\\"canCreate\\\">\\n        <ion-fab-button (click)=\\\"openEdit()\\\" [attr.aria-label]=\\\"'addon.calendar.newevent' | translate\\\">\\n            <ion-icon name=\\\"fas-plus\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            <span class=\\\"sr-only\\\">{{ 'addon.calendar.newevent' | translate }}</span>\\n        </ion-fab-button>\\n    </ion-fab>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddonCalendarEventRoute, AddonCalendarEditRoute } from '@addons/calendar/calendar-lazy.module';\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { CoreScreen } from '@services/screen';\n\nimport { CoreSharedModule } from '@/core/shared.module';\n\nimport { AddonCalendarListPage } from './list.page';\n\nconst splitviewRoutes = [AddonCalendarEditRoute, AddonCalendarEventRoute];\n\nconst mobileRoutes: Routes = [\n    {\n        path: '',\n        component: AddonCalendarListPage,\n    },\n    ...splitviewRoutes,\n];\n\nconst tabletRoutes: Routes = [\n    {\n        path: '',\n        component: AddonCalendarListPage,\n        children: [\n            ...splitviewRoutes,\n        ],\n    },\n];\n\nconst routes: Routes = [\n    ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\n    ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        AddonCalendarListPage,\n    ],\n    exports: [RouterModule],\n})\nexport class AddonCalendarListPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild, OnDestroy, OnInit } from '@angular/core';\nimport { IonContent, IonRefresher } from '@ionic/angular';\nimport {\n    AddonCalendarProvider,\n    AddonCalendar,\n    AddonCalendarEventToDisplay,\n} from '../../services/calendar';\nimport { AddonCalendarOffline } from '../../services/calendar-offline';\nimport { AddonCalendarFilter, AddonCalendarHelper } from '../../services/calendar-helper';\nimport { AddonCalendarSync, AddonCalendarSyncProvider } from '../../services/calendar-sync';\nimport { CoreCategoryData, CoreCourses, CoreEnrolledCourseData } from '@features/courses/services/courses';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { CoreSites } from '@services/sites';\nimport { CoreLocalNotifications } from '@services/local-notifications';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreApp } from '@services/app';\nimport moment from 'moment';\nimport { CoreConstants } from '@/core/constants';\nimport { AddonCalendarFilterPopoverComponent } from '../../components/filter/filter';\nimport { Params } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Network, NgZone } from '@singletons';\nimport { CoreCoursesHelper } from '@features/courses/services/courses-helper';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreNavigator } from '@services/navigator';\n\n/**\n * Page that displays the list of calendar events.\n */\n@Component({\n    selector: 'page-addon-calendar-list',\n    templateUrl: 'list.html',\n    styleUrls: ['../../calendar-common.scss', 'list.scss'],\n})\nexport class AddonCalendarListPage implements OnInit, OnDestroy {\n\n    @ViewChild(IonContent) content?: IonContent;\n\n    protected initialTime = 0;\n    protected daysLoaded = 0;\n    protected emptyEventsTimes = 0; // Variable to identify consecutive calls returning 0 events.\n    protected categoriesRetrieved = false;\n    protected getCategories = false;\n    protected categories: { [id: number]: CoreCategoryData } = {};\n    protected siteHomeId: number;\n    protected currentSiteId: string;\n    protected onlineEvents: AddonCalendarEventToDisplay[] = [];\n    protected offlineEvents: AddonCalendarEventToDisplay[] = [];\n    protected deletedEvents: number [] = [];\n\n    // Observers.\n    protected obsDefaultTimeChange?: CoreEventObserver;\n    protected newEventObserver: CoreEventObserver;\n    protected discardedObserver: CoreEventObserver;\n    protected editEventObserver: CoreEventObserver;\n    protected deleteEventObserver: CoreEventObserver;\n    protected undeleteEventObserver: CoreEventObserver;\n    protected syncObserver: CoreEventObserver;\n    protected manualSyncObserver: CoreEventObserver;\n    protected filterChangedObserver: CoreEventObserver;\n    protected onlineObserver: Subscription;\n\n    eventId?: number; // Selected EventId on list\n    courses: Partial<CoreEnrolledCourseData>[] = [];\n    eventsLoaded = false;\n    events: AddonCalendarEventToDisplay[] = []; // Events (both online and offline).\n    notificationsEnabled = false;\n    filteredEvents: AddonCalendarEventToDisplay[] = [];\n    canLoadMore = false;\n    loadMoreError = false;\n    canCreate = false;\n    hasOffline = false;\n    isOnline = false;\n    syncIcon = CoreConstants.ICON_LOADING;\n    filter: AddonCalendarFilter = {\n        filtered: false,\n        courseId: undefined,\n        categoryId: undefined,\n        course: true,\n        group: true,\n        site: true,\n        user: true,\n        category: true,\n    };\n\n    constructor() {\n\n        this.siteHomeId = CoreSites.getCurrentSiteHomeId();\n        this.notificationsEnabled = CoreLocalNotifications.isAvailable();\n        this.currentSiteId = CoreSites.getCurrentSiteId();\n\n        if (this.notificationsEnabled) {\n            // Re-schedule events if default time changes.\n            this.obsDefaultTimeChange = CoreEvents.on(AddonCalendarProvider.DEFAULT_NOTIFICATION_TIME_CHANGED, () => {\n                AddonCalendar.scheduleEventsNotifications(this.onlineEvents);\n            }, this.currentSiteId);\n        }\n\n        // Listen for events added. When an event is added, reload the data.\n        this.newEventObserver = CoreEvents.on(AddonCalendarProvider.NEW_EVENT_EVENT, (data) => {\n            if (data && data.eventId) {\n                this.eventsLoaded = false;\n                this.refreshEvents(true, false);\n            }\n        }, this.currentSiteId);\n\n        // Listen for new event discarded event. When it does, reload the data.\n        this.discardedObserver = CoreEvents.on(AddonCalendarProvider.NEW_EVENT_DISCARDED_EVENT, () => {\n            this.eventsLoaded = false;\n            this.refreshEvents(true, false);\n        }, this.currentSiteId);\n\n        // Listen for events edited. When an event is edited, reload the data.\n        this.editEventObserver = CoreEvents.on(AddonCalendarProvider.EDIT_EVENT_EVENT, (data) => {\n            if (data && data.eventId) {\n                this.eventsLoaded = false;\n                this.refreshEvents(true, false);\n            }\n        }, this.currentSiteId);\n\n        // Refresh data if calendar events are synchronized automatically.\n        this.syncObserver = CoreEvents.on(AddonCalendarSyncProvider.AUTO_SYNCED, () => {\n            this.eventsLoaded = false;\n            this.refreshEvents();\n        }, this.currentSiteId);\n\n        // Refresh data if calendar events are synchronized manually but not by this page.\n        this.manualSyncObserver = CoreEvents.on(AddonCalendarSyncProvider.MANUAL_SYNCED, (data) => {\n            if (data && data.source != 'list') {\n                this.eventsLoaded = false;\n                this.refreshEvents();\n            }\n        }, this.currentSiteId);\n\n        // Update the list when an event is deleted.\n        this.deleteEventObserver = CoreEvents.on(\n            AddonCalendarProvider.DELETED_EVENT_EVENT,\n            (data) => {\n                if (data && !data.sent) {\n                    // Event was deleted in offline. Just mark it as deleted, no need to refresh.\n                    this.markAsDeleted(data.eventId, true);\n                    this.deletedEvents.push(data.eventId);\n                    this.hasOffline = true;\n                } else {\n                    // Event deleted, refresh the view.\n                    this.eventsLoaded = false;\n                    this.refreshEvents();\n                }\n            },\n            this.currentSiteId,\n        );\n\n        // Listen for events \"undeleted\" (offline).\n        this.undeleteEventObserver = CoreEvents.on(\n            AddonCalendarProvider.UNDELETED_EVENT_EVENT,\n            (data) => {\n                if (!data || !data.eventId) {\n                    return;\n                }\n\n                // Mark it as undeleted, no need to refresh.\n                this.markAsDeleted(data.eventId, false);\n\n                // Remove it from the list of deleted events if it's there.\n                const index = this.deletedEvents.indexOf(data.eventId);\n                if (index != -1) {\n                    this.deletedEvents.splice(index, 1);\n                }\n\n                this.hasOffline = !!this.offlineEvents.length || !!this.deletedEvents.length;\n            },\n            this.currentSiteId,\n        );\n\n        this.filterChangedObserver =\n            CoreEvents.on(AddonCalendarProvider.FILTER_CHANGED_EVENT, async (data) => {\n                this.filter = data;\n\n                // Course viewed has changed, check if the user can create events for this course calendar.\n                this.canCreate = await AddonCalendarHelper.canEditEvents(this.filter.courseId);\n\n                this.filterEvents();\n\n                this.content?.scrollToTop();\n            });\n\n        // Refresh online status when changes.\n        this.onlineObserver = Network.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreApp.isOnline();\n            });\n        });\n    }\n\n    /**\n     * View loaded.\n     */\n    async ngOnInit(): Promise<void> {\n        this.filter.courseId = CoreNavigator.getRouteNumberParam('courseId');\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        await this.fetchData(false, true, false);\n    }\n\n    /**\n     * Fetch all the data required for the view.\n     *\n     * @param refresh Empty events array first.\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved when done.\n     */\n    async fetchData(refresh = false, sync = false, showErrors = false): Promise<void> {\n        this.initialTime = CoreTimeUtils.timestamp();\n        this.daysLoaded = 0;\n        this.emptyEventsTimes = 0;\n        this.isOnline = CoreApp.isOnline();\n\n        if (sync) {\n            // Try to synchronize offline events.\n            try {\n                const result = await AddonCalendarSync.syncEvents();\n                if (result.warnings && result.warnings.length) {\n                    CoreDomUtils.showErrorModal(result.warnings[0]);\n                }\n\n                if (result.updated) {\n                    // Trigger a manual sync event.\n                    result.source = 'list';\n\n                    CoreEvents.trigger(\n                        AddonCalendarSyncProvider.MANUAL_SYNCED,\n                        result,\n                        this.currentSiteId,\n                    );\n                }\n            } catch (error) {\n                if (showErrors) {\n                    CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\n                }\n            }\n        }\n\n        try {\n            const promises: Promise<void>[] = [];\n\n            this.hasOffline = false;\n\n            promises.push(AddonCalendarHelper.canEditEvents(this.filter.courseId).then((canEdit) => {\n                this.canCreate = canEdit;\n\n                return;\n            }));\n\n            // Load courses for the popover.\n            promises.push(CoreCoursesHelper.getCoursesForPopover(this.filter.courseId).then((result) => {\n                this.courses = result.courses;\n\n                return this.fetchEvents(refresh);\n            }));\n\n            // Get offline events.\n            promises.push(AddonCalendarOffline.getAllEditedEvents().then((offlineEvents) => {\n                this.hasOffline = this.hasOffline || !!offlineEvents.length;\n\n                // Format data and sort by timestart.\n                const events: AddonCalendarEventToDisplay[] = offlineEvents.map((event) =>\n                    AddonCalendarHelper.formatOfflineEventData(event));\n\n                this.offlineEvents = AddonCalendarHelper.sortEvents(events);\n\n                return;\n            }));\n\n            // Get events deleted in offline.\n            promises.push(AddonCalendarOffline.getAllDeletedEventsIds().then((ids) => {\n                this.hasOffline = this.hasOffline || !!ids.length;\n                this.deletedEvents = ids;\n\n                return;\n            }));\n\n            await Promise.all(promises);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n        }\n\n        this.eventsLoaded = true;\n        this.syncIcon = CoreConstants.ICON_SYNC;\n    }\n\n    /**\n     * Fetches the events and updates the view.\n     *\n     * @param refresh Empty events array first.\n     * @return Promise resolved when done.\n     */\n    async fetchEvents(refresh = false): Promise<void> {\n        this.loadMoreError = false;\n\n        try {\n            const onlineEventsTemp =\n                await AddonCalendar.getEventsList(this.initialTime, this.daysLoaded, AddonCalendarProvider.DAYS_INTERVAL);\n\n            if (onlineEventsTemp.length === 0) {\n                this.emptyEventsTimes++;\n                if (this.emptyEventsTimes > 5) { // Stop execution if we retrieve empty list 6 consecutive times.\n                    this.canLoadMore = false;\n                    if (refresh) {\n                        this.onlineEvents = [];\n                        this.filteredEvents = [];\n                        this.events = this.offlineEvents;\n                    }\n                } else {\n                    // No events returned, load next events.\n                    this.daysLoaded += AddonCalendarProvider.DAYS_INTERVAL;\n\n                    return this.fetchEvents();\n                }\n            } else {\n                const onlineEvents = onlineEventsTemp.map((event) => AddonCalendarHelper.formatEventData(event));\n\n                // Get the merged events of this period.\n                const events = this.mergeEvents(onlineEvents);\n\n                this.getCategories = this.shouldLoadCategories(onlineEvents);\n\n                if (refresh) {\n                    this.onlineEvents = onlineEvents;\n                    this.events = events;\n                } else {\n                    // Filter events with same ID. Repeated events are returned once per WS call, show them only once.\n                    this.onlineEvents = CoreUtils.mergeArraysWithoutDuplicates(this.onlineEvents, onlineEvents, 'id');\n                    this.events = CoreUtils.mergeArraysWithoutDuplicates(this.events, events, 'id');\n                }\n                this.filterEvents();\n\n                // Calculate which evemts need to display the date.\n                this.filteredEvents.forEach((event, index) => {\n                    event.showDate = this.showDate(event, this.filteredEvents[index - 1]);\n                    event.endsSameDay = this.endsSameDay(event);\n                });\n                this.canLoadMore = true;\n\n                // Schedule notifications for the events retrieved (might have new events).\n                AddonCalendar.scheduleEventsNotifications(this.onlineEvents);\n\n                this.daysLoaded += AddonCalendarProvider.DAYS_INTERVAL;\n            }\n\n            // Resize the content so infinite loading is able to calculate if it should load more items or not.\n            // @todo: Infinite loading is not working if content is not high enough.\n            // this.content.resize();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n            this.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n        }\n\n        // Success retrieving events. Get categories if needed.\n        if (this.getCategories) {\n            this.getCategories = false;\n\n            return this.loadCategories();\n        }\n    }\n\n    /**\n     * Function to load more events.\n     *\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     * @return Resolved when done.\n     */\n    loadMoreEvents(infiniteComplete?: () => void ): void {\n        this.fetchEvents().finally(() => {\n            infiniteComplete && infiniteComplete();\n        });\n    }\n\n    protected filterEvents(): void {\n        this.filteredEvents = AddonCalendarHelper.getFilteredEvents(this.events, this.filter, this.categories);\n    }\n\n    /**\n     * Returns if the current state should load categories or not.\n     *\n     * @param events Events to parse.\n     * @return True if categories should be loaded.\n     */\n    protected shouldLoadCategories(events: AddonCalendarEventToDisplay[]): boolean {\n        if (this.categoriesRetrieved || this.getCategories) {\n            // Use previous value\n            return this.getCategories;\n        }\n\n        // Categories not loaded yet. We should get them if there's any category event.\n        const found = events.some((event) => typeof event.categoryid != 'undefined' && event.categoryid > 0);\n\n        return found || this.getCategories;\n    }\n\n    /**\n     * Load categories to be able to filter events.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async loadCategories(): Promise<void> {\n        try {\n            const cats = await CoreCourses.getCategories(0, true);\n            this.categoriesRetrieved = true;\n            this.categories = {};\n            // Index categories by ID.\n            cats.forEach((category) => {\n                this.categories[category.id] = category;\n            });\n        } catch {\n            // Ignore errors.\n        }\n    }\n\n    /**\n     * Merge a period of online events with the offline events of that period.\n     *\n     * @param onlineEvents Online events.\n     * @return Merged events.\n     */\n    protected mergeEvents(onlineEvents: AddonCalendarEventToDisplay[]): AddonCalendarEventToDisplay[] {\n        if (!this.offlineEvents.length && !this.deletedEvents.length) {\n            // No offline events, nothing to merge.\n            return onlineEvents;\n        }\n\n        const start = this.initialTime + (CoreConstants.SECONDS_DAY * this.daysLoaded);\n        const end = start + (CoreConstants.SECONDS_DAY * AddonCalendarProvider.DAYS_INTERVAL) - 1;\n        let result = onlineEvents;\n\n        if (this.deletedEvents.length) {\n            // Mark as deleted the events that were deleted in offline.\n            result.forEach((event) => {\n                event.deleted = this.deletedEvents.indexOf(event.id) != -1;\n            });\n        }\n\n        if (this.offlineEvents.length) {\n            // Remove the online events that were modified in offline.\n            result = result.filter((event) => {\n                const offlineEvent = this.offlineEvents.find((ev) => ev.id == event.id);\n\n                return !offlineEvent;\n            });\n        }\n\n        // Now get the offline events that belong to this period.\n        const periodOfflineEvents = this.offlineEvents.filter((event) => {\n            if (this.daysLoaded == 0 && event.timestart < start) {\n                // Display offline events that are previous to current time to allow editing them.\n                return true;\n            }\n\n            return (event.timestart >= start || event.timestart + event.timeduration >= start) && event.timestart <= end;\n        });\n\n        // Merge both arrays and sort them.\n        result = result.concat(periodOfflineEvents);\n\n        return AddonCalendarHelper.sortEvents(result);\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved when done.\n     */\n    async doRefresh(refresher?: IonRefresher, done?: () => void, showErrors?: boolean): Promise<void> {\n        if (!this.eventsLoaded) {\n            return;\n        }\n\n        await this.refreshEvents(true, showErrors).finally(() => {\n            refresher?.complete();\n            done && done();\n        });\n    }\n\n    /**\n     * Refresh the events.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved when done.\n     */\n    async refreshEvents(sync?: boolean, showErrors?: boolean): Promise<void> {\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonCalendar.invalidateEventsList());\n        promises.push(AddonCalendar.invalidateAllowedEventTypes());\n\n        if (this.categoriesRetrieved) {\n            promises.push(CoreCourses.invalidateCategories(0, true));\n            this.categoriesRetrieved = false;\n        }\n\n        await Promise.all(promises).finally(() => this.fetchData(true, sync, showErrors));\n    }\n\n    /**\n     * Check date should be shown on event list for the current event.\n     * If date has changed from previous to current event it should be shown.\n     *\n     * @param event Current event where to show the date.\n     * @param prevEvent Previous event where to compare the date with.\n     * @return If date has changed and should be shown.\n     */\n    protected showDate(event: AddonCalendarEventToDisplay, prevEvent?: AddonCalendarEventToDisplay): boolean {\n        if (!prevEvent) {\n            // First event, show it.\n            return true;\n        }\n\n        // Check if day has changed.\n        return !moment(event.timestart * 1000).isSame(prevEvent.timestart * 1000, 'day');\n    }\n\n    /**\n     * Check if event ends the same date or not.\n     *\n     * @param event Event info.\n     * @return If date has changed and should be shown.\n     */\n    protected endsSameDay(event: AddonCalendarEventToDisplay): boolean {\n        if (!event.timeduration) {\n            // No duration.\n            return true;\n        }\n\n        // Check if day has changed.\n        return moment(event.timestart * 1000).isSame((event.timestart + event.timeduration) * 1000, 'day');\n    }\n\n    /**\n     * Show the context menu.\n     *\n     * @param event Event.\n     */\n    async openFilter(event: MouseEvent): Promise<void> {\n        await CoreDomUtils.openPopover({\n            component: AddonCalendarFilterPopoverComponent,\n            componentProps: {\n                courses: this.courses,\n                filter: this.filter,\n            },\n            event,\n        });\n    }\n\n    /**\n     * Open page to create/edit an event.\n     *\n     * @param eventId Event ID to edit.\n     */\n    openEdit(eventId?: number): void {\n        this.eventId = undefined;\n        eventId = eventId || 0;\n\n        const params: Params = {};\n\n        if (this.filter.courseId) {\n            params.courseId = this.filter.courseId;\n        }\n\n        CoreNavigator.navigateToSitePath(`calendar/edit/${eventId}`, { params });\n    }\n\n    /**\n     * Open calendar events settings.\n     */\n    openSettings(): void {\n        CoreNavigator.navigateToSitePath('/calendar/settings');\n    }\n\n    /**\n     * Navigate to a particular event.\n     *\n     * @param eventId Event to load.\n     */\n    gotoEvent(eventId: number): void {\n        this.eventId = eventId;\n\n        if (eventId <= 0) {\n            // It's an offline event, go to the edit page.\n            this.openEdit(eventId);\n        } else {\n            CoreNavigator.navigateToSitePath(`/calendar/event/${eventId}`);\n        }\n    }\n\n    /**\n     * Find an event and mark it as deleted.\n     *\n     * @param eventId Event ID.\n     * @param deleted Whether to mark it as deleted or not.\n     */\n    protected markAsDeleted(eventId: number, deleted: boolean): void {\n        const event = this.onlineEvents.find((event) => event.id == eventId);\n\n        if (event) {\n            event.deleted = deleted;\n        }\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.obsDefaultTimeChange?.off();\n        this.newEventObserver?.off();\n        this.discardedObserver?.off();\n        this.editEventObserver?.off();\n        this.deleteEventObserver?.off();\n        this.undeleteEventObserver?.off();\n        this.syncObserver?.off();\n        this.manualSyncObserver?.off();\n        this.filterChangedObserver?.off();\n        this.onlineObserver?.unsubscribe();\n    }\n\n}\n","export default \":host ion-note {\\n  max-width: 30%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvY2FsZW5kYXIvcGFnZXMvbGlzdC9saXN0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSxjQUFBO0FBQVIiLCJmaWxlIjoic3JjL2FkZG9ucy9jYWxlbmRhci9wYWdlcy9saXN0L2xpc3Quc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgICBpb24tbm90ZSB7XG4gICAgICAgIG1heC13aWR0aDogMzAlO1xuICAgIH1cbn1cbiJdfQ== */\";"],"sourceRoot":"webpack:///"}