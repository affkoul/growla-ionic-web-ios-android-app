{"version":3,"sources":["./src/core/features/login/pages/forgotten-password/forgotten-password.html","./src/core/features/login/pages/forgotten-password/forgotten-password.module.ts","./src/core/features/login/pages/forgotten-password/forgotten-password.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,mQAAoM,8CAA8C,6JAA6J,2DAA2D,4PAA4P,qCAAqC,0KAA0K,qCAAqC,qLAAqL,iCAAiC,4NAA4N,4CAA4C,sFAAsF,4CAA4C,sTAAsT,qCAAqC,gFAAgF,E;;;;;;;;;;;;ACAp9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEQ;AACc;AAEC;AACc;AAEtE,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kFAA8B;KAC5C;CACJ,CAAC;IAYW,oCAAoC,SAApC,oCAAoC;CAAG;AAAvC,oCAAoC;IAVhD,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,oEAAgB;SACnB;QACD,YAAY,EAAE;YACV,kFAA8B;SACjC;QACD,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,oCAAoC,CAAG;AAAH;;;;;;;;;;;;;ACrCjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEwC;AACL;AAEjB;AACqB;AACtB;AAEE;AACP;AAE7C;;GAEG;IAKU,8BAA8B,SAA9B,8BAA8B;IAQvC,YACc,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAEtC,CAAC;IAED;;OAEG;IACH,QAAQ;QACJ,MAAM,OAAO,GAAG,iEAAa,CAAC,aAAa,CAAS,SAAS,CAAC,CAAC;QAC/D,IAAI,CAAC,OAAO,EAAE;YACV,gEAAY,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC;YACtD,iEAAa,CAAC,IAAI,EAAE,CAAC;YAErB,OAAO;SACV;QAED,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,oDAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,KAAK,EAAE,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,KAAK,EAAE,CAAC,iEAAa,CAAC,aAAa,CAAS,UAAU,CAAC,IAAI,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtF,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACG,aAAa,CAAC,CAAQ;;YACxB,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,CAAC,CAAC,eAAe,EAAE,CAAC;YAEpB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;YACtC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;YAEtC,IAAI,CAAC,KAAK,EAAE;gBACR,gEAAY,CAAC,cAAc,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;gBAEhE,OAAO;aACV;YAED,MAAM,KAAK,GAAG,MAAM,gEAAY,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,KAAK,IAAI,OAAO,CAAC;YAEhC,IAAI;gBACA,MAAM,QAAQ,GAAG,MAAM,qFAAe,CAAC,oBAAoB,CACvD,IAAI,CAAC,OAAO,EACZ,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EACnB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CACtB,CAAC;gBAEF,IAAI,QAAQ,CAAC,MAAM,IAAI,WAAW,EAAE;oBAChC,0BAA0B;oBAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,QAAS,CAAC,CAAC;iBAC9C;qBAAM,IAAI,QAAQ,CAAC,MAAM,IAAI,6BAA6B,IAAI,QAAQ,CAAC,MAAM,IAAI,6BAA6B,EAAE;oBAC7G,oBAAoB;oBACpB,gEAAY,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBAChD;qBAAM;oBACH,WAAW;oBACX,0DAAS,CAAC,yBAAyB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;oBAE5D,gEAAY,CAAC,SAAS,CAAC,qDAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAC3E,iEAAa,CAAC,IAAI,EAAE,CAAC;iBACxB;aACJ;YAAC,OAAO,KAAK,EAAE;gBACZ,gEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;aACtC;oBAAS;gBACN,KAAK,CAAC,OAAO,EAAE,CAAC;aACnB;QACL,CAAC;KAAA;IAED,mCAAmC;IACzB,SAAS,CAAC,MAAe,EAAE,QAAiC;QAClE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,UAAU,IAAI,CAAC,MAAM,CAAC,EAAE;gBAChF,gEAAY,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC7C,MAAM;aACT;SACJ;IACL,CAAC;CAEJ;;YA5GQ,0DAAW;;;0BAkBf,uDAAS,SAAC,mBAAmB;;AAFrB,8BAA8B;IAJ1C,+DAAS,CAAC;QACP,QAAQ,EAAE,oCAAoC;QAC9C,oQAAsC;KACzC,CAAC;GACW,8BAA8B,CA4F1C;AA5F0C","file":"pages-forgotten-password-forgotten-password-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n\\n        <h1>{{ 'core.login.passwordforgotten' | translate }}</h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-list lines=\\\"none\\\">\\n        <ion-item class=\\\"ion-text-wrap\\\">\\n            <ion-label>{{ 'core.login.passwordforgotteninstructions2' | translate }}</ion-label>\\n        </ion-item>\\n    </ion-list>\\n    <ion-card>\\n        <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"resetPassword($event)\\\" #resetPasswordForm>\\n            <ion-item-divider class=\\\"ion-text-wrap\\\">\\n                <ion-label><h2>{{ 'core.login.searchby' | translate }}</h2></ion-label>\\n            </ion-item-divider>\\n            <ion-radio-group formControlName=\\\"field\\\">\\n                <ion-item>\\n                    <ion-label>{{ 'core.login.username' | translate }}</ion-label>\\n                    <ion-radio slot=\\\"end\\\" value=\\\"username\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>{{ 'core.user.email' | translate }}</ion-label>\\n                    <ion-radio slot=\\\"end\\\" value=\\\"email\\\"></ion-radio>\\n                </ion-item>\\n            </ion-radio-group>\\n            <ion-item>\\n                <ion-label class=\\\"sr-only\\\">{{ 'core.login.usernameoremail' | translate }}</ion-label>\\n                <ion-input type=\\\"text\\\" name=\\\"value\\\" placeholder=\\\"{{ 'core.login.usernameoremail' | translate }}\\\"\\n                    formControlName=\\\"value\\\" autocapitalize=\\\"none\\\" autocorrect=\\\"off\\\" [core-auto-focus]=\\\"autoFocus\\\">\\n                </ion-input>\\n            </ion-item>\\n            <ion-button type=\\\"submit\\\" class=\\\"ion-margin\\\" expand=\\\"block\\\" [disabled]=\\\"!myForm.valid\\\">\\n                {{ 'core.courses.search' | translate }}\\n            </ion-button>\\n        </form>\\n    </ion-card>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreLoginForgottenPasswordPage } from './forgotten-password';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreLoginForgottenPasswordPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        CoreLoginForgottenPasswordPage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreLoginForgottenPasswordPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreLoginHelper } from '@features/login/services/login-helper';\nimport { Translate, Platform } from '@singletons';\nimport { CoreWSExternalWarning } from '@services/ws';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreForms } from '@singletons/form';\n\n/**\n * Page to recover a forgotten password.\n */\n@Component({\n    selector: 'page-core-login-forgotten-password',\n    templateUrl: 'forgotten-password.html',\n})\nexport class CoreLoginForgottenPasswordPage implements OnInit {\n\n    @ViewChild('resetPasswordForm') formElement?: ElementRef;\n\n    myForm!: FormGroup;\n    siteUrl!: string;\n    autoFocus!: boolean;\n\n    constructor(\n        protected formBuilder: FormBuilder,\n    ) {\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit(): void {\n        const siteUrl = CoreNavigator.getRouteParam<string>('siteUrl');\n        if (!siteUrl) {\n            CoreDomUtils.showErrorModal('Site URL not supplied.');\n            CoreNavigator.back();\n\n            return;\n        }\n\n        this.siteUrl = siteUrl;\n        this.autoFocus = Platform.is('tablet');\n        this.myForm = this.formBuilder.group({\n            field: ['username', Validators.required],\n            value: [CoreNavigator.getRouteParam<string>('username') || '', Validators.required],\n        });\n    }\n\n    /**\n     * Request to reset the password.\n     *\n     * @param e Event.\n     */\n    async resetPassword(e: Event): Promise<void> {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const field = this.myForm.value.field;\n        const value = this.myForm.value.value;\n\n        if (!value) {\n            CoreDomUtils.showErrorModal('core.login.usernameoremail', true);\n\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n        const isMail = field == 'email';\n\n        try {\n            const response = await CoreLoginHelper.requestPasswordReset(\n                this.siteUrl,\n                isMail ? '' : value,\n                isMail ? value : '',\n            );\n\n            if (response.status == 'dataerror') {\n                // Error in the data sent.\n                this.showError(isMail, response.warnings!);\n            } else if (response.status == 'emailpasswordconfirmnotsent' || response.status == 'emailpasswordconfirmnoemail') {\n                // Error, not found.\n                CoreDomUtils.showErrorModal(response.notice);\n            } else {\n                // Success.\n                CoreForms.triggerFormSubmittedEvent(this.formElement, true);\n\n                CoreDomUtils.showAlert(Translate.instant('core.success'), response.notice);\n                CoreNavigator.back();\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    // Show an error from the warnings.\n    protected showError(isMail: boolean, warnings: CoreWSExternalWarning[]): void {\n        for (let i = 0; i < warnings.length; i++) {\n            const warning = warnings[i];\n            if ((warning.item == 'email' && isMail) || (warning.item == 'username' && !isMail)) {\n                CoreDomUtils.showErrorModal(warning.message);\n                break;\n            }\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}