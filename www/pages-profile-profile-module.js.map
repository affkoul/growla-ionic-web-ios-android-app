{"version":3,"sources":["./src/core/features/user/pages/profile/profile.html","./src/core/features/user/pages/profile/profile.module.ts","./src/core/features/user/pages/profile/profile.page.ts","./src/core/features/user/pages/profile/profile.scss"],"names":[],"mappings":"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","file":"pages-profile-profile-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1 *ngIf=\\\"title\\\">{{ title }}</h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!userLoaded\\\" (ionRefresh)=\\\"refreshUser($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n    <core-loading [hideUntil]=\\\"userLoaded\\\">\\n        <ion-list *ngIf=\\\"user && !isDeleted && isEnrolled\\\">\\n            <ion-item class=\\\"ion-text-center core-user-profile-maininfo\\\">\\n                <core-user-avatar [user]=\\\"user\\\" [userId]=\\\"user.id\\\" [linkProfile]=\\\"false\\\" [checkOnline]=\\\"true\\\">\\n                    <ion-button\\n                        class=\\\"edit-avatar\\\"\\n                        *ngIf=\\\"canChangeProfilePicture\\\"\\n                        (click)=\\\"changeProfilePicture()\\\"\\n                        [attr.aria-label]=\\\"'core.user.newpicture' | translate\\\"\\n                        fill=\\\"clear\\\"\\n                        color=\\\"dark\\\"\\n                    >\\n                        <ion-icon slot=\\\"icon-only\\\" name=\\\"fas-pen\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                    </ion-button>\\n                </core-user-avatar>\\n                <ion-label>\\n                    <h2>{{ user.fullname }}</h2>\\n                    <p *ngIf=\\\"user.address\\\">{{ user.address }}</p>\\n                    <p *ngIf=\\\"rolesFormatted\\\" class=\\\"ion-text-wrap\\\">\\n                        <strong>{{ 'core.user.roles' | translate}}</strong>{{'core.labelsep' | translate}}\\n                        {{ rolesFormatted }}\\n                    </p>\\n                </ion-label>\\n            </ion-item>\\n\\n            <div class=\\\"core-user-communication-handlers\\\"\\n                *ngIf=\\\"(communicationHandlers && communicationHandlers.length) || isLoadingHandlers\\\">\\n                <ion-item *ngIf=\\\"communicationHandlers && communicationHandlers.length\\\">\\n                    <ion-label>\\n                        <ion-button *ngFor=\\\"let handler of communicationHandlers\\\" expand=\\\"block\\\" size=\\\"default\\\"\\n                            [ngClass]=\\\"['core-user-profile-handler', handler.class || '']\\\" (click)=\\\"handlerClicked($event, handler)\\\"\\n                            [hidden]=\\\"handler.hidden\\\" [attr.aria-label]=\\\"handler.title | translate\\\" [disabled]=\\\"handler.spinner\\\">\\n                            <ion-icon *ngIf=\\\"handler.icon\\\" [name]=\\\"handler.icon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ handler.title | translate }}\\n                        </ion-button>\\n                    </ion-label>\\n                </ion-item>\\n                <div *ngIf=\\\"isLoadingHandlers\\\" class=\\\"ion-text-center core-loading-handlers\\\">\\n                    <ion-spinner [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner>\\n                </div>\\n            </div>\\n\\n\\n            <ion-item button class=\\\"ion-text-wrap core-user-profile-handler\\\" (click)=\\\"openUserDetails()\\\"\\n                [attr.aria-label]=\\\"'core.user.details' | translate\\\" detail=\\\"true\\\">\\n                <ion-icon name=\\\"fas-user\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">{{ 'core.user.details' | translate }}</p>\\n                </ion-label>\\n            </ion-item>\\n            <ion-item class=\\\"ion-text-center core-loading-handlers\\\" *ngIf=\\\"isLoadingHandlers\\\">\\n                <ion-label><ion-spinner [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner></ion-label>\\n            </ion-item>\\n\\n            <ion-item button *ngFor=\\\"let handler of newPageHandlers\\\" class=\\\"ion-text-wrap\\\" (click)=\\\"handlerClicked($event, handler)\\\"\\n                [ngClass]=\\\"['core-user-profile-handler', handler.class || '']\\\" [hidden]=\\\"handler.hidden\\\"\\n                [attr.aria-label]=\\\"handler.title | translate\\\" detail=\\\"true\\\">\\n                <ion-icon *ngIf=\\\"handler.icon\\\" [name]=\\\"handler.icon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">{{ handler.title | translate }}</p>\\n                </ion-label>\\n            </ion-item>\\n\\n            <ion-item *ngIf=\\\"actionHandlers && actionHandlers.length\\\">\\n                <ion-label>\\n                    <ion-button *ngFor=\\\"let handler of actionHandlers\\\" expand=\\\"block\\\" fill=\\\"outline\\\" size=\\\"default\\\"\\n                        [ngClass]=\\\"['core-user-profile-handler', handler.class || '']\\\" (click)=\\\"handlerClicked($event, handler)\\\"\\n                        [hidden]=\\\"handler.hidden\\\" [attr.aria-label]=\\\"handler.title | translate\\\" [disabled]=\\\"handler.spinner\\\">\\n                        <ion-icon *ngIf=\\\"handler.icon\\\" [name]=\\\"handler.icon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                        {{ handler.title | translate }}\\n                        <ion-spinner *ngIf=\\\"handler.spinner\\\" slot=\\\"end\\\" [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner>\\n                    </ion-button>\\n                </ion-label>\\n            </ion-item>\\n        </ion-list>\\n\\n        <core-empty-box *ngIf=\\\"!user && !isDeleted && isEnrolled\\\" icon=\\\"far-user\\\"\\n            [message]=\\\" 'core.user.detailsnotavailable' | translate\\\">\\n        </core-empty-box>\\n        <core-empty-box *ngIf=\\\"isDeleted\\\" icon=\\\"far-user\\\" [message]=\\\"'core.userdeleted' | translate\\\"></core-empty-box>\\n        <core-empty-box *ngIf=\\\"!isEnrolled\\\" icon=\\\"far-user\\\" [message]=\\\"'core.notenrolledprofile' | translate\\\"></core-empty-box>\\n    </core-loading>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreUserProfilePage } from './profile.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreUserProfilePage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        CoreUserProfilePage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreUserProfilePageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\nimport { CoreSite } from '@classes/site';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreMimetypeUtils } from '@services/utils/mimetype';\nimport { Translate } from '@singletons';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport {\n    CoreUser,\n    CoreUserProfile,\n    CoreUserProvider,\n} from '@features/user/services/user';\nimport { CoreUserHelper } from '@features/user/services/user-helper';\nimport { CoreUserDelegate, CoreUserDelegateService, CoreUserProfileHandlerData } from '@features/user/services/user-delegate';\nimport { CoreFileUploaderHelper } from '@features/fileuploader/services/fileuploader-helper';\nimport { CoreIonLoadingElement } from '@classes/ion-loading';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreCourses } from '@features/courses/services/courses';\n\n@Component({\n    selector: 'page-core-user-profile',\n    templateUrl: 'profile.html',\n    styleUrls: ['profile.scss'],\n})\nexport class CoreUserProfilePage implements OnInit, OnDestroy {\n\n    protected courseId?: number;\n    protected userId!: number;\n    protected site?: CoreSite;\n    protected obsProfileRefreshed: CoreEventObserver;\n    protected subscription?: Subscription;\n\n    userLoaded = false;\n    isLoadingHandlers = false;\n    user?: CoreUserProfile;\n    title?: string;\n    isDeleted = false;\n    isEnrolled = true;\n    canChangeProfilePicture = false;\n    rolesFormatted?: string;\n    actionHandlers: CoreUserProfileHandlerData[] = [];\n    newPageHandlers: CoreUserProfileHandlerData[] = [];\n    communicationHandlers: CoreUserProfileHandlerData[] = [];\n\n    constructor() {\n        this.obsProfileRefreshed = CoreEvents.on(CoreUserProvider.PROFILE_REFRESHED, (data) => {\n            if (!this.user || !data.user) {\n                return;\n            }\n\n            this.user.email = data.user.email;\n            this.user.address = CoreUserHelper.formatAddress('', data.user.city, data.user.country);\n        }, CoreSites.getCurrentSiteId());\n    }\n\n    /**\n     * On init.\n     */\n    async ngOnInit(): Promise<void> {\n        this.site = CoreSites.getCurrentSite();\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId');\n        const userId = CoreNavigator.getRouteNumberParam('userId');\n\n        if (!this.site) {\n            return;\n        }\n        if (userId === undefined) {\n            CoreDomUtils.showErrorModal('User ID not supplied');\n            CoreNavigator.back();\n\n            return;\n        }\n\n        this.userId = userId;\n\n        // Allow to change the profile image only in the app profile page.\n        this.canChangeProfilePicture =\n            (!this.courseId || this.courseId == this.site.getSiteHomeId()) &&\n            this.userId == this.site.getUserId() &&\n            this.site.canUploadFiles() &&\n            CoreUser.canUpdatePictureInSite(this.site) &&\n            !CoreUser.isUpdatePictureDisabledInSite(this.site);\n\n        try {\n            await this.fetchUser();\n\n            try {\n                await CoreUser.logView(this.userId, this.courseId, this.user!.fullname);\n            } catch (error) {\n                this.isDeleted = error?.errorcode === 'userdeleted';\n                this.isEnrolled = error?.errorcode !== 'notenrolledprofile';\n            }\n        } finally {\n            this.userLoaded = true;\n        }\n    }\n\n    /**\n     * Fetches the user and updates the view.\n     */\n    async fetchUser(): Promise<void> {\n        try {\n            const user = await CoreUser.getProfile(this.userId, this.courseId);\n\n            user.address = CoreUserHelper.formatAddress('', user.city, user.country);\n            this.rolesFormatted = 'roles' in user ? CoreUserHelper.formatRoleList(user.roles) : '';\n\n            this.user = user;\n            this.title = user.fullname;\n\n            // If there's already a subscription, unsubscribe because we'll get a new one.\n            this.subscription?.unsubscribe();\n\n            this.subscription = CoreUserDelegate.getProfileHandlersFor(user, this.courseId).subscribe((handlers) => {\n                this.actionHandlers = [];\n                this.newPageHandlers = [];\n                this.communicationHandlers = [];\n                handlers.forEach((handler) => {\n                    switch (handler.type) {\n                        case CoreUserDelegateService.TYPE_COMMUNICATION:\n                            this.communicationHandlers.push(handler.data);\n                            break;\n                        case CoreUserDelegateService.TYPE_ACTION:\n                            this.actionHandlers.push(handler.data);\n                            break;\n                        case CoreUserDelegateService.TYPE_NEW_PAGE:\n                        default:\n                            this.newPageHandlers.push(handler.data);\n                            break;\n                    }\n                });\n\n                this.isLoadingHandlers = !CoreUserDelegate.areHandlersLoaded(user.id);\n            });\n\n            await this.checkUserImageUpdated();\n\n        } catch (error) {\n            // Error is null for deleted users, do not show the modal.\n            CoreDomUtils.showErrorModal(error);\n        }\n    }\n\n    /**\n     * Check if current user image has changed.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async checkUserImageUpdated(): Promise<void> {\n        if (!this.site || !this.site.getInfo() || !this.user) {\n            return;\n        }\n\n        if (this.userId != this.site.getUserId() || !this.isUserAvatarDirty()) {\n            // Not current user or hasn't changed.\n            return;\n        }\n\n        // The current user image received is different than the one stored in site info. Assume the image was updated.\n        // Update the site info to get the right avatar in there.\n        try {\n            await CoreSites.updateSiteInfo(this.site.getId());\n        } catch {\n            // Cannot update site info. Assume the profile image is the right one.\n            CoreEvents.trigger(CoreUserProvider.PROFILE_PICTURE_UPDATED, {\n                userId: this.userId,\n                picture: this.user.profileimageurl,\n            }, this.site.getId());\n        }\n\n        if (this.isUserAvatarDirty()) {\n            // The image is still different, this means that the good one is the one in site info.\n            await this.refreshUser();\n        } else {\n            // Now they're the same, send event to use the right avatar in the rest of the app.\n            CoreEvents.trigger(CoreUserProvider.PROFILE_PICTURE_UPDATED, {\n                userId: this.userId,\n                picture: this.user.profileimageurl,\n            }, this.site.getId());\n        }\n    }\n\n    /**\n     * Opens dialog to change profile picture.\n     */\n    async changeProfilePicture(): Promise<void> {\n        const maxSize = -1;\n        const title = Translate.instant('core.user.newpicture');\n        const mimetypes = CoreMimetypeUtils.getGroupMimeInfo('image', 'mimetypes');\n        let modal: CoreIonLoadingElement | undefined;\n\n        try {\n            const result = await CoreFileUploaderHelper.selectAndUploadFile(maxSize, title, mimetypes);\n\n            modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n            const profileImageURL = await CoreUser.changeProfilePicture(result.itemid, this.userId, this.site!.getId());\n\n            CoreEvents.trigger(CoreUserProvider.PROFILE_PICTURE_UPDATED, {\n                userId: this.userId,\n                picture: profileImageURL,\n            }, this.site!.getId());\n\n            CoreSites.updateSiteInfo(this.site!.getId());\n\n            this.refreshUser();\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            modal?.dismiss();\n        }\n    }\n\n    /**\n     * Refresh the user.\n     *\n     * @param event Event.\n     * @return Promise resolved when done.\n     */\n    async refreshUser(event?: IonRefresher): Promise<void> {\n        await CoreUtils.ignoreErrors(Promise.all([\n            CoreUser.invalidateUserCache(this.userId),\n            CoreCourses.invalidateUserNavigationOptions(),\n            CoreCourses.invalidateUserAdministrationOptions(),\n        ]));\n\n        await this.fetchUser();\n\n        event?.complete();\n\n        if (this.user) {\n            CoreEvents.trigger(CoreUserProvider.PROFILE_REFRESHED, {\n                courseId: this.courseId,\n                userId: this.userId,\n                user: this.user,\n            }, this.site?.getId());\n        }\n    }\n\n    /**\n     * Open the page with the user details.\n     */\n    openUserDetails(): void {\n        CoreNavigator.navigateToSitePath('user/about', {\n            params: {\n                courseId: this.courseId,\n                userId: this.userId,\n            },\n        });\n    }\n\n    /**\n     * A handler was clicked.\n     *\n     * @param event Click event.\n     * @param handler Handler that was clicked.\n     */\n    handlerClicked(event: Event, handler: CoreUserProfileHandlerData): void {\n        handler.action(event, this.user!, this.courseId);\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.subscription?.unsubscribe();\n        this.obsProfileRefreshed.off();\n    }\n\n    /**\n     * Check whether the user avatar is not up to date with site info.\n     *\n     * @return Whether the user avatar differs from site info cache.\n     */\n    private isUserAvatarDirty(): boolean {\n        if (!this.user || !this.site) {\n            return false;\n        }\n\n        const courseAvatarUrl = this.normalizeAvatarUrl(this.user.profileimageurl);\n        const siteAvatarUrl = this.normalizeAvatarUrl(this.site.getInfo()?.userpictureurl);\n\n        return courseAvatarUrl !== siteAvatarUrl;\n    }\n\n    /**\n     * Normalize an avatar url regardless of theme.\n     *\n     * Given that the default image is the only one that can be changed per theme, any other url will stay the same. Note that\n     * the values returned by this function may not be valid urls, given that they are intended for string comparison.\n     *\n     * @param avatarUrl Avatar url.\n     * @return Normalized avatar string (may not be a valid url).\n     */\n    private normalizeAvatarUrl(avatarUrl?: string): string {\n        if (!avatarUrl) {\n            return 'undefined';\n        }\n\n        if (avatarUrl.startsWith(`${this.site?.siteUrl}/theme/image.php`)) {\n            return 'default';\n        }\n\n        return avatarUrl;\n    }\n\n}\n","export default \":host .core-user-profile-maininfo::part(native) {\\n  flex-direction: column;\\n}\\n:host ::ng-deep core-user-avatar {\\n  display: block;\\n  --core-avatar-size: var(--core-large-avatar-size);\\n  height: calc(var(--core-avatar-size) + 16px);\\n}\\n:host ::ng-deep core-user-avatar img {\\n  margin: 8px auto;\\n}\\n:host ::ng-deep core-user-avatar .contact-status {\\n  width: 24px !important;\\n  height: 24px !important;\\n  right: calc(50% - 12px - var(--core-avatar-size) / 2) !important;\\n}\\n:host ::ng-deep core-user-avatar .edit-avatar {\\n  position: absolute;\\n  right: calc(50% - 15px - var(--core-avatar-size) / 2);\\n  bottom: -12px;\\n}\\n:host-context([dir=rtl]) :host ::ng-deep core-user-avatar .edit-avatar {\\n  left: 0;\\n  right: unset;\\n}\\n:host ::ng-deep core-user-avatar .edit-avatar::part(native) {\\n  border-radius: 50%;\\n  background: var(--ion-item-background);\\n}\\n:host-context([dir=rtl]) ::ng-deep core-user-avatar .edit-avatar {\\n  left: -24px;\\n  right: unset;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb3JlL2ZlYXR1cmVzL3VzZXIvcGFnZXMvcHJvZmlsZS9wcm9maWxlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUk7RUFDSSxzQkFBQTtBQURSO0FBSVE7RUFDSSxjQUFBO0VBQ0EsaURBQUE7RUFDQSw0Q0FBQTtBQUZaO0FBSVk7RUFDSSxnQkFBQTtBQUZoQjtBQUtZO0VBQ0ksc0JBQUE7RUFDQSx1QkFBQTtFQUNBLGdFQUFBO0FBSGhCO0FBTVk7RUFDSSxrQkFBQTtFQUNBLHFEQUFBO0VBQ0EsYUFBQTtBQUpoQjtBQU1nQjtFQUNJLE9BQUE7RUFDQSxZQUFBO0FBSnBCO0FBTWdCO0VBQ0ksa0JBQUE7RUFDQSxzQ0FBQTtBQUpwQjtBQVlBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUFUSiIsImZpbGUiOiJzcmMvY29yZS9mZWF0dXJlcy91c2VyL3BhZ2VzL3Byb2ZpbGUvcHJvZmlsZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuXG4gICAgLmNvcmUtdXNlci1wcm9maWxlLW1haW5pbmZvOjpwYXJ0KG5hdGl2ZSkge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIH1cbiAgICA6Om5nLWRlZXAge1xuICAgICAgICBjb3JlLXVzZXItYXZhdGFyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgLS1jb3JlLWF2YXRhci1zaXplOiB2YXIoLS1jb3JlLWxhcmdlLWF2YXRhci1zaXplKTtcbiAgICAgICAgICAgIGhlaWdodDogY2FsYyh2YXIoLS1jb3JlLWF2YXRhci1zaXplKSArIDE2cHgpO1xuXG4gICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgIG1hcmdpbjogOHB4IGF1dG87XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC5jb250YWN0LXN0YXR1cyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDI0cHggIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDI0cHggIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICByaWdodDogY2FsYyg1MCUgLSAxMnB4IC0gIHZhcigtLWNvcmUtYXZhdGFyLXNpemUpIC8gMikgIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLmVkaXQtYXZhdGFyIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgcmlnaHQ6IGNhbGMoNTAlIC0gMTVweCAtICB2YXIoLS1jb3JlLWF2YXRhci1zaXplKSAvIDIpO1xuICAgICAgICAgICAgICAgIGJvdHRvbTogLTEycHg7XG5cbiAgICAgICAgICAgICAgICA6aG9zdC1jb250ZXh0KFtkaXI9XCJydGxcIl0pICYge1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgICAgICAgICByaWdodDogdW5zZXQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICY6OnBhcnQobmF0aXZlKSB7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogdmFyKC0taW9uLWl0ZW0tYmFja2dyb3VuZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG59XG5cbjpob3N0LWNvbnRleHQoW2Rpcj1cInJ0bFwiXSkgOjpuZy1kZWVwIGNvcmUtdXNlci1hdmF0YXIgLmVkaXQtYXZhdGFyIHtcbiAgICBsZWZ0OiAtMjRweDtcbiAgICByaWdodDogdW5zZXQ7XG59XG4iXX0= */\";"],"sourceRoot":"webpack:///"}