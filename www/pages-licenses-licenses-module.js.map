{"version":3,"sources":["./src/core/features/settings/pages/licenses/licenses.html","./src/core/features/settings/pages/licenses/licenses.module.ts","./src/core/features/settings/pages/licenses/licenses.ts"],"names":[],"mappings":"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","file":"pages-licenses-licenses-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n\\n        <h1>{{ 'core.settings.opensourcelicenses' | translate }}</h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\n        <ion-item button *ngIf=\\\"error\\\" class=\\\"ion-text-wrap\\\" [href]=\\\"licensesUrl\\\" core-link auto-login=\\\"no\\\">\\n            <ion-label>\\n                {{ 'core.settings.opensourcelicenses' | translate }}\\n            </ion-label>\\n            <ion-button [href]=\\\"licensesUrl\\\" target=\\\"_blank\\\" fill=\\\"clear\\\" slot=\\\"end\\\" core-link auto-login=\\\"no\\\">\\n                {{ 'core.view' | translate }}</ion-button>\\n        </ion-item>\\n\\n        <ng-container *ngIf=\\\"!error\\\">\\n            <ion-item *ngFor=\\\"let license of licenses\\\" class=\\\"ion-text-wrap\\\">\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">\\n                        <a *ngIf=\\\"license.repository\\\" [href]=\\\"license.repository\\\" core-link\\n                            auto-login=\\\"no\\\">{{ license.name }}</a>\\n                        <ng-container *ngIf=\\\"!license.repository\\\">{{ license.name }}</ng-container> - {{ license.version }}\\n                    </p>\\n                    <p class=\\\"item-heading\\\" *ngIf=\\\"license.publisher\\\">\\n                        {{ 'core.settings.publisher' | translate }}{{ 'core.labelsep' | translate }} {{ license.publisher }}\\n                    </p>\\n                    <p>{{ 'core.settings.license' | translate }}{{ 'core.labelsep' | translate }} {{ license.licenses }}</p>\\n                    <p><a *ngIf=\\\"license.url\\\" [href]=\\\"license.url\\\" core-link auto-login=\\\"no\\\">{{ license.url }}</a></p>\\n                    <p><a *ngIf=\\\"license.email\\\" [href]=\\\"'mailto:' + license.email\\\" core-link\\n                            auto-login=\\\"no\\\">{{ license.email }}</a></p>\\n                </ion-label>\\n                <ion-button *ngIf=\\\"license.licenseUrl\\\" [href]=\\\"license.licenseUrl\\\" target=\\\"_blank\\\"\\n                    fill=\\\"clear\\\" slot=\\\"end\\\" core-link auto-login=\\\"no\\\">{{ 'core.view' | translate }}</ion-button>\\n            </ion-item>\\n        </ng-container>\\n    </core-loading>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreSettingsLicensesPage } from './licenses';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreSettingsLicensesPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        CoreSettingsLicensesPage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreSettingsLicensesPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoreConstants } from '@/core/constants';\nimport { Http } from '@singletons';\n\n/**\n * Defines license info\n */\ninterface CoreSettingsLicense {\n    name: string;\n    version: string;\n    licenses: string;\n    repository?: string;\n    publisher?: string;\n    url?: string;\n    email?: string;\n    licenseUrl?: string;\n    licenseFile?: string;\n}\n\n/**\n * Page that displays the open source licenses information.\n */\n@Component({\n    selector: 'page-core-app-settings-licenses',\n    templateUrl: 'licenses.html',\n})\nexport class CoreSettingsLicensesPage implements OnInit {\n\n    licensesUrl: string;\n    loaded = false;\n    licenses: CoreSettingsLicense[] = [];\n    error = false;\n\n    constructor() {\n        let version = 'v' + CoreConstants.CONFIG.versionname;\n        if (version.indexOf('-') > 0) {\n            version = 'integration';\n        }\n\n        this.licensesUrl = 'https://raw.githubusercontent.com/moodlehq/moodleapp/' + version + '/licenses.json';\n    }\n\n    /**\n     * View loaded.\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            const licenses = await Http.get(this.licensesUrl).toPromise();\n            this.licenses = Object.keys(licenses).map((name) => {\n                const license = licenses[name];\n\n                const nameSplit = name.lastIndexOf('@');\n                license.name = name.substring(0, nameSplit);\n                license.version = name.substring(nameSplit + 1);\n\n                if (license.repository) {\n                    license.repository = license.repository.replace('git://', 'https://');\n                    if (license.repository.indexOf('github.com') > 0) {\n                        license.licenseUrl = license.repository + '/blob/' + license.version + '/' + license.licenseFile;\n                    }\n                }\n\n                return license;\n            });\n\n            this.error = false;\n        } catch {\n            this.error = true;\n        }\n\n        this.loaded = true;\n    }\n\n}\n"],"sourceRoot":"webpack:///"}