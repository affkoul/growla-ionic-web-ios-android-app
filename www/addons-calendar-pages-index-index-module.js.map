{"version":3,"sources":["./src/addons/calendar/pages/index/index.html","./src/addons/calendar/pages/index/index.module.ts","./src/addons/calendar/pages/index/index.page.ts"],"names":[],"mappings":"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","file":"addons-calendar-pages-index-index-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>{{ (showCalendar ? 'addon.calendar.calendarevents' : 'addon.calendar.upcomingevents') | translate }}</h1>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"openFilter($event)\\\" [attr.aria-label]=\\\"'core.filter' | translate\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"fas-filter\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            </ion-button>\\n            <core-context-menu>\\n                <core-context-menu-item *ngIf=\\\"showCalendar\\\" [priority]=\\\"800\\\"\\n                [content]=\\\"'addon.calendar.upcomingevents' | translate\\\" iconAction=\\\"fas-th-list\\\"\\n                (action)=\\\"toggleDisplay()\\\"></core-context-menu-item>\\n                <core-context-menu-item *ngIf=\\\"!showCalendar\\\" [priority]=\\\"800\\\"\\n                [content]=\\\"'addon.calendar.monthlyview' | translate\\\" iconAction=\\\"fas-calendar-alt\\\"\\n                (action)=\\\"toggleDisplay()\\\"></core-context-menu-item>\\n                <core-context-menu-item [hidden]=\\\"!notificationsEnabled\\\" [priority]=\\\"600\\\"\\n                [content]=\\\"'core.settings.settings' | translate\\\" (action)=\\\"openSettings()\\\" iconAction=\\\"fas-cogs\\\">\\n                </core-context-menu-item>\\n                <core-context-menu-item [hidden]=\\\"!loaded || !hasOffline || !isOnline\\\" [priority]=\\\"400\\\"\\n                [content]=\\\"'core.settings.synchronizenow' | translate\\\" (action)=\\\"doRefresh(undefined, $event, true)\\\"\\n                [iconAction]=\\\"syncIcon\\\" [closeOnClick]=\\\"false\\\"></core-context-menu-item>\\n            </core-context-menu>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n\\n    <!-- There is data to be synchronized -->\\n    <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"hasOffline\\\">\\n        <ion-item>\\n            <ion-icon name=\\\"fas-exclamation-triangle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            <ion-label>{{ 'core.hasdatatosync' | translate:{$a: 'addon.calendar.calendar' | translate} }}</ion-label>\\n        </ion-item>\\n    </ion-card>\\n\\n    <addon-calendar-calendar [hidden]=\\\"!showCalendar\\\" [initialYear]=\\\"year\\\" [initialMonth]=\\\"month\\\" [filter]=\\\"filter\\\"\\n        [displayNavButtons]=\\\"showCalendar\\\" (onEventClicked)=\\\"gotoEvent($event)\\\" (onDayClicked)=\\\"gotoDay($event)\\\">\\n    </addon-calendar-calendar>\\n\\n    <addon-calendar-upcoming-events *ngIf=\\\"loadUpcoming\\\" [hidden]=\\\"showCalendar\\\" [filter]=\\\"filter\\\"\\n        (onEventClicked)=\\\"gotoEvent($event)\\\">\\n    </addon-calendar-upcoming-events>\\n\\n    <!-- Create a calendar event. -->\\n    <ion-fab slot=\\\"fixed\\\" core-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" *ngIf=\\\"canCreate\\\">\\n        <ion-fab-button (click)=\\\"openEdit()\\\" [attr.aria-label]=\\\"'addon.calendar.newevent' | translate\\\">\\n            <ion-icon name=\\\"fas-plus\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            <span class=\\\"sr-only\\\">{{ 'addon.calendar.newevent' | translate }}</span>\\n        </ion-fab-button>\\n    </ion-fab>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonCalendarComponentsModule } from '../../components/components.module';\n\nimport { AddonCalendarIndexPage } from './index.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AddonCalendarIndexPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        AddonCalendarComponentsModule,\n    ],\n    declarations: [\n        AddonCalendarIndexPage,\n    ],\n    exports: [RouterModule],\n})\nexport class AddonCalendarIndexPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreApp } from '@services/app';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreCoursesHelper } from '@features/courses/services/courses-helper';\nimport { AddonCalendar, AddonCalendarProvider } from '../../services/calendar';\nimport { AddonCalendarOffline } from '../../services/calendar-offline';\nimport { AddonCalendarSync, AddonCalendarSyncProvider } from '../../services/calendar-sync';\nimport { AddonCalendarFilter, AddonCalendarHelper } from '../../services/calendar-helper';\nimport { Network, NgZone } from '@singletons';\nimport { Subscription } from 'rxjs';\nimport { CoreEnrolledCourseData } from '@features/courses/services/courses';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { AddonCalendarCalendarComponent } from '../../components/calendar/calendar';\nimport { AddonCalendarUpcomingEventsComponent } from '../../components/upcoming-events/upcoming-events';\nimport { AddonCalendarFilterPopoverComponent } from '../../components/filter/filter';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreLocalNotifications } from '@services/local-notifications';\nimport { CoreConstants } from '@/core/constants';\n\n/**\n * Page that displays the calendar events.\n */\n@Component({\n    selector: 'page-addon-calendar-index',\n    templateUrl: 'index.html',\n})\nexport class AddonCalendarIndexPage implements OnInit, OnDestroy {\n\n    @ViewChild(AddonCalendarCalendarComponent) calendarComponent?: AddonCalendarCalendarComponent;\n    @ViewChild(AddonCalendarUpcomingEventsComponent) upcomingEventsComponent?: AddonCalendarUpcomingEventsComponent;\n\n    protected currentSiteId: string;\n\n    // Observers.\n    protected newEventObserver?: CoreEventObserver;\n    protected discardedObserver?: CoreEventObserver;\n    protected editEventObserver?: CoreEventObserver;\n    protected deleteEventObserver?: CoreEventObserver;\n    protected undeleteEventObserver?: CoreEventObserver;\n    protected syncObserver?: CoreEventObserver;\n    protected manualSyncObserver?: CoreEventObserver;\n    protected onlineObserver?: Subscription;\n    protected filterChangedObserver?: CoreEventObserver;\n\n    year?: number;\n    month?: number;\n    canCreate = false;\n    courses: Partial<CoreEnrolledCourseData>[] = [];\n    notificationsEnabled = false;\n    loaded = false;\n    hasOffline = false;\n    isOnline = false;\n    syncIcon = CoreConstants.ICON_LOADING;\n    showCalendar = true;\n    loadUpcoming = false;\n    filter: AddonCalendarFilter = {\n        filtered: false,\n        courseId: undefined,\n        categoryId: undefined,\n        course: true,\n        group: true,\n        site: true,\n        user: true,\n        category: true,\n    };\n\n    constructor(\n        protected route: ActivatedRoute,\n    ) {\n        this.currentSiteId = CoreSites.getCurrentSiteId();\n\n        // Listen for events added. When an event is added, reload the data.\n        this.newEventObserver = CoreEvents.on(\n            AddonCalendarProvider.NEW_EVENT_EVENT,\n            (data) => {\n                if (data && data.eventId) {\n                    this.loaded = false;\n                    this.refreshData(true, false);\n                }\n            },\n            this.currentSiteId,\n        );\n\n        // Listen for new event discarded event. When it does, reload the data.\n        this.discardedObserver = CoreEvents.on(AddonCalendarProvider.NEW_EVENT_DISCARDED_EVENT, () => {\n            this.loaded = false;\n            this.refreshData(true, false);\n        }, this.currentSiteId);\n\n        // Listen for events edited. When an event is edited, reload the data.\n        this.editEventObserver = CoreEvents.on(\n            AddonCalendarProvider.EDIT_EVENT_EVENT,\n            (data) => {\n                if (data && data.eventId) {\n                    this.loaded = false;\n                    this.refreshData(true, false);\n                }\n            },\n            this.currentSiteId,\n        );\n\n        // Refresh data if calendar events are synchronized automatically.\n        this.syncObserver = CoreEvents.on(AddonCalendarSyncProvider.AUTO_SYNCED, () => {\n            this.loaded = false;\n            this.refreshData(false, false);\n        }, this.currentSiteId);\n\n        // Refresh data if calendar events are synchronized manually but not by this page.\n        this.manualSyncObserver = CoreEvents.on(AddonCalendarSyncProvider.MANUAL_SYNCED, (data) => {\n            if (data && data.source != 'index') {\n                this.loaded = false;\n                this.refreshData(false, false);\n            }\n        }, this.currentSiteId);\n\n        // Update the events when an event is deleted.\n        this.deleteEventObserver = CoreEvents.on(AddonCalendarProvider.DELETED_EVENT_EVENT, () => {\n            this.loaded = false;\n            this.refreshData(false, false);\n        }, this.currentSiteId);\n\n        // Update the \"hasOffline\" property if an event deleted in offline is restored.\n        this.undeleteEventObserver = CoreEvents.on(AddonCalendarProvider.UNDELETED_EVENT_EVENT, async () => {\n            this.hasOffline = await AddonCalendarOffline.hasOfflineData();\n        }, this.currentSiteId);\n\n        this.filterChangedObserver = CoreEvents.on(\n            AddonCalendarProvider.FILTER_CHANGED_EVENT,\n            async (filterData) => {\n                this.filter = filterData;\n\n                // Course viewed has changed, check if the user can create events for this course calendar.\n                this.canCreate = await AddonCalendarHelper.canEditEvents(this.filter.courseId);\n            },\n        );\n\n        // Refresh online status when changes.\n        this.onlineObserver = Network.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreApp.isOnline();\n            });\n        });\n    }\n\n    /**\n     * View loaded.\n     */\n    ngOnInit(): void {\n        this.notificationsEnabled = CoreLocalNotifications.isAvailable();\n\n        this.loadUpcoming = !!CoreNavigator.getRouteBooleanParam('upcoming');\n        this.showCalendar = !this.loadUpcoming;\n\n        this.route.queryParams.subscribe(async () => {\n            this.filter.courseId = CoreNavigator.getRouteNumberParam('courseId');\n            this.year = CoreNavigator.getRouteNumberParam('year');\n            this.month = CoreNavigator.getRouteNumberParam('month');\n            this.filter.filtered = !!this.filter.courseId;\n\n            this.fetchData(true, false);\n        });\n    }\n\n    /**\n     * Fetch all the data required for the view.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved when done.\n     */\n    async fetchData(sync?: boolean, showErrors?: boolean): Promise<void> {\n\n        this.syncIcon = CoreConstants.ICON_LOADING;\n        this.isOnline = CoreApp.isOnline();\n\n        if (sync) {\n            // Try to synchronize offline events.\n            try {\n                const result = await AddonCalendarSync.syncEvents();\n                if (result.warnings && result.warnings.length) {\n                    CoreDomUtils.showErrorModal(result.warnings[0]);\n                }\n\n                if (result.updated) {\n                    // Trigger a manual sync event.\n                    result.source = 'index';\n\n                    CoreEvents.trigger(\n                        AddonCalendarSyncProvider.MANUAL_SYNCED,\n                        result,\n                        this.currentSiteId,\n                    );\n                }\n            } catch (error) {\n                if (showErrors) {\n                    CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\n                }\n            }\n        }\n\n        try {\n            const promises: Promise<void>[] = [];\n\n            this.hasOffline = false;\n\n            // Load courses for the popover.\n            promises.push(CoreCoursesHelper.getCoursesForPopover(this.filter.courseId).then((data) => {\n                this.courses = data.courses;\n\n                return;\n            }));\n\n            // Check if user can create events.\n            promises.push(AddonCalendarHelper.canEditEvents(this.filter.courseId).then((canEdit) => {\n                this.canCreate = canEdit;\n\n                return;\n            }));\n\n            // Check if there is offline data.\n            promises.push(AddonCalendarOffline.hasOfflineData().then((hasOffline) => {\n                this.hasOffline = hasOffline;\n\n                return;\n            }));\n\n            await Promise.all(promises);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n        }\n\n        this.loaded = true;\n        this.syncIcon = CoreConstants.ICON_SYNC;\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved when done.\n     */\n    async doRefresh(refresher?: IonRefresher, done?: () => void, showErrors?: boolean): Promise<void> {\n        if (!this.loaded) {\n            return;\n        }\n\n        await this.refreshData(true, showErrors).finally(() => {\n            refresher?.complete();\n            done && done();\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @param afterChange Whether the refresh is done after an event has changed or has been synced.\n     * @return Promise resolved when done.\n     */\n    async refreshData(sync = false, showErrors = false): Promise<void> {\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonCalendar.invalidateAllowedEventTypes());\n\n        // Refresh the sub-component.\n        if (this.showCalendar && this.calendarComponent) {\n            promises.push(this.calendarComponent.refreshData());\n        } else if (!this.showCalendar && this.upcomingEventsComponent) {\n            promises.push(this.upcomingEventsComponent.refreshData());\n        }\n\n        await Promise.all(promises).finally(() => this.fetchData(sync, showErrors));\n    }\n\n    /**\n     * Navigate to a particular event.\n     *\n     * @param eventId Event to load.\n     */\n    gotoEvent(eventId: number): void {\n        if (eventId < 0) {\n            // It's an offline event, go to the edit page.\n            this.openEdit(eventId);\n        } else {\n            CoreNavigator.navigateToSitePath(`/calendar/event/${eventId}`);\n        }\n    }\n\n    /**\n     * View a certain day.\n     *\n     * @param data Data with the year, month and day.\n     */\n    gotoDay(data: {day: number; month: number; year: number}): void {\n        const params: Params = {\n            day: data.day,\n            month: data.month,\n            year: data.year,\n        };\n\n        Object.keys(this.filter).forEach((key) => {\n            params[key] = this.filter[key];\n        });\n\n        CoreNavigator.navigateToSitePath('/calendar/day', { params });\n    }\n\n    /**\n     * Show the context menu.\n     *\n     * @param event Event.\n     */\n    async openFilter(event: MouseEvent): Promise<void> {\n        await CoreDomUtils.openPopover({\n            component: AddonCalendarFilterPopoverComponent,\n            componentProps: {\n                courses: this.courses,\n                filter: this.filter,\n            },\n            event,\n        });\n    }\n\n    /**\n     * Open page to create/edit an event.\n     *\n     * @param eventId Event ID to edit.\n     */\n    openEdit(eventId?: number): void {\n        const params: Params = {};\n        eventId = eventId || 0;\n\n        if (this.filter.courseId) {\n            params.courseId = this.filter.courseId;\n        }\n\n        CoreNavigator.navigateToSitePath(`/calendar/edit/${eventId}`, { params });\n    }\n\n    /**\n     * Open calendar events settings.\n     */\n    openSettings(): void {\n        CoreNavigator.navigateToSitePath('/calendar/settings');\n    }\n\n    /**\n     * Toogle display: monthly view or upcoming events.\n     */\n    toggleDisplay(): void {\n        this.showCalendar = !this.showCalendar;\n\n        if (!this.showCalendar) {\n            this.loadUpcoming = true;\n        }\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.newEventObserver?.off();\n        this.discardedObserver?.off();\n        this.editEventObserver?.off();\n        this.deleteEventObserver?.off();\n        this.undeleteEventObserver?.off();\n        this.syncObserver?.off();\n        this.manualSyncObserver?.off();\n        this.filterChangedObserver?.off();\n        this.onlineObserver?.unsubscribe();\n    }\n\n}\n"],"sourceRoot":"webpack:///"}