{"version":3,"sources":["./src/core/features/courses/pages/my-courses/my-courses.html","./src/core/features/courses/pages/my-courses/my-courses.module.ts","./src/core/features/courses/pages/my-courses/my-courses.ts"],"names":[],"mappings":"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","file":"pages-my-courses-my-courses-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>{{ 'core.courses.mycourses' | translate }}</h1>\\n\\n        <ion-buttons slot=\\\"end\\\">\\n            <core-navbar-buttons>\\n                <ion-button *ngIf=\\\"searchEnabled\\\" (click)=\\\"openSearch()\\\"\\n                    [attr.aria-label]=\\\"'core.courses.searchcourses' | translate\\\">\\n                    <ion-icon name=\\\"fas-search\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                </ion-button>\\n                <ion-button [hidden]=\\\"!downloadAllCoursesEnabled || !courses || courses.length < 2 || downloadAllCoursesLoading\\\"\\n                    (click)=\\\"prefetchCourses()\\\" [attr.aria-label]=\\\"'core.courses.downloadcourses' | translate\\\">\\n                    <ion-icon [name]=\\\"downloadAllCoursesIcon\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                </ion-button>\\n                <ion-spinner [hidden]=\\\"!downloadAllCoursesEnabled || !courses || courses.length < 2 ||\\n                    downloadAllCoursesBadge != '' || !downloadAllCoursesLoading\\\"\\n                    [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner>\\n                <ion-badge [hidden]=\\\"!downloadAllCoursesEnabled || !courses || courses.length < 2 || !downloadAllCoursesLoading ||\\n                    downloadAllCoursesBadge == '' || !downloadAllCoursesLoading\\\"\\n                    role=\\\"progressbar\\\" [attr.aria-valuemax]=\\\"downloadAllCoursesTotal\\\"\\n                    [attr.aria-valuenow]=\\\"downloadAllCoursesCount\\\" [attr.aria-valuetext]=\\\"downloadAllCoursesBadgeA11yText\\\">\\n                    {{downloadAllCoursesBadge}}\\n                </ion-badge>\\n            </core-navbar-buttons>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!coursesLoaded\\\" (ionRefresh)=\\\"refreshCourses($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n\\n    <core-loading [hideUntil]=\\\"coursesLoaded\\\">\\n        <ion-searchbar #searchbar *ngIf=\\\"courses && courses.length > 5\\\" [(ngModel)]=\\\"filter\\\" (ionInput)=\\\"filterChanged($event)\\\"\\n            (ionCancel)=\\\"filterChanged()\\\" [placeholder]=\\\"'core.courses.filtermycourses' | translate\\\">\\n        </ion-searchbar>\\n        <ion-grid class=\\\"ion-no-padding safe-area-page\\\">\\n            <ion-row class=\\\"ion-no-padding\\\">\\n                <ion-col *ngFor=\\\"let course of filteredCourses\\\" class=\\\"ion-no-padding\\\"\\n                    size=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\n                    <core-courses-course-progress [course]=\\\"course\\\" class=\\\"core-courseoverview\\\" showAll=\\\"true\\\">\\n                    </core-courses-course-progress>\\n                </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n        <core-empty-box *ngIf=\\\"!courses || !courses.length\\\" icon=\\\"fas-graduation-cap\\\"\\n            [message]=\\\"'core.courses.nocourses' | translate\\\">\\n            <p *ngIf=\\\"searchEnabled\\\">{{ 'core.courses.searchcoursesadvice' | translate }}</p>\\n        </core-empty-box>\\n    </core-loading>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreCoursesMyCoursesPage } from './my-courses';\nimport { CoreCoursesComponentsModule } from '../../components/components.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreCoursesMyCoursesPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreCoursesComponentsModule,\n    ],\n    declarations: [\n        CoreCoursesMyCoursesPage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreCoursesMyCoursesPageModule { }\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { IonSearchbar, IonRefresher } from '@ionic/angular';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport {\n    CoreCoursesProvider,\n    CoreCourses,\n} from '../../services/courses';\nimport { CoreCoursesHelper, CoreEnrolledCourseDataWithExtraInfoAndOptions } from '../../services/courses-helper';\nimport { CoreCourseHelper } from '@features/course/services/course-helper';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreCourseOptionsDelegate } from '@features/course/services/course-options-delegate';\nimport { CoreNavigator } from '@services/navigator';\nimport { Translate } from '@singletons';\n\n/**\n * Page that displays the list of courses the user is enrolled in.\n */\n@Component({\n    selector: 'page-core-courses-my-courses',\n    templateUrl: 'my-courses.html',\n})\nexport class CoreCoursesMyCoursesPage implements OnInit, OnDestroy {\n\n    @ViewChild(IonSearchbar) searchbar!: IonSearchbar;\n\n    courses: CoreEnrolledCourseDataWithExtraInfoAndOptions[] = [];\n    filteredCourses: CoreEnrolledCourseDataWithExtraInfoAndOptions[] = [];\n    searchEnabled = false;\n    filter = '';\n    showFilter = false;\n    coursesLoaded = false;\n    downloadAllCoursesIcon = CoreConstants.ICON_NOT_DOWNLOADED;\n    downloadAllCoursesLoading = false;\n    downloadAllCoursesBadge = '';\n    downloadAllCoursesEnabled = false;\n    downloadAllCoursesCount?: number;\n    downloadAllCoursesTotal?: number;\n    downloadAllCoursesBadgeA11yText = '';\n\n    protected myCoursesObserver: CoreEventObserver;\n    protected siteUpdatedObserver: CoreEventObserver;\n    protected isDestroyed = false;\n    protected courseIds = '';\n\n    constructor() {\n        // Update list if user enrols in a course.\n        this.myCoursesObserver = CoreEvents.on(\n            CoreCoursesProvider.EVENT_MY_COURSES_UPDATED,\n            (data) => {\n\n                if (data.action == CoreCoursesProvider.ACTION_ENROL) {\n                    this.fetchCourses();\n                }\n            },\n\n            CoreSites.getCurrentSiteId(),\n        );\n\n        // Refresh the enabled flags if site is updated.\n        this.siteUpdatedObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n            this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\n            this.downloadAllCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n        }, CoreSites.getCurrentSiteId());\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\n        this.downloadAllCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n\n        this.fetchCourses().finally(() => {\n            this.coursesLoaded = true;\n        });\n    }\n\n    /**\n     * Fetch the user courses.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchCourses(): Promise<void> {\n        try {\n            const courses: CoreEnrolledCourseDataWithExtraInfoAndOptions[] = await CoreCourses.getUserCourses();\n            const courseIds = courses.map((course) => course.id);\n\n            this.courseIds = courseIds.join(',');\n\n            await CoreCoursesHelper.loadCoursesExtraInfo(courses);\n\n            if (CoreCourses.canGetAdminAndNavOptions()) {\n                const options = await CoreCourses.getCoursesAdminAndNavOptions(courseIds);\n                courses.forEach((course) => {\n                    course.navOptions = options.navOptions[course.id];\n                    course.admOptions = options.admOptions[course.id];\n                });\n            }\n\n            this.courses = courses;\n            this.filteredCourses = this.courses;\n            this.filter = '';\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcourses', true);\n        }\n    }\n\n    /**\n     * Refresh the courses.\n     *\n     * @param refresher Refresher.\n     */\n    refreshCourses(refresher: IonRefresher): void {\n        const promises: Promise<void>[] = [];\n\n        promises.push(CoreCourses.invalidateUserCourses());\n        promises.push(CoreCourseOptionsDelegate.clearAndInvalidateCoursesOptions());\n        if (this.courseIds) {\n            promises.push(CoreCourses.invalidateCoursesByField('ids', this.courseIds));\n        }\n\n        Promise.all(promises).finally(() => {\n            this.fetchCourses().finally(() => {\n                refresher?.complete();\n            });\n        });\n    }\n\n    /**\n     * Show or hide the filter.\n     */\n    switchFilter(): void {\n        this.filter = '';\n        this.showFilter = !this.showFilter;\n        this.filteredCourses = this.courses;\n        if (this.showFilter) {\n            setTimeout(() => {\n                this.searchbar.setFocus();\n            }, 500);\n        }\n    }\n\n    /**\n     * The filter has changed.\n     *\n     * @param Received Event.\n     */\n    filterChanged(event?: Event): void {\n        const target = <HTMLInputElement>event?.target || null;\n        const newValue = target ? String(target.value).trim().toLowerCase() : null;\n        if (!newValue || !this.courses) {\n            this.filteredCourses = this.courses;\n        } else {\n            // Use displayname if available, or fullname if not.\n            if (this.courses.length > 0 && typeof this.courses[0].displayname != 'undefined') {\n                this.filteredCourses = this.courses.filter((course) => course.displayname!.toLowerCase().indexOf(newValue) > -1);\n            } else {\n                this.filteredCourses = this.courses.filter((course) => course.fullname.toLowerCase().indexOf(newValue) > -1);\n            }\n        }\n    }\n\n    /**\n     * Prefetch all the courses.\n     *\n     * @return Promise resolved when done.\n     */\n    async prefetchCourses(): Promise<void> {\n        this.downloadAllCoursesLoading = true;\n\n        try {\n            await CoreCourseHelper.confirmAndPrefetchCourses(this.courses, (progress) => {\n                this.downloadAllCoursesBadge = progress.count + ' / ' + progress.total;\n                this.downloadAllCoursesBadgeA11yText =\n                    Translate.instant('core.course.downloadcoursesprogressdescription', progress);\n                this.downloadAllCoursesCount = progress.count;\n                this.downloadAllCoursesTotal = progress.total;\n            });\n        } catch (error) {\n            if (!this.isDestroyed) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.course.errordownloadingcourse', true);\n            }\n        }\n\n        this.downloadAllCoursesBadge = '';\n        this.downloadAllCoursesLoading = false;\n    }\n\n    /**\n     * Go to search courses.\n     */\n    openSearch(): void {\n        CoreNavigator.navigateToSitePath('courses/search');\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        this.myCoursesObserver?.off();\n        this.siteUpdatedObserver?.off();\n    }\n\n}\n"],"sourceRoot":"webpack:///"}