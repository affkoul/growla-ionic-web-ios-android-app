{"version":3,"sources":["./src/core/features/viewer/pages/iframe/iframe.html","./src/core/features/viewer/pages/iframe/iframe.module.ts","./src/core/features/viewer/pages/iframe/iframe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,iQAAkM,SAAS,yPAAyP,E;;;;;;;;;;;;ACAnd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEQ;AACc;AAEC;AACR;AAEhD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4DAAoB;KAClC;CACJ,CAAC;IAYW,0BAA0B,SAA1B,0BAA0B;CAAG;AAA7B,0BAA0B;IAVtC,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,oEAAgB;SACnB;QACD,YAAY,EAAE;YACV,4DAAoB;SACvB;QACD,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;ACrCvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEiB;AACE;AAER;AAE5C;;GAEG;IAKU,oBAAoB,SAApB,oBAAoB;IAWvB,QAAQ;;YACV,IAAI,CAAC,KAAK,GAAG,iEAAa,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAClD,IAAI,CAAC,GAAG,GAAG,iEAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,SAAS,GAAG,iEAAa,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC;YAErE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;gBACX,OAAO;aACV;YAED,MAAM,WAAW,GAAG,yDAAS,CAAC,cAAc,EAAE,CAAC;YAE/C,IAAI,WAAW,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,OAAO,IAAI,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;gBAC9G,oCAAoC;gBACpC,IAAI,CAAC,QAAQ,GAAG,MAAM,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aACtE;iBAAM;gBACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC;aAC5B;QACL,CAAC;KAAA;CAEJ;AA9BY,oBAAoB;IAJhC,+DAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;QAC9B,iOAA0B;KAC7B,CAAC;GACW,oBAAoB,CA8BhC;AA9BgC","file":"pages-iframe-iframe-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>{{ title }}</h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <core-loading [hideUntil]=\\\"finalUrl\\\" class=\\\"core-loading-fullheight\\\">\\n        <core-iframe *ngIf=\\\"finalUrl\\\" [src]=\\\"finalUrl\\\"></core-iframe>\\n    </core-loading>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreViewerIframePage } from './iframe';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreViewerIframePage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        CoreViewerIframePage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreViewerIframePageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoreNavigator } from '@services/navigator';\n\nimport { CoreSites } from '@services/sites';\n\n/**\n * Page to display a URL in an iframe.\n */\n@Component({\n    selector: 'core-viewer-iframe',\n    templateUrl: 'iframe.html',\n})\nexport class CoreViewerIframePage implements OnInit {\n\n    title?: string; // Page title.\n    url?: string; // Iframe URL.\n    /* Whether the URL should be open with auto-login. Accepts the following values:\n        \"yes\" -> Always auto-login.\n        \"no\" -> Never auto-login.\n        \"check\" -> Auto-login only if it points to the current site. Default value. */\n    autoLogin?: string;\n    finalUrl?: string;\n\n    async ngOnInit(): Promise<void> {\n        this.title = CoreNavigator.getRouteParam('title');\n        this.url = CoreNavigator.getRouteParam('url');\n        this.autoLogin = CoreNavigator.getRouteParam('autoLogin') || 'check';\n\n        if (!this.url) {\n            return;\n        }\n\n        const currentSite = CoreSites.getCurrentSite();\n\n        if (currentSite && (this.autoLogin == 'yes' || (this.autoLogin == 'check' && currentSite.containsUrl(this.url)))) {\n            // Format the URL to add auto-login.\n            this.finalUrl = await currentSite.getAutoLoginUrl(this.url, false);\n        } else {\n            this.finalUrl = this.url;\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}