{"version":3,"sources":["./src/addons/calendar/pages/day/day.html","./src/addons/calendar/pages/day/day.module.ts","./src/addons/calendar/pages/day/day.page.ts","./src/addons/calendar/pages/day/day.scss"],"names":[],"mappings":"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","file":"addons-calendar-pages-day-day-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>{{ 'addon.calendar.calendarevents' | translate }}</h1>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"openFilter($event)\\\" [attr.aria-label]=\\\"'core.filter' | translate\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"fas-filter\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            </ion-button>\\n            <core-context-menu>\\n                <core-context-menu-item *ngIf=\\\"!isCurrentDay\\\" [priority]=\\\"900\\\" [content]=\\\"'addon.calendar.today' | translate\\\"\\n                    iconAction=\\\"fas-calendar-day\\\" (action)=\\\"goToCurrentDay()\\\">\\n                </core-context-menu-item>\\n                <core-context-menu-item [hidden]=\\\"!loaded || !hasOffline || !isOnline\\\" [priority]=\\\"400\\\"\\n                    [content]=\\\"'core.settings.synchronizenow' | translate\\\" (action)=\\\"doRefresh(undefined, $event)\\\"\\n                    [iconAction]=\\\"syncIcon\\\" [closeOnClick]=\\\"false\\\">\\n                </core-context-menu-item>\\n            </core-context-menu>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n\\n    <!-- Period name and arrows to navigate. -->\\n    <ion-grid class=\\\"ion-no-padding safe-area-page\\\">\\n        <ion-row class=\\\"ion-align-items-center\\\">\\n            <ion-col class=\\\"ion-text-start\\\" *ngIf=\\\"currentMoment\\\">\\n                <ion-button fill=\\\"clear\\\" (click)=\\\"loadPrevious()\\\" [attr.aria-label]=\\\"'addon.calendar.dayprev' | translate\\\">\\n                    <ion-icon name=\\\"fas-chevron-left\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                </ion-button>\\n            </ion-col>\\n            <ion-col class=\\\"ion-text-center addon-calendar-period\\\">\\n                <h3>{{ periodName }}</h3>\\n            </ion-col>\\n            <ion-col class=\\\"ion-text-end\\\" *ngIf=\\\"currentMoment\\\">\\n                <ion-button fill=\\\"clear\\\" (click)=\\\"loadNext()\\\" [attr.aria-label]=\\\"'addon.calendar.daynext' | translate\\\">\\n                    <ion-icon name=\\\"fas-chevron-right\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                </ion-button>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n\\n    <core-loading [hideUntil]=\\\"loaded\\\" class=\\\"safe-area-page\\\">\\n        <!-- There is data to be synchronized -->\\n        <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"hasOffline\\\">\\n            <ion-item>\\n                <ion-icon name=\\\"fas-exclamation-triangle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                <ion-label>{{ 'core.hasdatatosync' | translate:{$a: 'core.day' | translate} }}</ion-label>\\n            </ion-item>\\n        </ion-card>\\n\\n        <core-empty-box *ngIf=\\\"!filteredEvents || !filteredEvents.length\\\" icon=\\\"fas-calendar\\\" inline=\\\"true\\\"\\n            [message]=\\\"'addon.calendar.noevents' | translate\\\">\\n        </core-empty-box>\\n\\n        <ion-list *ngIf=\\\"filteredEvents && filteredEvents.length\\\" class=\\\"ion-no-margin\\\">\\n            <ng-container *ngFor=\\\"let event of filteredEvents\\\">\\n                <ion-item class=\\\"addon-calendar-event ion-text-wrap\\\" [attr.aria-label]=\\\"event.name\\\" (click)=\\\"gotoEvent(event.id)\\\"\\n                [class.item-dimmed]=\\\"event.ispast\\\" [ngClass]=\\\"['addon-calendar-eventtype-'+event.eventtype]\\\" button detail=\\\"true\\\">\\n                    <img *ngIf=\\\"event.moduleIcon\\\" src=\\\"{{event.moduleIcon}}\\\" slot=\\\"start\\\" class=\\\"core-module-icon\\\" alt=\\\"\\\"\\n                        role=\\\"presentation\\\">\\n                    <ion-icon *ngIf=\\\"event.eventIcon && !event.moduleIcon\\\" [name]=\\\"event.eventIcon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\">\\n                    </ion-icon>\\n                    <ion-label>\\n                        <!-- Add the icon title so accessibility tools read it. -->\\n                        <span class=\\\"sr-only\\\">\\n                            {{ 'addon.calendar.type' + event.formattedType | translate }}\\n                            <span class=\\\"sr-only\\\" *ngIf=\\\"event.moduleIcon && event.iconTitle\\\">{{ event.iconTitle }}</span>\\n                        </span>\\n                        <p class=\\\"item-heading\\\">\\n                            <core-format-text [text]=\\\"event.name\\\" [contextLevel]=\\\"event.contextLevel\\\"\\n                            [contextInstanceId]=\\\"event.contextInstanceId\\\"></core-format-text>\\n                        </p>\\n                        <p [innerHTML]=\\\"event.formattedtime\\\"></p>\\n                    </ion-label>\\n                    <ion-note *ngIf=\\\"event.offline && !event.deleted\\\" slot=\\\"end\\\">\\n                        <ion-icon name=\\\"fas-clock\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                        <span class=\\\"ion-text-wrap\\\">{{ 'core.notsent' | translate }}</span>\\n                    </ion-note>\\n                    <ion-note *ngIf=\\\"event.deleted\\\" slot=\\\"end\\\">\\n                        <ion-icon name=\\\"fas-trash\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                        <span class=\\\"ion-text-wrap\\\">{{ 'core.deletedoffline' | translate }}</span>\\n                    </ion-note>\\n                </ion-item>\\n            </ng-container>\\n        </ion-list>\\n    </core-loading>\\n\\n    <!-- Create a calendar event. -->\\n    <ion-fab slot=\\\"fixed\\\" core-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" *ngIf=\\\"canCreate && loaded\\\">\\n        <ion-fab-button (click)=\\\"openEdit()\\\" [attr.aria-label]=\\\"'addon.calendar.newevent' | translate\\\">\\n            <ion-icon name=\\\"fas-plus\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            <span class=\\\"sr-only\\\">{{ 'addon.calendar.newevent' | translate }}</span>\\n        </ion-fab-button>\\n    </ion-fab>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonCalendarComponentsModule } from '../../components/components.module';\n\nimport { AddonCalendarDayPage } from './day.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AddonCalendarDayPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        AddonCalendarComponentsModule,\n    ],\n    declarations: [\n        AddonCalendarDayPage,\n    ],\n    exports: [RouterModule],\n})\nexport class AddonCalendarDayPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreApp } from '@services/app';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreLocalNotifications } from '@services/local-notifications';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport {\n    AddonCalendarProvider,\n    AddonCalendar,\n    AddonCalendarEventToDisplay,\n    AddonCalendarCalendarDay,\n    AddonCalendarEventType,\n} from '../../services/calendar';\nimport { AddonCalendarOffline } from '../../services/calendar-offline';\nimport { AddonCalendarFilter, AddonCalendarHelper } from '../../services/calendar-helper';\nimport { AddonCalendarSync, AddonCalendarSyncProvider } from '../../services/calendar-sync';\nimport { CoreCategoryData, CoreCourses, CoreEnrolledCourseData } from '@features/courses/services/courses';\nimport { CoreCoursesHelper } from '@features/courses/services/courses-helper';\nimport { AddonCalendarFilterPopoverComponent } from '../../components/filter/filter';\nimport moment from 'moment';\nimport { Network, NgZone } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport { Params } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreConstants } from '@/core/constants';\n\n/**\n * Page that displays the calendar events for a certain day.\n */\n@Component({\n    selector: 'page-addon-calendar-day',\n    templateUrl: 'day.html',\n    styleUrls: ['../../calendar-common.scss', 'day.scss'],\n})\nexport class AddonCalendarDayPage implements OnInit, OnDestroy {\n\n    protected currentSiteId: string;\n    protected year!: number;\n    protected month!: number;\n    protected day!: number;\n    protected categories: { [id: number]: CoreCategoryData } = {};\n    protected events: AddonCalendarEventToDisplay[] = []; // Events (both online and offline).\n    protected onlineEvents: AddonCalendarEventToDisplay[] = [];\n    protected offlineEvents: { [monthId: string]: { [day: number]: AddonCalendarEventToDisplay[] } } =\n        {}; // Offline events classified in month & day.\n\n    protected offlineEditedEventsIds: number[] = []; // IDs of events edited in offline.\n    protected deletedEvents: number[] = []; // Events deleted in offline.\n    protected timeFormat?: string;\n    protected currentTime!: number;\n\n    // Observers.\n    protected newEventObserver: CoreEventObserver;\n    protected discardedObserver: CoreEventObserver;\n    protected editEventObserver: CoreEventObserver;\n    protected deleteEventObserver: CoreEventObserver;\n    protected undeleteEventObserver: CoreEventObserver;\n    protected syncObserver: CoreEventObserver;\n    protected manualSyncObserver: CoreEventObserver;\n    protected onlineObserver: Subscription;\n    protected obsDefaultTimeChange?: CoreEventObserver;\n    protected filterChangedObserver: CoreEventObserver;\n\n    periodName?: string;\n    filteredEvents: AddonCalendarEventToDisplay [] = [];\n    canCreate = false;\n    courses: Partial<CoreEnrolledCourseData>[] = [];\n    loaded = false;\n    hasOffline = false;\n    isOnline = false;\n    syncIcon = CoreConstants.ICON_LOADING;\n    isCurrentDay = false;\n    isPastDay = false;\n    currentMoment!: moment.Moment;\n    filter: AddonCalendarFilter = {\n        filtered: false,\n        courseId: undefined,\n        categoryId: undefined,\n        course: true,\n        group: true,\n        site: true,\n        user: true,\n        category: true,\n    };\n\n    constructor() {\n        this.currentSiteId = CoreSites.getCurrentSiteId();\n\n        if (CoreLocalNotifications.isAvailable()) {\n            // Re-schedule events if default time changes.\n            this.obsDefaultTimeChange = CoreEvents.on(AddonCalendarProvider.DEFAULT_NOTIFICATION_TIME_CHANGED, () => {\n                AddonCalendar.scheduleEventsNotifications(this.onlineEvents);\n            }, this.currentSiteId);\n        }\n\n        // Listen for events added. When an event is added, reload the data.\n        this.newEventObserver = CoreEvents.on(\n            AddonCalendarProvider.NEW_EVENT_EVENT,\n            (data) => {\n                if (data && data.eventId) {\n                    this.loaded = false;\n                    this.refreshData(true, true);\n                }\n            },\n            this.currentSiteId,\n        );\n\n        // Listen for new event discarded event. When it does, reload the data.\n        this.discardedObserver = CoreEvents.on(AddonCalendarProvider.NEW_EVENT_DISCARDED_EVENT, () => {\n            this.loaded = false;\n            this.refreshData(true, true);\n        }, this.currentSiteId);\n\n        // Listen for events edited. When an event is edited, reload the data.\n        this.editEventObserver = CoreEvents.on(\n            AddonCalendarProvider.EDIT_EVENT_EVENT,\n            (data) => {\n                if (data && data.eventId) {\n                    this.loaded = false;\n                    this.refreshData(true, true);\n                }\n            },\n            this.currentSiteId,\n        );\n\n        // Refresh data if calendar events are synchronized automatically.\n        this.syncObserver = CoreEvents.on(AddonCalendarSyncProvider.AUTO_SYNCED, () => {\n            this.loaded = false;\n            this.refreshData(false, true);\n        }, this.currentSiteId);\n\n        // Refresh data if calendar events are synchronized manually but not by this page.\n        this.manualSyncObserver = CoreEvents.on(AddonCalendarSyncProvider.MANUAL_SYNCED, (data) => {\n            if (data && (data.source != 'day' || data.year != this.year || data.month != this.month || data.day != this.day)) {\n                this.loaded = false;\n                this.refreshData(false, true);\n            }\n        }, this.currentSiteId);\n\n        // Update the events when an event is deleted.\n        this.deleteEventObserver = CoreEvents.on(\n            AddonCalendarProvider.DELETED_EVENT_EVENT,\n            (data) => {\n                if (data && !data.sent) {\n                    // Event was deleted in offline. Just mark it as deleted, no need to refresh.\n                    this.hasOffline = this.markAsDeleted(data.eventId, true) || this.hasOffline;\n                    this.deletedEvents.push(data.eventId);\n                } else {\n                    this.loaded = false;\n                    this.refreshData(false, true);\n                }\n            },\n            this.currentSiteId,\n        );\n\n        // Listen for events \"undeleted\" (offline).\n        this.undeleteEventObserver = CoreEvents.on(\n            AddonCalendarProvider.UNDELETED_EVENT_EVENT,\n            (data) => {\n                if (!data || !data.eventId) {\n                    return;\n                }\n\n                // Mark it as undeleted, no need to refresh.\n                const found = this.markAsDeleted(data.eventId, false);\n\n                // Remove it from the list of deleted events if it's there.\n                const index = this.deletedEvents.indexOf(data.eventId);\n                if (index != -1) {\n                    this.deletedEvents.splice(index, 1);\n                }\n\n                if (found) {\n                // The deleted event belongs to current list. Re-calculate \"hasOffline\".\n                    this.hasOffline = false;\n\n                    if (this.events.length != this.onlineEvents.length) {\n                        this.hasOffline = true;\n                    } else {\n                        const event = this.events.find((event) => event.deleted || event.offline);\n\n                        this.hasOffline = !!event;\n                    }\n                }\n            },\n            this.currentSiteId,\n        );\n\n        this.filterChangedObserver = CoreEvents.on(\n            AddonCalendarProvider.FILTER_CHANGED_EVENT,\n            async (data) => {\n                this.filter = data;\n\n                // Course viewed has changed, check if the user can create events for this course calendar.\n                this.canCreate = await AddonCalendarHelper.canEditEvents(this.filter.courseId);\n\n                this.filterEvents();\n            },\n        );\n\n        // Refresh online status when changes.\n        this.onlineObserver = Network.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreApp.isOnline();\n            });\n        });\n    }\n\n    /**\n     * View loaded.\n     */\n    ngOnInit(): void {\n        const types: string[] = [];\n\n        CoreUtils.enumKeys(AddonCalendarEventType).forEach((name) => {\n            const value = AddonCalendarEventType[name];\n            this.filter[name] = CoreNavigator.getRouteBooleanParam(name) ?? true;\n            types.push(value);\n        });\n        this.filter.courseId = CoreNavigator.getRouteNumberParam('courseId');\n        this.filter.categoryId = CoreNavigator.getRouteNumberParam('categoryId');\n\n        this.filter.filtered = typeof this.filter.courseId != 'undefined' || types.some((name) => !this.filter[name]);\n\n        const now = new Date();\n        this.year = CoreNavigator.getRouteNumberParam('year') || now.getFullYear();\n        this.month = CoreNavigator.getRouteNumberParam('month') || (now.getMonth() + 1);\n        this.day = CoreNavigator.getRouteNumberParam('day') || now.getDate();\n\n        this.calculateCurrentMoment();\n        this.calculateIsCurrentDay();\n\n        this.fetchData(true);\n    }\n\n    /**\n     * Fetch all the data required for the view.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved when done.\n     */\n    async fetchData(sync?: boolean): Promise<void> {\n\n        this.syncIcon = CoreConstants.ICON_LOADING;\n        this.isOnline = CoreApp.isOnline();\n\n        if (sync) {\n            await this.sync();\n        }\n\n        try {\n            const promises: Promise<void>[] = [];\n\n            // Load courses for the popover.\n            promises.push(CoreCoursesHelper.getCoursesForPopover(this.filter.courseId).then((data) => {\n                this.courses = data.courses;\n\n                return;\n            }));\n\n            // Get categories.\n            promises.push(this.loadCategories());\n\n            // Get offline events.\n            promises.push(AddonCalendarOffline.getAllEditedEvents().then((offlineEvents) => {\n                // Classify them by month & day.\n                this.offlineEvents = AddonCalendarHelper.classifyIntoMonths(offlineEvents);\n\n                // Get the IDs of events edited in offline.\n                this.offlineEditedEventsIds = offlineEvents.filter((event) => event.id! > 0).map((event) => event.id!);\n\n                return;\n            }));\n\n            // Get events deleted in offline.\n            promises.push(AddonCalendarOffline.getAllDeletedEventsIds().then((ids) => {\n                this.deletedEvents = ids;\n\n                return;\n            }));\n\n            // Check if user can create events.\n            promises.push(AddonCalendarHelper.canEditEvents(this.filter.courseId).then((canEdit) => {\n                this.canCreate = canEdit;\n\n                return;\n            }));\n\n            // Get user preferences.\n            promises.push(AddonCalendar.getCalendarTimeFormat().then((value) => {\n                this.timeFormat = value;\n\n                return;\n            }));\n\n            await Promise.all(promises);\n\n            await this.fetchEvents();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n        }\n\n        this.loaded = true;\n        this.syncIcon = CoreConstants.ICON_SYNC;\n    }\n\n    /**\n     * Fetch the events for current day.\n     *\n     * @return Promise resolved when done.\n     */\n    async fetchEvents(): Promise<void> {\n        let result: AddonCalendarCalendarDay;\n        try {\n            // Don't pass courseId and categoryId, we'll filter them locally.\n            result = await AddonCalendar.getDayEvents(this.year, this.month, this.day);\n            this.onlineEvents = result.events.map((event) => AddonCalendarHelper.formatEventData(event));\n        } catch (error) {\n            if (CoreApp.isOnline()) {\n                throw error;\n            }\n            // Allow navigating to non-cached days in offline (behave as if using emergency cache).\n            this.onlineEvents = [];\n        }\n\n        // Calculate the period name. We don't use the one in result because it's in server's language.\n        this.periodName = CoreTimeUtils.userDate(\n            new Date(this.year, this.month - 1, this.day).getTime(),\n            'core.strftimedaydate',\n        );\n\n        // Schedule notifications for the events retrieved (only future events will be scheduled).\n        AddonCalendar.scheduleEventsNotifications(this.onlineEvents);\n        // Merge the online events with offline data.\n        this.events = this.mergeEvents();\n        // Filter events by course.\n        this.filterEvents();\n        this.calculateIsCurrentDay();\n        // Re-calculate the formatted time so it uses the device date.\n        const dayTime = this.currentMoment.unix() * 1000;\n\n        const promises = this.events.map((event) => {\n            event.ispast = this.isPastDay || (this.isCurrentDay && this.isEventPast(event));\n\n            return AddonCalendar.formatEventTime(event, this.timeFormat!, true, dayTime).then((time) => {\n                event.formattedtime = time;\n\n                return;\n            });\n        });\n\n        await Promise.all(promises);\n    }\n\n    /**\n     * Merge online events with the offline events of that period.\n     *\n     * @return Merged events.\n     */\n    protected mergeEvents(): AddonCalendarEventToDisplay[] {\n        this.hasOffline = false;\n\n        if (!Object.keys(this.offlineEvents).length && !this.deletedEvents.length) {\n            // No offline events, nothing to merge.\n            return this.onlineEvents;\n        }\n\n        const monthOfflineEvents = this.offlineEvents[AddonCalendarHelper.getMonthId(this.year, this.month)];\n        const dayOfflineEvents = monthOfflineEvents && monthOfflineEvents[this.day];\n        let result = this.onlineEvents;\n\n        if (this.deletedEvents.length) {\n            // Mark as deleted the events that were deleted in offline.\n            result.forEach((event) => {\n                event.deleted = this.deletedEvents.indexOf(event.id) != -1;\n\n                if (event.deleted) {\n                    this.hasOffline = true;\n                }\n            });\n        }\n\n        if (this.offlineEditedEventsIds.length) {\n            // Remove the online events that were modified in offline.\n            result = result.filter((event) => this.offlineEditedEventsIds.indexOf(event.id) == -1);\n\n            if (result.length != this.onlineEvents.length) {\n                this.hasOffline = true;\n            }\n        }\n\n        if (dayOfflineEvents && dayOfflineEvents.length) {\n            // Add the offline events (either new or edited).\n            this.hasOffline = true;\n            result = AddonCalendarHelper.sortEvents(result.concat(dayOfflineEvents));\n        }\n\n        return result;\n    }\n\n    /**\n     * Filter events based on the filter popover.\n     */\n    protected filterEvents(): void {\n        this.filteredEvents = AddonCalendarHelper.getFilteredEvents(this.events, this.filter, this.categories);\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @return Promise resolved when done.\n     */\n    async doRefresh(refresher?: IonRefresher, done?: () => void): Promise<void> {\n        if (!this.loaded) {\n            return;\n        }\n\n        await this.refreshData(true).finally(() => {\n            refresher?.complete();\n            done && done();\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param afterChange Whether the refresh is done after an event has changed or has been synced.\n     * @return Promise resolved when done.\n     */\n    async refreshData(sync?: boolean, afterChange?: boolean): Promise<void> {\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        const promises: Promise<void>[] = [];\n\n        // Don't invalidate day events after a change, it has already been handled.\n        if (!afterChange) {\n            promises.push(AddonCalendar.invalidateDayEvents(this.year, this.month, this.day));\n        }\n        promises.push(AddonCalendar.invalidateAllowedEventTypes());\n        promises.push(CoreCourses.invalidateCategories(0, true));\n        promises.push(AddonCalendar.invalidateTimeFormat());\n\n        await Promise.all(promises).finally(() =>\n            this.fetchData(sync));\n    }\n\n    /**\n     * Load categories to be able to filter events.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async loadCategories(): Promise<void> {\n        try {\n            const cats = await CoreCourses.getCategories(0, true);\n            this.categories = {};\n\n            // Index categories by ID.\n            cats.forEach((category) => {\n                this.categories[category.id] = category;\n            });\n        } catch {\n            // Ignore errors.\n        }\n    }\n\n    /**\n     * Try to synchronize offline events.\n     *\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved when done.\n     */\n    protected async sync(showErrors?: boolean): Promise<void> {\n        try {\n            const result = await AddonCalendarSync.syncEvents();\n\n            if (result.warnings && result.warnings.length) {\n                CoreDomUtils.showErrorModal(result.warnings[0]);\n            }\n\n            if (result.updated) {\n                // Trigger a manual sync event.\n                result.source = 'day';\n                result.day = this.day;\n                result.month = this.month;\n                result.year = this.year;\n\n                CoreEvents.trigger(AddonCalendarSyncProvider.MANUAL_SYNCED, result, this.currentSiteId);\n            }\n        } catch (error) {\n            if (showErrors) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\n            }\n        }\n    }\n\n    /**\n     * Navigate to a particular event.\n     *\n     * @param eventId Event to load.\n     */\n    gotoEvent(eventId: number): void {\n        if (eventId < 0) {\n            // It's an offline event, go to the edit page.\n            this.openEdit(eventId);\n        } else {\n            CoreNavigator.navigateToSitePath(`/calendar/event/${eventId}`);\n        }\n    }\n\n    /**\n     * Show the context menu.\n     *\n     * @param event Event.\n     */\n    async openFilter(event: MouseEvent): Promise<void> {\n        await CoreDomUtils.openPopover({\n            component: AddonCalendarFilterPopoverComponent,\n            componentProps: {\n                courses: this.courses,\n                filter: this.filter,\n            },\n            event,\n        });\n    }\n\n    /**\n     * Open page to create/edit an event.\n     *\n     * @param eventId Event ID to edit.\n     */\n    openEdit(eventId?: number): void {\n        const params: Params = {};\n\n        if (!eventId) {\n            // It's a new event, set the time.\n            eventId = 0;\n            params.timestamp = moment().year(this.year).month(this.month - 1).date(this.day).unix() * 1000;\n        }\n\n        if (this.filter.courseId) {\n            params.courseId = this.filter.courseId;\n        }\n\n        CoreNavigator.navigateToSitePath(`/calendar/edit/${eventId}`, { params });\n    }\n\n    /**\n     * Calculate current moment.\n     */\n    calculateCurrentMoment(): void {\n        this.currentMoment = moment().year(this.year).month(this.month - 1).date(this.day);\n    }\n\n    /**\n     * Check if user is viewing the current day.\n     */\n    calculateIsCurrentDay(): void {\n        const now = new Date();\n\n        this.currentTime = CoreTimeUtils.timestamp();\n\n        this.isCurrentDay = this.year == now.getFullYear() && this.month == now.getMonth() + 1 && this.day == now.getDate();\n        this.isPastDay = this.year < now.getFullYear() || (this.year == now.getFullYear() && this.month < now.getMonth()) ||\n            (this.year == now.getFullYear() && this.month == now.getMonth() + 1 && this.day < now.getDate());\n    }\n\n    /**\n     * Go to current day.\n     */\n    async goToCurrentDay(): Promise<void> {\n        const now = new Date();\n        const initialDay = this.day;\n        const initialMonth = this.month;\n        const initialYear = this.year;\n\n        this.day = now.getDate();\n        this.month = now.getMonth() + 1;\n        this.year = now.getFullYear();\n        this.calculateCurrentMoment();\n\n        this.loaded = false;\n\n        try {\n            await this.fetchEvents();\n\n            this.isCurrentDay = true;\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n\n            this.year = initialYear;\n            this.month = initialMonth;\n            this.day = initialDay;\n            this.calculateCurrentMoment();\n        }\n\n        this.loaded = true;\n    }\n\n    /**\n     * Load next day.\n     */\n    async loadNext(): Promise<void> {\n        this.increaseDay();\n\n        this.loaded = false;\n\n        try {\n            await this.fetchEvents();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n            this.decreaseDay();\n        }\n        this.loaded = true;\n    }\n\n    /**\n     * Load previous day.\n     */\n    async loadPrevious(): Promise<void> {\n        this.decreaseDay();\n\n        this.loaded = false;\n\n        try {\n            await this.fetchEvents();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n            this.increaseDay();\n        }\n        this.loaded = true;\n    }\n\n    /**\n     * Decrease the current day.\n     */\n    protected decreaseDay(): void {\n        this.currentMoment.subtract(1, 'day');\n\n        this.year = this.currentMoment.year();\n        this.month = this.currentMoment.month() + 1;\n        this.day = this.currentMoment.date();\n    }\n\n    /**\n     * Increase the current day.\n     */\n    protected increaseDay(): void {\n        this.currentMoment.add(1, 'day');\n\n        this.year = this.currentMoment.year();\n        this.month = this.currentMoment.month() + 1;\n        this.day = this.currentMoment.date();\n    }\n\n    /**\n     * Find an event and mark it as deleted.\n     *\n     * @param eventId Event ID.\n     * @param deleted Whether to mark it as deleted or not.\n     * @return Whether the event was found.\n     */\n    protected markAsDeleted(eventId: number, deleted: boolean): boolean {\n        const event = this.onlineEvents.find((event) => event.id == eventId);\n\n        if (event) {\n            event.deleted = deleted;\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns if the event is in the past or not.\n     *\n     * @param event Event object.\n     * @return True if it's in the past.\n     */\n    isEventPast(event: AddonCalendarEventToDisplay): boolean {\n        return (event.timestart + event.timeduration) < this.currentTime;\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.newEventObserver?.off();\n        this.discardedObserver?.off();\n        this.editEventObserver?.off();\n        this.deleteEventObserver?.off();\n        this.undeleteEventObserver?.off();\n        this.syncObserver?.off();\n        this.manualSyncObserver?.off();\n        this.onlineObserver?.unsubscribe();\n        this.filterChangedObserver?.off();\n        this.obsDefaultTimeChange?.off();\n    }\n\n}\n","export default \":host .addon-calendar-period {\\n  flex-grow: 3;\\n}\\n:host .addon-calendar-period h3 {\\n  margin-top: 10px;\\n  font-size: 1.2rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvY2FsZW5kYXIvcGFnZXMvZGF5L2RheS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksWUFBQTtBQUFSO0FBQ1E7RUFDSSxnQkFBQTtFQUNBLGlCQUFBO0FBQ1oiLCJmaWxlIjoic3JjL2FkZG9ucy9jYWxlbmRhci9wYWdlcy9kYXkvZGF5LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgLmFkZG9uLWNhbGVuZGFyLXBlcmlvZCB7XG4gICAgICAgIGZsZXgtZ3JvdzogMztcbiAgICAgICAgaDMge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19 */\";"],"sourceRoot":"webpack:///"}