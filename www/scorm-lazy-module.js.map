{"version":3,"sources":["./src/addons/mod/scorm/pages/index/index.html","./src/addons/mod/scorm/pages/player/player.html","./src/addons/mod/scorm/classes/data-model-12.ts","./src/addons/mod/scorm/pages/index/index.ts","./src/addons/mod/scorm/pages/player/player.ts","./src/addons/mod/scorm/scorm-lazy.module.ts"],"names":[],"mappings":"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","file":"scorm-lazy-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>\\n            <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"module?.id\\\" [courseId]=\\\"courseId\\\">\\n            </core-format-text>\\n        </h1>\\n        <ion-buttons slot=\\\"end\\\">\\n            <!-- The buttons defined by the component will be added in here. -->\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!activityComponent?.loaded\\\" (ionRefresh)=\\\"activityComponent?.doRefresh($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n\\n    <addon-mod-scorm-index [module]=\\\"module\\\" [courseId]=\\\"courseId\\\" (dataRetrieved)=\\\"updateData($event)\\\">\\n    </addon-mod-scorm-index>\\n</ion-content>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>\\n            <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\">\\n            </core-format-text>\\n        </h1>\\n        <ion-buttons slot=\\\"end\\\">\\n            <core-button-with-spinner *ngIf=\\\"showToc\\\" [loading]=\\\"loadingToc\\\">\\n                <ion-button fill=\\\"clear\\\" *ngIf=\\\"toc.length\\\" (click)=\\\"openToc()\\\"\\n                    [attr.aria-label]=\\\"'addon.mod_scorm.toc' | translate\\\" aria-haspopup=\\\"true\\\">\\n                    <ion-icon name=\\\"fas-bookmark\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                </ion-button>\\n            </core-button-with-spinner>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <core-loading [hideUntil]=\\\"loaded\\\" class=\\\"core-loading-fullheight\\\">\\n        <core-navigation-bar [previous]=\\\"previousSco\\\" [next]=\\\"nextSco\\\" (action)=\\\"loadSco($event)\\\"></core-navigation-bar>\\n\\n        <core-iframe *ngIf=\\\"loaded && src\\\" [src]=\\\"src\\\" [iframeWidth]=\\\"scormWidth\\\" [iframeHeight]=\\\"scormHeight\\\"></core-iframe>\\n\\n        <p *ngIf=\\\"!src && errorMessage\\\">{{ errorMessage | translate }}</p>\\n    </core-loading>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreEvents } from '@singletons/events';\nimport {\n    AddonModScorm,\n    AddonModScormCommonEventData,\n    AddonModScormDataEntry,\n    AddonModScormDataValue,\n    AddonModScormProvider,\n    AddonModScormScorm,\n    AddonModScormUserDataMap,\n} from '../services/scorm';\n\n// Standard Data Type Definition.\nconst CMI_STRING_256 = '^[\\\\u0000-\\\\uFFFF]{0,255}$';\nconst CMI_STRING_4096 = '^[\\\\u0000-\\\\uFFFF]{0,4096}$';\nconst CMI_TIME = '^([0-2]{1}[0-9]{1}):([0-5]{1}[0-9]{1}):([0-5]{1}[0-9]{1})(.[0-9]{1,2})?$';\nconst CMI_TIMESPAN = '^([0-9]{2,4}):([0-9]{2}):([0-9]{2})(.[0-9]{1,2})?$';\nconst CMI_INTEGER = '^\\\\d+$'; // eslint-disable-line @typescript-eslint/no-unused-vars\nconst CMI_SINTEGER = '^-?([0-9]+)$';\nconst CMI_DECIMAL = '^-?([0-9]{0,3})(.[0-9]*)?$';\nconst CMI_IDENTIFIER = '^[\\\\u0021-\\\\u007E]{0,255}$';\nconst CMI_FEEDBACK = CMI_STRING_256; // This must be redefined.\nconst CMI_INDEX = '[._](\\\\d+).';\n\n// Vocabulary Data Type Definition.\nconst CMI_STATUS = '^passed$|^completed$|^failed$|^incomplete$|^browsed$';\nconst CMI_STATUS_2 = '^passed$|^completed$|^failed$|^incomplete$|^browsed$|^not attempted$';\nconst CMI_EXIT = '^time-out$|^suspend$|^logout$|^$';\nconst CMI_TYPE = '^true-false$|^choice$|^fill-in$|^matching$|^performance$|^sequencing$|^likert$|^numeric$';\nconst CMI_RESULT = '^correct$|^wrong$|^unanticipated$|^neutral$|^([0-9]{0,3})?(.[0-9]*)?$';\nconst NAV_EVENT = '^previous$|^continue$';\n\n// Children lists.\nconst CMI_CHILDREN = 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions';\nconst CORE_CHILDREN = 'student_id,student_name,lesson_location,credit,lesson_status,entry,score,total_time,lesson_mode,' +\n        'exit,session_time';\nconst SCORE_CHILDREN = 'raw,min,max';\nconst COMMENTS_CHILDREN = 'content,location,time';\nconst OBJECTIVES_CHILDREN = 'id,score,status';\nconst CORRECT_RESPONSES_CHILDREN = 'pattern'; // eslint-disable-line @typescript-eslint/no-unused-vars\nconst STUDENT_DATA_CHILDREN = 'mastery_score,max_time_allowed,time_limit_action';\nconst STUDENT_PREFERENCE_CHILDREN = 'audio,language,speed,text';\nconst INTERACTIONS_CHILDREN = 'id,objectives,time,type,correct_responses,weighting,student_response,result,latency';\n\n// Data ranges.\nconst SCORE_RANGE = '0#100';\nconst AUDIO_RANGE = '-1#100';\nconst SPEED_RANGE = '-100#100';\nconst WEIGHTING_RANGE = '-100#100';\nconst TEXT_RANGE = '-1#1';\n\n// Error messages.\nconst ERROR_STRINGS = {\n    0: 'No error',\n    101: 'General exception',\n    201: 'Invalid argument error',\n    202: 'Element cannot have children',\n    203: 'Element not an array - cannot have count',\n    301: 'Not initialized',\n    401: 'Not implemented error',\n    402: 'Invalid set value, element is a keyword',\n    403: 'Element is read only',\n    404: 'Element is write only',\n    405: 'Incorrect data type',\n};\n\n/**\n * SCORM data model implementation for version 1.2.\n */\n/* eslint-disable @typescript-eslint/naming-convention */\nexport class AddonModScormDataModel12 {\n\n    protected currentUserData: AddonModScormUserDataMap = {}; // Current user data.\n    protected def: Record<number, Record<string, AddonModScormDataValue>> = {}; // Object containing the default values.\n    protected defExtra: Record<number, Record<string, AddonModScormDataValue>> = {}; // Objectives and interactions (all .n. elems).\n    protected dataModel: Record<number, Record<string, DataModelEntry>> = {}; // The SCORM 1.2 data model.\n\n    protected initialized = false; // Whether LMSInitialize has been called.\n    protected errorCode = '0'; // Last error.\n    protected timeout?: number; // Timeout to commit changes.\n\n    protected siteId: string;\n    protected scorm: AddonModScormScorm;\n    protected scoId: number;\n    protected attempt: number;\n    protected mode: string;\n    protected offline: boolean;\n\n    /**\n     * Constructor.\n     *\n     * @param siteId Site ID.\n     * @param scorm SCORM.\n     * @param scoId Current SCO ID.\n     * @param attempt Attempt number.\n     * @param userData The user default data.\n     * @param mode Mode being played. By default, MODENORMAL.\n     * @param offline Whether the attempt is offline.\n     */\n    constructor(\n        siteId: string,\n        scorm: AddonModScormScorm,\n        scoId: number,\n        attempt: number,\n        userData: AddonModScormUserDataMap,\n        mode?: string,\n        offline?: boolean,\n    ) {\n        this.siteId = siteId;\n        this.scorm = scorm;\n        this.scoId = scoId;\n        this.attempt = attempt;\n        this.mode = mode || AddonModScormProvider.MODENORMAL;\n        this.offline = !!offline;\n\n        this.init(userData);\n    }\n\n    /**\n     * Utility function for adding two times in format hh:mm:ss.\n     *\n     * @param first First time.\n     * @param second Second time.\n     * @return Total time.\n     */\n    protected addTime(first: string, second: string): string {\n        const sFirst = first.split(':');\n        const sSecond = second.split(':');\n        const cFirst = sFirst[2].split('.');\n        const cSecond = sSecond[2].split('.');\n        let change = 0;\n\n        let firstCents = 0; // Cents.\n        if (cFirst.length > 1) {\n            firstCents = parseInt(cFirst[1], 10);\n        }\n\n        let secondCents = 0;\n        if (cSecond.length > 1) {\n            secondCents = parseInt(cSecond[1], 10);\n        }\n\n        let cents: string | number = firstCents + secondCents;\n        change = Math.floor(cents / 100);\n        cents = cents - (change * 100);\n        if (Math.floor(cents) < 10) {\n            cents = '0' + cents.toString();\n        }\n\n        let secs: string | number = parseInt(cFirst[0], 10) + parseInt(cSecond[0], 10) + change; // Seconds.\n        change = Math.floor(secs / 60);\n        secs = secs - (change * 60);\n        if (Math.floor(secs) < 10) {\n            secs = '0' + secs.toString();\n        }\n\n        let mins: string | number = parseInt(sFirst[1], 10) + parseInt(sSecond[1], 10) + change; // Minutes.\n        change = Math.floor(mins / 60);\n        mins = mins - (change * 60);\n        if (mins < 10) {\n            mins = '0' + mins.toString();\n        }\n\n        let hours: string | number = parseInt(sFirst[0], 10) + parseInt(sSecond[0], 10) + change; // Hours.\n        if (hours < 10) {\n            hours = '0' + hours.toString();\n        }\n\n        if (cents != '0') {\n            return hours + ':' + mins + ':' + secs + '.' + cents;\n        } else {\n            return hours + ':' + mins + ':' + secs;\n        }\n    }\n\n    /**\n     * Collect all the user tracking data that must be persisted in the system, this is usually called by LMSCommit().\n     *\n     * @return Collected data.\n     */\n    protected collectData(): AddonModScormDataEntry[] {\n        if (!this.currentUserData[this.scoId]) {\n            return [];\n        }\n\n        const data: AddonModScormDataEntry[] = [];\n\n        for (const element in this.currentUserData[this.scoId].userdata) {\n            // Ommit for example the nav. elements and the session time element.\n            if (element.substr(0, 3) != 'cmi' || element == 'cmi.core.session_time') {\n                continue;\n            }\n\n            // Get the generic name for this element (e.g. convert 'cmi.interactions.1.id' to 'cmi.interactions.n.id')\n            const expression = new RegExp(CMI_INDEX, 'g');\n            const elementModel = element.replace(expression, '.n.');\n\n            // Check if this specific element is not defined in the datamodel, but the generic element name is.\n            if (this.dataModel[this.scoId][element] === undefined && this.dataModel[this.scoId][elementModel] !== undefined) {\n                // Add this element to the data model (by cloning the generic element) so we can track changes to it.\n                this.dataModel[this.scoId][element] = CoreUtils.clone(this.dataModel[this.scoId][elementModel]);\n            }\n\n            // Check if the current element exists in the datamodel and it's not a read only element.\n            if (this.dataModel[this.scoId][element] === undefined || this.dataModel[this.scoId][element].mod == 'r') {\n                continue;\n            }\n\n            const el: AddonModScormDataEntry = {\n                // Moodle stores the organizations and interactions using _n. instead .n.\n                element: element.replace(expression, '_$1.'),\n                value: this.getEl(element),\n            };\n\n            // Check if the element has a default value.\n            if (this.dataModel[this.scoId][element].defaultvalue !== undefined) {\n\n                // Check if the default value is different from the current value.\n                if (this.dataModel[this.scoId][element].defaultvalue !== el.value) {\n                    data.push(el);\n\n                    // Update the element default to reflect the current committed value.\n                    this.dataModel[this.scoId][element].defaultvalue = el.value;\n                }\n            } else {\n                data.push(el);\n\n                // No default value for the element, so set it now.\n                this.dataModel[this.scoId][element].defaultvalue = el.value;\n            }\n        }\n\n        return data;\n    }\n\n    /**\n     * Get the value of the given element from the non-persistent (current) user data.\n     *\n     * @param el The element\n     * @return The element value\n     */\n    protected getEl(el: string): string | number {\n        if (this.currentUserData[this.scoId] && this.currentUserData[this.scoId].userdata[el] !== undefined) {\n            return this.currentUserData[this.scoId].userdata[el];\n        }\n\n        return '';\n    }\n\n    /**\n     * Initialize the model.\n     *\n     * @param userData The user default data.\n     */\n    protected init(userData: AddonModScormUserDataMap): void {\n        // Prepare the definition array containing the default values.\n        for (const scoId in userData) {\n            const sco = userData[scoId];\n            this.def[scoId] = sco.defaultdata;\n            this.defExtra[scoId] = sco.userdata;\n        }\n\n        // Set up data model for each SCO.\n        for (const scoId in this.def) {\n            this.dataModel[scoId] = {\n                'cmi._children': { defaultvalue: CMI_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi._version': { defaultvalue: '3.4', mod: 'r', writeerror: '402' },\n                'cmi.core._children': { defaultvalue: CORE_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi.core.student_id': { defaultvalue: this.def[scoId]['cmi.core.student_id'], mod: 'r', writeerror: '403' },\n                'cmi.core.student_name': { defaultvalue: this.def[scoId]['cmi.core.student_name'], mod: 'r', writeerror: '403' },\n                'cmi.core.lesson_location': {\n                    defaultvalue: this.def[scoId]['cmi.core.lesson_location'],\n                    format: CMI_STRING_256,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.core.credit': { defaultvalue: this.def[scoId]['cmi.core.credit'], mod: 'r', writeerror: '403' },\n                'cmi.core.lesson_status': {\n                    defaultvalue: this.def[scoId]['cmi.core.lesson_status'],\n                    format: CMI_STATUS,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.core.entry': { defaultvalue: this.def[scoId]['cmi.core.entry'], mod: 'r', writeerror: '403' },\n                'cmi.core.score._children': { defaultvalue: SCORE_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi.core.score.raw': {\n                    defaultvalue: this.def[scoId]['cmi.core.score.raw'],\n                    format: CMI_DECIMAL,\n                    range: SCORE_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.core.score.max': {\n                    defaultvalue: this.def[scoId]['cmi.core.score.max'],\n                    format: CMI_DECIMAL,\n                    range: SCORE_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.core.score.min': {\n                    defaultvalue: this.def[scoId]['cmi.core.score.min'],\n                    format: CMI_DECIMAL,\n                    range: SCORE_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.core.total_time': { defaultvalue: this.def[scoId]['cmi.core.total_time'], mod: 'r', writeerror: '403' },\n                'cmi.core.lesson_mode': { defaultvalue: this.def[scoId]['cmi.core.lesson_mode'], mod: 'r', writeerror: '403' },\n                'cmi.core.exit': {\n                    defaultvalue: this.def[scoId]['cmi.core.exit'],\n                    format: CMI_EXIT,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.core.session_time': {\n                    format: CMI_TIMESPAN,\n                    mod: 'w',\n                    defaultvalue: '00:00:00',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.suspend_data': {\n                    defaultvalue: this.def[scoId]['cmi.suspend_data'],\n                    format: CMI_STRING_4096,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.launch_data': { defaultvalue: this.def[scoId]['cmi.launch_data'], mod: 'r', writeerror: '403' },\n                'cmi.comments': {\n                    defaultvalue: this.def[scoId]['cmi.comments'],\n                    format: CMI_STRING_4096,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                // Deprecated evaluation attributes.\n                'cmi.evaluation.comments._count': { defaultvalue: '0', mod: 'r', writeerror: '402' },\n                'cmi.evaluation.comments._children': { defaultvalue: COMMENTS_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi.evaluation.comments.n.content': {\n                    defaultvalue: '',\n                    pattern: CMI_INDEX,\n                    format: CMI_STRING_256,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.evaluation.comments.n.location': {\n                    defaultvalue: '',\n                    pattern: CMI_INDEX,\n                    format: CMI_STRING_256,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.evaluation.comments.n.time': {\n                    defaultvalue: '',\n                    pattern: CMI_INDEX,\n                    format: CMI_TIME,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.comments_from_lms': { mod: 'r', writeerror: '403' },\n                'cmi.objectives._children': { defaultvalue: OBJECTIVES_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi.objectives._count': { mod: 'r', defaultvalue: '0', writeerror: '402' },\n                'cmi.objectives.n.id': { pattern: CMI_INDEX, format: CMI_IDENTIFIER, mod: 'rw', writeerror: '405' },\n                'cmi.objectives.n.score._children': { pattern: CMI_INDEX, mod: 'r', writeerror: '402' },\n                'cmi.objectives.n.score.raw': {\n                    defaultvalue: '',\n                    pattern: CMI_INDEX,\n                    format: CMI_DECIMAL,\n                    range: SCORE_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.objectives.n.score.min': {\n                    defaultvalue: '',\n                    pattern: CMI_INDEX,\n                    format: CMI_DECIMAL,\n                    range: SCORE_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.objectives.n.score.max': {\n                    defaultvalue: '',\n                    pattern: CMI_INDEX,\n                    format: CMI_DECIMAL,\n                    range: SCORE_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.objectives.n.status': { pattern: CMI_INDEX, format: CMI_STATUS_2, mod: 'rw', writeerror: '405' },\n                'cmi.student_data._children': { defaultvalue: STUDENT_DATA_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi.student_data.mastery_score': {\n                    defaultvalue: this.def[scoId]['cmi.student_data.mastery_score'],\n                    mod: 'r',\n                    writeerror: '403',\n                },\n                'cmi.student_data.max_time_allowed': {\n                    defaultvalue: this.def[scoId]['cmi.student_data.max_time_allowed'],\n                    mod: 'r',\n                    writeerror: '403',\n                },\n                'cmi.student_data.time_limit_action': {\n                    defaultvalue: this.def[scoId]['cmi.student_data.time_limit_action'],\n                    mod: 'r',\n                    writeerror: '403',\n                },\n                'cmi.student_preference._children': {\n                    defaultvalue: STUDENT_PREFERENCE_CHILDREN,\n                    mod: 'r',\n                    writeerror: '402',\n                },\n                'cmi.student_preference.audio': {\n                    defaultvalue: this.def[scoId]['cmi.student_preference.audio'],\n                    format: CMI_SINTEGER,\n                    range: AUDIO_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.student_preference.language': {\n                    defaultvalue: this.def[scoId]['cmi.student_preference.language'],\n                    format: CMI_STRING_256,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.student_preference.speed': {\n                    defaultvalue: this.def[scoId]['cmi.student_preference.speed'],\n                    format: CMI_SINTEGER,\n                    range: SPEED_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.student_preference.text': {\n                    defaultvalue: this.def[scoId]['cmi.student_preference.text'],\n                    format: CMI_SINTEGER,\n                    range: TEXT_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.interactions._children': { defaultvalue: INTERACTIONS_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi.interactions._count': { mod: 'r', defaultvalue: '0', writeerror: '402' },\n                'cmi.interactions.n.id': {\n                    pattern: CMI_INDEX,\n                    format: CMI_IDENTIFIER,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.interactions.n.objectives._count': { pattern: CMI_INDEX, mod: 'r', defaultvalue: '0', writeerror: '402' },\n                'cmi.interactions.n.objectives.n.id': {\n                    pattern: CMI_INDEX,\n                    format: CMI_IDENTIFIER,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.interactions.n.time': { pattern: CMI_INDEX, format: CMI_TIME, mod: 'w', readerror: '404', writeerror: '405' },\n                'cmi.interactions.n.type': { pattern: CMI_INDEX, format: CMI_TYPE, mod: 'w', readerror: '404', writeerror: '405' },\n                'cmi.interactions.n.correct_responses._count': {\n                    pattern: CMI_INDEX,\n                    mod: 'r',\n                    defaultvalue: '0',\n                    writeerror: '402',\n                },\n                'cmi.interactions.n.correct_responses.n.pattern': {\n                    pattern: CMI_INDEX,\n                    format: CMI_FEEDBACK,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.interactions.n.weighting': {\n                    pattern: CMI_INDEX,\n                    format: CMI_DECIMAL,\n                    range: WEIGHTING_RANGE,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.interactions.n.student_response': {\n                    pattern: CMI_INDEX,\n                    format: CMI_FEEDBACK,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.interactions.n.result': {\n                    pattern: CMI_INDEX,\n                    format: CMI_RESULT,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.interactions.n.latency': {\n                    pattern: CMI_INDEX,\n                    format: CMI_TIMESPAN,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'nav.event': { defaultvalue: '', format: NAV_EVENT, mod: 'w', readerror: '404', writeerror: '405' },\n            };\n\n            this.currentUserData[scoId] = {\n                scoid: Number(scoId),\n                userdata: {},\n                defaultdata: {},\n            };\n\n            // Load default values.\n            for (const element in this.dataModel[scoId]) {\n                if (element.match(/\\.n\\./) === null) {\n                    if (this.dataModel[scoId][element].defaultvalue !== undefined) {\n                        this.currentUserData[scoId].userdata[element] = this.dataModel[scoId][element].defaultvalue!;\n                    }\n                }\n            }\n\n            // Load initial user data for current SCO.\n            for (const element in this.def[scoId]) {\n                if (element.match(/\\.n\\./) === null) {\n                    if (this.dataModel[scoId][element].defaultvalue !== undefined) {\n                        this.currentUserData[scoId].userdata[element] = this.dataModel[scoId][element].defaultvalue!;\n                    } else if (this.defExtra[scoId][element] !== undefined) {\n                        // Check in user data values.\n                        this.currentUserData[scoId].userdata[element] = this.defExtra[scoId][element];\n                    } else {\n                        this.currentUserData[scoId].userdata[element] = '';\n                    }\n                }\n            }\n\n            // Load interactions and objectives, and init the counters.\n            const expression = new RegExp(CMI_INDEX, 'g');\n\n            for (const element in this.defExtra[scoId]) {\n                let counterElement = '';\n                let currentCounterIndex = '0';\n\n                // This check for an indexed element. cmi.objectives.1.id or cmi.objectives_1.id.\n                if (element.match(expression)) {\n                    // Normalize to the expected value according the standard.\n                    // Moodle stores this values using _n. instead .n.\n                    const elementDotFormat = element.replace(expression, '.$1.');\n                    this.currentUserData[scoId].userdata[elementDotFormat] = this.defExtra[scoId][element];\n\n                    // Get the correct counter and current index.\n                    if (elementDotFormat.indexOf('cmi.evaluation.comments') === 0) {\n                        counterElement = 'cmi.evaluation.comments._count';\n                        currentCounterIndex = elementDotFormat.match(/.(\\d+)./)?.[1] || '0';\n                    } else if (elementDotFormat.indexOf('cmi.objectives') === 0) {\n                        counterElement = 'cmi.objectives._count';\n                        currentCounterIndex = elementDotFormat.match(/.(\\d+)./)?.[1] || '0';\n                    } else if (elementDotFormat.indexOf('cmi.interactions') === 0) {\n                        if (elementDotFormat.indexOf('.objectives.') > 0) {\n                            const currentN = elementDotFormat.match(/cmi.interactions.(\\d+)./)?.[1];\n                            currentCounterIndex = elementDotFormat.match(/objectives.(\\d+)./)?.[1] || '0';\n                            counterElement = 'cmi.interactions.' + currentN + '.objectives._count';\n                        } else if (elementDotFormat.indexOf('.correct_responses.') > 0) {\n                            const currentN = elementDotFormat.match(/cmi.interactions.(\\d+)./)?.[1];\n                            currentCounterIndex = elementDotFormat.match(/correct_responses.(\\d+)./)?.[1] || '0';\n                            counterElement = 'cmi.interactions.' + currentN + '.correct_responses._count';\n                        } else {\n                            counterElement = 'cmi.interactions._count';\n                            currentCounterIndex = elementDotFormat.match(/.(\\d+)./)?.[1] || '0';\n                        }\n                    }\n\n                    if (counterElement) {\n                        const counterData = this.currentUserData[scoId].userdata[counterElement];\n                        if (counterData === undefined) {\n                            this.currentUserData[scoId].userdata[counterElement] = 0;\n                        }\n                        // Check if we need to sum.\n                        if (Number(currentCounterIndex) == Number(counterData)) {\n                            this.currentUserData[scoId].userdata[counterElement] = Number(counterData) + 1;\n                        }\n                        if (Number(currentCounterIndex) > Number(counterData)) {\n                            this.currentUserData[scoId].userdata[counterElement] = Number(currentCounterIndex) - 1;\n                        }\n                    }\n\n                }\n            }\n\n            // Set default status.\n            if (this.currentUserData[scoId].userdata['cmi.core.lesson_status'] === '') {\n                this.currentUserData[scoId].userdata['cmi.core.lesson_status'] = 'not attempted';\n            }\n\n            // Define mode and credit.\n            this.currentUserData[scoId].userdata['cmi.core.credit'] = this.mode == AddonModScormProvider.MODENORMAL ?\n                'credit' :\n                'no-credit';\n            this.currentUserData[scoId].userdata['cmi.core.lesson_mode'] = this.mode;\n        }\n    }\n\n    /**\n     * Commit the changes.\n     *\n     * @param param Param.\n     * @return \"true\" if success, \"false\" otherwise.\n     */\n    LMSCommit(param: string): string {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n            this.timeout = undefined;\n        }\n\n        this.errorCode = '0';\n        if (param == '') {\n            if (this.initialized) {\n                const result = this.storeData(false);\n\n                // Trigger TOC update.\n                this.triggerEvent(AddonModScormProvider.UPDATE_TOC_EVENT);\n\n                this.errorCode = result ? '0' : '101';\n\n                // Conver to string representing a boolean.\n                return result ? 'true' : 'false';\n            } else {\n                this.errorCode = '301';\n            }\n        } else {\n            this.errorCode = '201';\n        }\n\n        return 'false';\n    }\n\n    /**\n     * Finish the data model.\n     *\n     * @param param Param.\n     * @return \"true\" if success, \"false\" otherwise.\n     */\n    LMSFinish(param: string): string {\n        this.errorCode = '0';\n\n        if (param == '') {\n            if (this.initialized) {\n                this.initialized = false;\n\n                const result = this.storeData(true);\n                if (this.getEl('nav.event') != '') {\n                    if (this.getEl('nav.event') == 'continue') {\n                        this.triggerEvent(AddonModScormProvider.LAUNCH_NEXT_SCO_EVENT);\n                    } else {\n                        this.triggerEvent(AddonModScormProvider.LAUNCH_PREV_SCO_EVENT);\n                    }\n                } else {\n                    if (this.scorm.auto) {\n                        this.triggerEvent(AddonModScormProvider.LAUNCH_NEXT_SCO_EVENT);\n                    }\n                }\n\n                this.errorCode = result ? '0' : '101';\n\n                // Trigger TOC update.\n                this.triggerEvent(AddonModScormProvider.UPDATE_TOC_EVENT);\n\n                // Conver to string representing a boolean.\n                return result ? 'true' : 'false';\n            } else {\n                this.errorCode = '301';\n            }\n        } else {\n            this.errorCode = '201';\n        }\n\n        return 'false';\n    }\n\n    /**\n     * Get diagnostic.\n     *\n     * @param param Param.\n     * @return Result.\n     */\n    LMSGetDiagnostic(param: string): string {\n        if (param == '') {\n            param = this.errorCode;\n        }\n\n        return param;\n    }\n\n    /**\n     * Get the error message for a certain code.\n     *\n     * @param param Error code.\n     * @return Error message.\n     */\n    LMSGetErrorString(param: string): string {\n        if (param != '') {\n            return ERROR_STRINGS[param];\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * Get the last error code.\n     *\n     * @return Last error code.\n     */\n    LMSGetLastError(): string {\n        return this.errorCode;\n    }\n\n    /**\n     * Get the value of a certain element.\n     *\n     * @param element Name of the element to get.\n     * @return Value.\n     */\n    LMSGetValue(element: string): AddonModScormDataValue {\n        this.errorCode = '0';\n\n        if (this.initialized) {\n            if (element != '') {\n                const expression = new RegExp(CMI_INDEX, 'g');\n                const elementModel = String(element).replace(expression, '.n.');\n\n                if (this.dataModel[this.scoId][elementModel] !== undefined) {\n                    if (this.dataModel[this.scoId][elementModel].mod != 'w') {\n                        this.errorCode = '0';\n\n                        return this.getEl(element);\n                    } else {\n                        this.errorCode = this.dataModel[this.scoId][elementModel].readerror || '0';\n                    }\n                } else {\n                    const childrenStr = '._children';\n                    const countStr = '._count';\n\n                    if (elementModel.substr(elementModel.length - childrenStr.length, elementModel.length) == childrenStr) {\n                        const parentModel = elementModel.substr(0, elementModel.length - childrenStr.length);\n\n                        if (this.dataModel[this.scoId][parentModel] !== undefined) {\n                            this.errorCode = '202';\n                        } else {\n                            this.errorCode = '201';\n                        }\n                    } else if (elementModel.substr(elementModel.length - countStr.length, elementModel.length) == countStr) {\n                        const parentModel = elementModel.substr(0, elementModel.length - countStr.length);\n\n                        if (this.dataModel[this.scoId][parentModel] !== undefined) {\n                            this.errorCode = '203';\n                        } else {\n                            this.errorCode = '201';\n                        }\n                    } else {\n                        this.errorCode = '201';\n                    }\n                }\n            } else {\n                this.errorCode = '201';\n            }\n        } else {\n            this.errorCode = '301';\n        }\n\n        return '';\n    }\n\n    /**\n     * Initialize the data model.\n     *\n     * @param param Param.\n     * @return \"true\" if initialized, \"false\" otherwise.\n     */\n    LMSInitialize(param: string): string {\n        this.errorCode = '0';\n\n        if (param == '') {\n            if (!this.initialized) {\n                this.initialized = true;\n                this.errorCode = '0';\n\n                return 'true';\n            } else {\n                this.errorCode = '101';\n            }\n        } else {\n            this.errorCode = '201';\n        }\n\n        return 'false';\n    }\n\n    /**\n     * Set the value of a certain element.\n     *\n     * @param element Name of the element to set.\n     * @param value Value to set.\n     * @return \"true\" if success, \"false\" otherwise.\n     */\n    LMSSetValue(element: string, value: AddonModScormDataValue): string {\n        this.errorCode = '0';\n\n        if (this.initialized) {\n            if (element != '') {\n                let expression = new RegExp(CMI_INDEX, 'g');\n                const elementModel = String(element).replace(expression, '.n.');\n\n                if (this.dataModel[this.scoId][elementModel] !== undefined) {\n                    if (this.dataModel[this.scoId][elementModel].mod != 'r') {\n                        expression = new RegExp(this.dataModel[this.scoId][elementModel].format!);\n                        value = value + '';\n\n                        const matches = value.match(expression);\n\n                        if (matches != null) {\n                            // Create dynamic data model element.\n                            if (element != elementModel) {\n\n                                // Init default counters and values.\n                                if (element.indexOf('cmi.objectives') === 0) {\n                                    const currentN = element.match(/cmi.objectives.(\\d+)./)?.[1];\n                                    const counterElement = 'cmi.objectives.' + currentN + '.score';\n\n                                    if (this.currentUserData[this.scoId].userdata[counterElement + '._children'] === undefined) {\n                                        this.setEl(\n                                            <string> this.currentUserData[this.scoId].userdata[counterElement + '._children'],\n                                            SCORE_CHILDREN,\n                                        );\n                                        this.setEl(<string> this.currentUserData[this.scoId].userdata[counterElement + '.raw'], '');\n                                        this.setEl(<string> this.currentUserData[this.scoId].userdata[counterElement + '.min'], '');\n                                        this.setEl(<string> this.currentUserData[this.scoId].userdata[counterElement + '.max'], '');\n                                    }\n\n                                } else if (element.indexOf('cmi.interactions') === 0) {\n                                    const currentN = element.match(/cmi.interactions.(\\d+)./)?.[1];\n                                    let counterElement = 'cmi.interactions.' + currentN + '.objectives._count';\n\n                                    if (this.currentUserData[this.scoId].userdata[counterElement] === undefined) {\n                                        this.setEl(counterElement, 0);\n                                    }\n\n                                    counterElement = 'cmi.interactions.' + currentN + '.correct_responses._count';\n                                    if (this.currentUserData[this.scoId].userdata[counterElement] === undefined) {\n                                        this.setEl(counterElement, 0);\n                                    }\n                                }\n\n                                const elementIndexes = element.split('.');\n                                let subElement = 'cmi';\n\n                                for (let i = 1; i < elementIndexes.length - 1; i++) {\n                                    const elementIndex = elementIndexes[i];\n\n                                    if (elementIndexes[i + 1].match(/^\\d+$/)) {\n                                        const counterElement = subElement + '.' + elementIndex + '._count';\n\n                                        if (this.currentUserData[this.scoId].userdata[counterElement] === undefined) {\n                                            this.setEl(counterElement, 0);\n                                        }\n\n                                        if (elementIndexes[i + 1] == this.getEl(counterElement)) {\n                                            const count = this.getEl(counterElement);\n                                            this.setEl(counterElement, Number(count) + 1);\n                                        }\n\n                                        if (elementIndexes[i + 1] > this.getEl(counterElement)) {\n                                            this.errorCode = '201';\n                                        }\n\n                                        subElement = subElement.concat('.' + elementIndex + '.' + elementIndexes[i + 1]);\n                                        i++;\n                                    } else {\n                                        subElement = subElement.concat('.' + elementIndex);\n                                    }\n                                }\n\n                                element = subElement.concat('.' + elementIndexes[elementIndexes.length - 1]);\n                            }\n\n                            // Store data.\n                            if (this.errorCode == '0') {\n                                if (this.scorm.autocommit && !this.timeout) {\n                                    this.timeout = window.setTimeout(this.LMSCommit.bind(this), 60000, ['']);\n                                }\n\n                                const range = this.dataModel[this.scoId][elementModel].range;\n                                if (range !== undefined) {\n                                    const ranges = range.split('#');\n                                    value = Number(value);\n\n                                    if (value >= Number(ranges[0]) && value <= Number(ranges[1])) {\n                                        this.setEl(element, Number(value));\n                                        this.errorCode = '0';\n\n                                        return 'true';\n                                    } else {\n                                        this.errorCode = this.dataModel[this.scoId][elementModel].writeerror;\n                                    }\n                                } else {\n                                    if (element == 'cmi.comments') {\n                                        this.setEl('cmi.comments', this.getEl('cmi.comments') + value);\n                                    } else {\n                                        this.setEl(element, value);\n                                    }\n                                    this.errorCode = '0';\n\n                                    return 'true';\n                                }\n                            }\n                        } else {\n                            this.errorCode = this.dataModel[this.scoId][elementModel].writeerror;\n                        }\n                    } else {\n                        this.errorCode = this.dataModel[this.scoId][elementModel].writeerror;\n                    }\n                } else {\n                    this.errorCode = '201';\n                }\n            } else {\n                this.errorCode = '201';\n            }\n        } else {\n            this.errorCode = '301';\n        }\n\n        return 'false';\n    }\n\n    /**\n     * Set a SCO ID.\n     * The scoId is like a pointer to be able to retrieve the SCO default values and set the new ones in the overall SCORM\n     * data structure.\n     *\n     * @param scoId The new SCO id.\n     */\n    loadSco(scoId: number): void {\n        this.scoId = scoId;\n    }\n\n    /**\n     * Set the value of the given element in the non-persistent (current) user data.\n     *\n     * @param el The element.\n     * @param value The value.\n     */\n    protected setEl(el: string, value: AddonModScormDataValue): void {\n        this.currentUserData[this.scoId] = this.currentUserData[this.scoId] || {\n            scoid: this.scoId,\n            userdata: {},\n            defaultdata: {},\n        };\n        this.currentUserData[this.scoId].userdata[el] = value;\n    }\n\n    /**\n     * Set offline mode to true or false.\n     *\n     * @param offline True if offline, false otherwise.\n     */\n    setOffline(offline: boolean): void {\n        this.offline = offline;\n    }\n\n    /**\n     * Persist the current user data (this is usually called by LMSCommit).\n     *\n     * @param storeTotalTime If true, we need to calculate the total time too.\n     * @return True if success, false otherwise.\n     */\n    protected storeData(storeTotalTime?: boolean): boolean {\n        let tracks: AddonModScormDataEntry[];\n\n        if (storeTotalTime) {\n            if (this.getEl('cmi.core.lesson_status') == 'not attempted') {\n                this.setEl('cmi.core.lesson_status', 'completed');\n            }\n\n            if (this.getEl('cmi.core.lesson_mode') == AddonModScormProvider.MODENORMAL) {\n                if (this.getEl('cmi.core.credit') == 'credit') {\n                    if (this.getEl('cmi.student_data.mastery_score') !== '' && this.getEl('cmi.core.score.raw') !== '') {\n                        if (parseFloat(<string> this.getEl('cmi.core.score.raw')) >=\n                                parseFloat(<string> this.getEl('cmi.student_data.mastery_score'))) {\n                            this.setEl('cmi.core.lesson_status', 'passed');\n                        } else {\n                            this.setEl('cmi.core.lesson_status', 'failed');\n                        }\n                    }\n                }\n            }\n\n            if (this.getEl('cmi.core.lesson_mode') == AddonModScormProvider.MODEBROWSE) {\n                if (this.dataModel[this.scoId]['cmi.core.lesson_status'].defaultvalue == '' &&\n                        this.getEl('cmi.core.lesson_status') == 'not attempted') {\n                    this.setEl('cmi.core.lesson_status', 'browsed');\n                }\n            }\n\n            tracks = this.collectData();\n            tracks.push(this.totalTime());\n        } else {\n            tracks = this.collectData();\n        }\n\n        const ok = AddonModScorm.saveTracksSync(this.scoId, this.attempt, tracks, this.scorm, this.offline, this.currentUserData);\n\n        if (this.offline || ok) {\n            return ok;\n        }\n\n        // Failure storing data in online. Go offline.\n        this.offline = true;\n        this.triggerEvent(AddonModScormProvider.GO_OFFLINE_EVENT);\n\n        return AddonModScorm.saveTracksSync(this.scoId, this.attempt, tracks, this.scorm, this.offline, this.currentUserData);\n\n    }\n\n    /**\n     * Utility function for calculating the total time spent in the SCO.\n     *\n     * @return Total time element.\n     */\n    protected totalTime(): AddonModScormDataEntry {\n        const totalTime = this.addTime(<string> this.getEl('cmi.core.total_time'), <string> this.getEl('cmi.core.session_time'));\n\n        return { element: 'cmi.core.total_time', value: totalTime };\n    }\n\n    /**\n     * Convenience function to trigger events.\n     *\n     * @param name Name of the event to trigger.\n     */\n    protected triggerEvent(name: string): void {\n        CoreEvents.trigger(name, <AddonModScormCommonEventData> {\n            scormId: this.scorm.id,\n            scoId: this.scoId,\n            attempt: this.attempt,\n        }, this.siteId);\n    }\n\n}\n\ntype DataModelEntry = ReadOnlyDataModelEntry | WritableDataModelEntry;\n\ntype ReadOnlyDataModelEntry = DataModelCommonProperties & {\n    mod: 'r';\n    format?: string;\n};\n\ntype WritableDataModelEntry = DataModelCommonProperties & {\n    mod: 'w' | 'rw';\n    format: string;\n};\n\ntype DataModelCommonProperties = {\n    writeerror: string;\n    readerror?: string;\n    defaultvalue?: string | number;\n    range?: string;\n    pattern?: string;\n};\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { CoreCourseModuleMainActivityPage } from '@features/course/classes/main-activity-page';\nimport { AddonModScormIndexComponent } from '../../components/index/index';\n\n/**\n * Page that displays the scorm entry page.\n */\n@Component({\n    selector: 'page-addon-mod-scorm-index',\n    templateUrl: 'index.html',\n})\nexport class AddonModScormIndexPage extends CoreCourseModuleMainActivityPage<AddonModScormIndexComponent> implements OnInit {\n\n    @ViewChild(AddonModScormIndexComponent) activityComponent?: AddonModScormIndexComponent;\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CoreMainMenuPage } from '@features/mainmenu/pages/menu/menu';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites, CoreSitesReadingStrategy } from '@services/sites';\nimport { CoreSync } from '@services/sync';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { AddonModScormDataModel12 } from '../../classes/data-model-12';\nimport { AddonModScormTocComponent } from '../../components/toc/toc';\nimport {\n    AddonModScorm,\n    AddonModScormAttemptCountResult,\n    AddonModScormGetScormAccessInformationWSResponse,\n    AddonModScormProvider,\n    AddonModScormScorm,\n    AddonModScormScoWithData,\n    AddonModScormUserDataMap,\n} from '../../services/scorm';\nimport { AddonModScormHelper, AddonModScormTOCScoWithIcon } from '../../services/scorm-helper';\nimport { AddonModScormSync } from '../../services/scorm-sync';\n\n/**\n * Page that allows playing a SCORM.\n */\n@Component({\n    selector: 'page-addon-mod-scorm-player',\n    templateUrl: 'player.html',\n})\nexport class AddonModScormPlayerPage implements OnInit, OnDestroy {\n\n    title?: string; // Title.\n    scorm!: AddonModScormScorm; // The SCORM object.\n    showToc = false; // Whether to show the table of contents (TOC).\n    loadingToc = true; // Whether the TOC is being loaded.\n    toc: AddonModScormTOCScoWithIcon[] = []; // List of SCOs.\n    loaded = false; // Whether the data has been loaded.\n    previousSco?: AddonModScormScoWithData; // Previous SCO.\n    nextSco?: AddonModScormScoWithData; // Next SCO.\n    src?: string; // Iframe src.\n    errorMessage?: string; // Error message.\n    accessInfo?: AddonModScormGetScormAccessInformationWSResponse; // Access information.\n    scormWidth?: number; // Width applied to scorm iframe.\n    scormHeight?: number; // Height applied to scorm iframe.\n    incomplete = false; // Whether last attempt is incomplete.\n    cmId!: number; // Course module ID.\n    courseId!: number; // Course ID.\n\n    protected siteId!: string;\n    protected mode!: string; // Mode to play the SCORM.\n    protected moduleUrl!: string; // Module URL.\n    protected newAttempt = false; // Whether to start a new attempt.\n    protected organizationId?: string; // Organization ID to load.\n    protected attempt?: number; // The attempt number.\n    protected offline = false; // Whether it's offline mode.\n    protected userData?: AddonModScormUserDataMap; // User data.\n    protected initialScoId?: number; // Initial SCO ID to load.\n    protected currentSco?: AddonModScormScoWithData; // Current SCO.\n    protected dataModel?: AddonModScormDataModel12; // Data Model.\n    protected attemptToContinue?: number; // Attempt to continue (for the popover).\n\n    // Observers.\n    protected tocObserver?: CoreEventObserver;\n    protected launchNextObserver?: CoreEventObserver;\n    protected launchPrevObserver?: CoreEventObserver;\n    protected goOfflineObserver?: CoreEventObserver;\n\n    constructor(\n        protected mainMenuPage: CoreMainMenuPage,\n    ) {}\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        this.cmId = CoreNavigator.getRouteNumberParam('cmId')!;\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId')!;\n        this.mode = CoreNavigator.getRouteParam('mode') || AddonModScormProvider.MODENORMAL;\n        this.moduleUrl = CoreNavigator.getRouteParam('moduleUrl') || '';\n        this.newAttempt = !!CoreNavigator.getRouteBooleanParam('newAttempt');\n        this.organizationId = CoreNavigator.getRouteParam('organizationId');\n        this.initialScoId = CoreNavigator.getRouteNumberParam('scoId');\n        this.siteId = CoreSites.getCurrentSiteId();\n\n        try {\n            // Fetch the SCORM data.\n            await this.fetchData();\n\n            if (!this.currentSco) {\n                return;\n            }\n\n            // Set start time if it's a new attempt.\n            if (this.newAttempt) {\n                try {\n                    await this.setStartTime(this.currentSco.id);\n                } catch (error) {\n                    CoreDomUtils.instance.showErrorModalDefault(error, 'addon.mod_scorm.errorgetscorm', true);\n                }\n            }\n\n            // Load SCO.\n            this.loadSco(this.currentSco);\n        } finally {\n            this.loaded = true;\n        }\n\n    }\n\n    /**\n     * Initialize.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async initialize(): Promise<void> {\n        // Get the SCORM instance.\n        this.scorm = await AddonModScorm.getScorm(this.courseId, this.cmId, {\n            moduleUrl: this.moduleUrl,\n            readingStrategy: CoreSitesReadingStrategy.PREFER_CACHE,\n        });\n\n        // Block the SCORM so it cannot be synchronized.\n        CoreSync.blockOperation(AddonModScormProvider.COMPONENT, this.scorm.id, 'player');\n\n        // We use SCORM name at start, later we'll use the SCO title.\n        this.title = this.scorm.name;\n        this.showToc = AddonModScorm.displayTocInPlayer(this.scorm);\n\n        if (this.scorm.popup) {\n            this.mainMenuPage.changeVisibility(false);\n\n            // If we receive a value > 100 we assume it's a fixed pixel size.\n            if (this.scorm.width! > 100) {\n                this.scormWidth = this.scorm.width;\n\n                // Only get fixed size on height if width is also fixed.\n                if (this.scorm.height! > 100) {\n                    this.scormHeight = this.scorm.height;\n                }\n            }\n        }\n\n        // Listen for events to update the TOC, navigate through SCOs and go offline.\n        this.tocObserver = CoreEvents.on(AddonModScormProvider.UPDATE_TOC_EVENT, (data) => {\n            if (data.scormId !== this.scorm.id) {\n                return;\n            }\n\n            if (this.offline) {\n                // Wait a bit to make sure data is stored.\n                setTimeout(this.refreshToc.bind(this), 100);\n            } else {\n                this.refreshToc();\n            }\n        }, this.siteId);\n\n        this.launchNextObserver = CoreEvents.on(AddonModScormProvider.LAUNCH_NEXT_SCO_EVENT, (data) => {\n            if (data.scormId === this.scorm.id && this.nextSco) {\n                this.loadSco(this.nextSco);\n            }\n        }, this.siteId);\n\n        this.launchPrevObserver = CoreEvents.on(AddonModScormProvider.LAUNCH_PREV_SCO_EVENT, (data) => {\n            if (data.scormId === this.scorm.id && this.previousSco) {\n                this.loadSco(this.previousSco);\n            }\n        }, this.siteId);\n\n        this.goOfflineObserver = CoreEvents.on(AddonModScormProvider.GO_OFFLINE_EVENT, (data) => {\n            if (data.scormId !== this.scorm.id || this.offline) {\n                return;\n            }\n            this.offline = true;\n\n            // Wait a bit to prevent collisions between this store and SCORM API's store.\n            setTimeout(async () => {\n                try {\n                    AddonModScormHelper.convertAttemptToOffline(this.scorm, this.attempt!);\n                } catch (error) {\n                    CoreDomUtils.instance.showErrorModalDefault(error, 'core.error', true);\n                }\n\n                this.refreshToc();\n            }, 200);\n        }, this.siteId);\n    }\n\n    /**\n     * Calculate the next and previous SCO.\n     *\n     * @param scoId Current SCO ID.\n     */\n    protected calculateNextAndPreviousSco(scoId: number): void {\n        this.previousSco = AddonModScormHelper.getPreviousScoFromToc(this.toc, scoId);\n        this.nextSco = AddonModScormHelper.getNextScoFromToc(this.toc, scoId);\n    }\n\n    /**\n     * Determine the attempt to use, the mode (normal/preview) and if it's offline or online.\n     *\n     * @param attemptsData Attempts count.\n     * @return Promise resolved when done.\n     */\n    protected async determineAttemptAndMode(attemptsData: AddonModScormAttemptCountResult): Promise<void> {\n        const data = await AddonModScormHelper.determineAttemptToContinue(this.scorm, attemptsData);\n\n        let incomplete = false;\n        this.attempt = data.num;\n        this.offline = data.offline;\n\n        if (this.attempt != attemptsData.lastAttempt.num) {\n            this.attemptToContinue = this.attempt;\n        }\n\n        // Check if current attempt is incomplete.\n        if (this.attempt > 0) {\n            incomplete = await AddonModScorm.isAttemptIncomplete(this.scorm.id, this.attempt, {\n                offline: this.offline,\n                cmId: this.cmId,\n            });\n        }\n\n        // Determine mode and attempt to use.\n        const result = AddonModScorm.determineAttemptAndMode(this.scorm, this.mode, this.attempt, this.newAttempt, incomplete);\n\n        if (result.attempt > this.attempt) {\n            // We're creating a new attempt.\n            if (this.offline) {\n                // Last attempt was offline, so we'll create a new offline attempt.\n                await AddonModScormHelper.createOfflineAttempt(this.scorm, result.attempt, attemptsData.online.length);\n            } else {\n                try {\n                    // Last attempt was online, verify that we can create a new online attempt. We ignore cache.\n                    await AddonModScorm.getScormUserData(this.scorm.id, result.attempt, {\n                        cmId: this.cmId,\n                        readingStrategy: CoreSitesReadingStrategy.ONLY_NETWORK,\n                    });\n                } catch {\n                    // Cannot communicate with the server, create an offline attempt.\n                    this.offline = true;\n\n                    await AddonModScormHelper.createOfflineAttempt(this.scorm, result.attempt, attemptsData.online.length);\n                }\n            }\n        }\n\n        this.mode = result.mode;\n        this.newAttempt = result.newAttempt;\n        this.attempt = result.attempt;\n    }\n\n    /**\n     * Fetch data needed to play the SCORM.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchData(): Promise<void> {\n        if (!this.scorm) {\n            await this.initialize();\n        }\n\n        // Wait for any ongoing sync to finish. We won't sync a SCORM while it's being played.\n        await AddonModScormSync.waitForSync(this.scorm.id);\n\n        try {\n            // Get attempts data.\n            const attemptsData = await AddonModScorm.getAttemptCount(this.scorm.id, { cmId: this.cmId });\n\n            await this.determineAttemptAndMode(attemptsData);\n\n            const [data, accessInfo] = await Promise.all([\n                AddonModScorm.getScormUserData(this.scorm.id, this.attempt!, {\n                    cmId: this.cmId,\n                    offline: this.offline,\n                }),\n                AddonModScorm.getAccessInformation(this.scorm.id, {\n                    cmId: this.cmId,\n                }),\n                this.fetchToc(),\n            ]);\n\n            this.userData = data;\n            this.accessInfo = accessInfo;\n        } catch (error) {\n            CoreDomUtils.instance.showErrorModalDefault(error, 'addon.mod_scorm.errorgetscorm', true);\n        }\n    }\n\n    /**\n     * Fetch the TOC.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchToc(): Promise<void> {\n        this.loadingToc = true;\n\n        try {\n            // We need to check incomplete again: attempt number or status might have changed.\n            this.incomplete = await AddonModScorm.isAttemptIncomplete(this.scorm.id, this.attempt!, {\n                offline: this.offline,\n                cmId: this.cmId,\n            });\n\n            // Get TOC.\n            this.toc = await AddonModScormHelper.getToc(this.scorm.id, this.attempt!, this.incomplete, {\n                organization: this.organizationId,\n                offline: this.offline,\n                cmId: this.cmId,\n            });\n\n            if (this.currentSco) {\n                return;\n            }\n\n            if (this.newAttempt) {\n                // Creating a new attempt, use the first SCO defined by the SCORM.\n                this.initialScoId = this.scorm.launch;\n            }\n\n            // Determine current SCO if we received an ID.\n            if (this.initialScoId && this.initialScoId > 0) {\n                // SCO set by parameter, get it from TOC.\n                this.currentSco = AddonModScormHelper.getScoFromToc(this.toc, this.initialScoId);\n            }\n\n            if (this.currentSco) {\n                return;\n            }\n\n            // No SCO defined. Get the first valid one.\n            const sco = await AddonModScormHelper.getFirstSco(this.scorm.id, this.attempt!, {\n                toc: this.toc,\n                organization: this.organizationId,\n                mode: this.mode,\n                offline: this.offline,\n                cmId: this.cmId,\n            });\n\n            if (sco) {\n                this.currentSco = sco;\n            } else {\n                // We couldn't find a SCO to load: they're all inactive or without launch URL.\n                this.errorMessage = 'addon.mod_scorm.errornovalidsco';\n            }\n        } finally {\n            this.loadingToc = false;\n        }\n    }\n\n    /**\n     * Load a SCO.\n     *\n     * @param sco The SCO to load.\n     * @return Promise resolved when done.\n     */\n    async loadSco(sco: AddonModScormScoWithData): Promise<void> {\n        if (!this.dataModel) {\n            // Create the model.\n            this.dataModel = new AddonModScormDataModel12(\n                this.siteId,\n                this.scorm,\n                sco.id,\n                this.attempt!,\n                this.userData!,\n                this.mode,\n                this.offline,\n            );\n\n            // Add the model to the window so the SCORM can access it.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (<any> window).API = this.dataModel;\n        } else {\n            // Load the SCO in the existing model.\n            this.dataModel.loadSco(sco.id);\n        }\n\n        this.currentSco = sco;\n        this.title = sco.title || this.scorm.name; // Try to use SCO title.\n\n        this.calculateNextAndPreviousSco(sco.id);\n\n        // Load the SCO source.\n        this.loadScoSrc(sco);\n\n        if (sco.scormtype == 'asset') {\n            // Mark the asset as completed.\n            this.markCompleted(sco);\n        }\n\n        // Trigger SCO launch event.\n        CoreUtils.ignoreErrors(AddonModScorm.logLaunchSco(this.scorm.id, sco.id, this.scorm.name));\n    }\n\n    /**\n     * Load SCO src.\n     *\n     * @param sco SCO to load.\n     * @return Promise resolved when done.\n     */\n    protected async loadScoSrc(sco: AddonModScormScoWithData): Promise<void> {\n        const src = await AddonModScorm.getScoSrc(this.scorm, sco);\n\n        if (src == this.src) {\n            // Re-loading same page. Set it to empty and then re-set the src in the next digest so it detects it has changed.\n            this.src = '';\n\n            await CoreUtils.nextTick();\n        }\n\n        this.src = src;\n    }\n\n    /**\n     * Given an SCO, mark it as completed.\n     *\n     * @param sco SCO to mark.\n     * @return Promise resolved when done.\n     */\n    protected async markCompleted(sco: AddonModScormScoWithData): Promise<void> {\n        const tracks = [{\n            element: 'cmi.core.lesson_status',\n            value: 'completed',\n        }];\n\n        try {\n            AddonModScorm.saveTracks(sco.id, this.attempt!, tracks, this.scorm, this.offline);\n        } catch {\n            // Error saving data. Go offline if needed.\n            if (this.offline) {\n                return;\n            }\n\n            const data = await AddonModScorm.getScormUserData(this.scorm.id, this.attempt!, {\n                cmId: this.cmId,\n            });\n\n            if (data[sco.id] && data[sco.id].userdata['cmi.core.lesson_status'] == 'completed') {\n                // Already marked as completed.\n                return;\n            }\n\n            try {\n                // Go offline.\n                await AddonModScormHelper.convertAttemptToOffline(this.scorm, this.attempt!);\n\n                this.offline = true;\n                this.dataModel?.setOffline(true);\n\n                await AddonModScorm.saveTracks(sco.id, this.attempt!, tracks, this.scorm, true);\n            } catch (error) {\n                CoreDomUtils.instance.showErrorModalDefault(error, 'core.error', true);\n            }\n        } finally {\n            // Refresh TOC, some prerequisites might have changed.\n            this.refreshToc();\n        }\n    }\n\n    /**\n     * Show the TOC.\n     */\n    async openToc(): Promise<void> {\n        const modalData = await CoreDomUtils.openSideModal<AddonModScormScoWithData>({\n            component: AddonModScormTocComponent,\n            componentProps: {\n                toc: this.toc,\n                attemptToContinue: this.attemptToContinue,\n                selected: this.currentSco && this.currentSco.id,\n                moduleId: this.cmId,\n                courseId: this.courseId,\n                accessInfo: this.accessInfo,\n                mode: this.mode,\n            },\n        });\n\n        if (modalData) {\n            this.loadSco(modalData);\n        }\n    }\n\n    /**\n     * Refresh the TOC.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async refreshToc(): Promise<void> {\n        try {\n            await CoreUtils.ignoreErrors(AddonModScorm.invalidateAllScormData(this.scorm.id));\n\n            await this.fetchToc();\n        } catch (error) {\n            CoreDomUtils.instance.showErrorModalDefault(error, 'addon.mod_scorm.errorgetscorm', true);\n        }\n    }\n\n    /**\n     * Set SCORM start time.\n     *\n     * @param scoId SCO ID.\n     * @return Promise resolved when done.\n     */\n    protected async setStartTime(scoId: number): Promise<void> {\n        const tracks = [{\n            element: 'x.start.time',\n            value: String(CoreTimeUtils.timestamp()),\n        }];\n\n        await AddonModScorm.saveTracks(scoId, this.attempt!, tracks, this.scorm, this.offline);\n\n        if (this.offline) {\n            return;\n        }\n\n        // New online attempt created, update cached data about online attempts.\n        await CoreUtils.ignoreErrors(AddonModScorm.getAttemptCount(this.scorm.id, {\n            cmId: this.cmId,\n            readingStrategy: CoreSitesReadingStrategy.ONLY_NETWORK,\n        }));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ionViewDidEnter(): void {\n        if (this.scorm && this.scorm.popup) {\n            this.mainMenuPage.changeVisibility(false);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ionViewWillLeave(): void {\n        this.mainMenuPage.changeVisibility(true);\n    }\n\n    /**\n     * Component being destroyed.\n     */\n    ngOnDestroy(): void {\n        // Empty src when leaving the state so unload event is triggered in the iframe.\n        this.src = '';\n        CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: 'scorm' });\n\n        // Stop listening for events.\n        this.tocObserver?.off();\n        this.launchNextObserver?.off();\n        this.launchPrevObserver?.off();\n        setTimeout(() => {\n            this.goOfflineObserver?.off();\n        }, 500);\n\n        // Unblock the SCORM so it can be synced.\n        CoreSync.unblockOperation(AddonModScormProvider.COMPONENT, this.scorm.id, 'player');\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonModScormComponentsModule } from './components/components.module';\nimport { AddonModScormIndexPage } from './pages/index/index';\nimport { AddonModScormPlayerPage } from './pages/player/player';\n\nconst routes: Routes = [\n    {\n        path: ':courseId/:cmId',\n        component: AddonModScormIndexPage,\n    },\n    {\n        path: ':courseId/:cmId/player',\n        component: AddonModScormPlayerPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        AddonModScormComponentsModule,\n    ],\n    declarations: [\n        AddonModScormIndexPage,\n        AddonModScormPlayerPage,\n    ],\n})\nexport class AddonModScormLazyModule {}\n"],"sourceRoot":"webpack:///"}