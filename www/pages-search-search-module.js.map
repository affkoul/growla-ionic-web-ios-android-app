{"version":3,"sources":["./src/addons/messages/pages/search/search.html","./src/core/features/courses/pages/search/search.html","./src/addons/messages/pages/search/search.module.ts","./src/addons/messages/pages/search/search.page.ts","./src/core/features/courses/pages/search/search.module.ts","./src/core/features/courses/pages/search/search.ts"],"names":[],"mappings":"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","file":"pages-search-search-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>{{ 'addon.messages.searchcombined' | translate }}</h1>\\n        <ion-buttons slot=\\\"end\\\">\\n            <!-- Add an empty context menu so discussion page can add items in split view,\\n                otherwise the menu disappears in some cases. -->\\n            <core-context-menu></core-context-menu>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <core-split-view>\\n        <core-search-box (onSubmit)=\\\"search($event)\\\" (onClear)=\\\"clearSearch()\\\" [disabled]=\\\"disableSearch\\\" autocorrect=\\\"off\\\"\\n            [spellcheck]=\\\"false\\\" [autoFocus]=\\\"true\\\" [lengthCheck]=\\\"1\\\" searchArea=\\\"AddonMessagesSearch\\\"></core-search-box>\\n\\n        <core-loading [hideUntil]=\\\"!displaySearching\\\" [message]=\\\"'core.searching' | translate\\\">\\n            <ion-list *ngIf=\\\"displayResults\\\">\\n                <ng-container *ngTemplateOutlet=\\\"resultsTemplate; context: {item: contacts}\\\"></ng-container>\\n                <ng-container *ngTemplateOutlet=\\\"resultsTemplate; context: {item: nonContacts}\\\"></ng-container>\\n                <ng-container *ngTemplateOutlet=\\\"resultsTemplate; context: {item: messages}\\\"></ng-container>\\n                <!-- The infinite loading cannot be inside the ng-template, it fails because it doesn't find ion-content. -->\\n                <core-infinite-loading [enabled]=\\\"messages.canLoadMore\\\" (action)=\\\"search(query, 'messages', $event)\\\"\\n                    [error]=\\\"messages.loadMoreError\\\"></core-infinite-loading>\\n            </ion-list>\\n\\n            <core-empty-box\\n                *ngIf=\\\"displayResults && !contacts.results.length && !nonContacts.results.length && !messages.results.length\\\"\\n                icon=\\\"fas-search\\\" [message]=\\\"'core.noresults' | translate\\\">\\n            </core-empty-box>\\n        </core-loading>\\n    </core-split-view>\\n</ion-content>\\n\\n<!-- Template to render a list of results -->\\n<ng-template #resultsTemplate let-item=\\\"item\\\">\\n    <ng-container *ngIf=\\\"item.results.length > 0\\\">\\n        <ion-item-divider class=\\\"ion-text-wrap\\\">\\n            <ion-label><h2>{{ item.titleString | translate }}</h2></ion-label>\\n        </ion-item-divider>\\n\\n        <!-- List of results -->\\n        <ion-item class=\\\"addon-message-discussion ion-text-wrap\\\" *ngFor=\\\"let result of item.results\\\" [attr.aria-label]=\\\"result.fullname\\\"\\n            (click)=\\\"openConversation(result)\\\" [attr.aria-current]=\\\"result == selectedResult ? 'page' : 'false'\\\" detail=\\\"true\\\"\\n            button>\\n            <core-user-avatar slot=\\\"start\\\" [user]=\\\"result\\\" [checkOnline]=\\\"true\\\" [linkProfile]=\\\"false\\\"></core-user-avatar>\\n            <ion-label>\\n                <p class=\\\"item-heading\\\">\\n                    <core-format-text [text]=\\\"result.fullname\\\" [highlight]=\\\"result.highlightName\\\" [filter]=\\\"false\\\">\\n                    </core-format-text>\\n                    <ion-icon name=\\\"fas-ban\\\" *ngIf=\\\"result.isblocked\\\"\\n                        [attr.aria-label]=\\\"'addon.messages.contactblocked' | translate\\\">\\n                    </ion-icon>\\n                </p>\\n                <ion-note *ngIf=\\\"result.lastmessagedate > 0\\\">\\n                    {{result.lastmessagedate | coreDateDayOrTime}}\\n                </ion-note>\\n                <p class=\\\"addon-message-last-message\\\">\\n                    <span *ngIf=\\\"result.sentfromcurrentuser\\\" class=\\\"addon-message-last-message-user\\\">\\n                        {{ 'addon.messages.you' | translate }}\\n                    </span>\\n                    <core-format-text clean=\\\"true\\\" singleLine=\\\"true\\\" [text]=\\\"result.lastmessage\\\"\\n                        [highlight]=\\\"result.highlightMessage\\\" contextLevel=\\\"system\\\" [contextInstanceId]=\\\"0\\\"\\n                        class=\\\"addon-message-last-message-text\\\"></core-format-text>\\n                </p>\\n            </ion-label>\\n        </ion-item>\\n\\n        <!-- Load more button for contacts and non-contacts -->\\n        <ng-container *ngIf=\\\"item.type != 'messages'\\\">\\n            <div class=\\\"ion-padding-horizontal\\\" *ngIf=\\\"item.canLoadMore && !item.loadingMore\\\">\\n                <ion-button expand=\\\"block\\\" color=\\\"light\\\" (click)=\\\"search(query, item.type)\\\">\\n                    {{ 'core.loadmore' | translate }}\\n                </ion-button>\\n            </div>\\n            <div *ngIf=\\\"item.loadingMore\\\" class=\\\"ion-padding ion-text-center\\\">\\n                <ion-spinner [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner>\\n            </div>\\n        </ng-container>\\n    </ng-container>\\n</ng-template>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>{{ 'core.courses.searchcourses' | translate }}</h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <core-search-box (onSubmit)=\\\"search($event)\\\" (onClear)=\\\"clearSearch()\\\"\\n    [placeholder]=\\\"'core.courses.search' | translate\\\" [searchLabel]=\\\"'core.courses.search' | translate\\\" autoFocus=\\\"true\\\"\\n    searchArea=\\\"CoreCoursesSearch\\\"></core-search-box>\\n\\n    <ng-container *ngIf=\\\"total > 0\\\">\\n        <ion-item-divider>\\n            <ion-label><h2>{{ 'core.courses.totalcoursesearchresults' | translate:{$a: total} }}</h2></ion-label>\\n        </ion-item-divider>\\n        <core-courses-course-list-item *ngFor=\\\"let course of courses\\\" [course]=\\\"course\\\"></core-courses-course-list-item>\\n        <core-infinite-loading [enabled]=\\\"canLoadMore\\\" (action)=\\\"loadMoreResults($event)\\\" [error]=\\\"loadMoreError\\\">\\n        </core-infinite-loading>\\n    </ng-container>\\n    <core-empty-box *ngIf=\\\"total == 0\\\" icon=\\\"search\\\" [message]=\\\"'core.courses.nosearchresults' | translate\\\"></core-empty-box>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CoreScreen } from '@services/screen';\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { AddonMessagesDiscussionRoute } from '@addons/messages/messages-lazy.module';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreSearchComponentsModule } from '@features/search/components/components.module';\n\nimport { AddonMessagesSearchPage } from './search.page';\n\nconst mobileRoutes: Routes = [\n    {\n        path: '',\n        component: AddonMessagesSearchPage,\n    },\n    AddonMessagesDiscussionRoute,\n];\n\nconst tabletRoutes: Routes = [\n    {\n        path: '',\n        component: AddonMessagesSearchPage,\n        children: [\n            AddonMessagesDiscussionRoute,\n        ],\n    },\n];\n\nconst routes: Routes = [\n    ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\n    ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreSearchComponentsModule,\n    ],\n    declarations: [\n        AddonMessagesSearchPage,\n    ],\n    exports: [RouterModule],\n})\nexport class AddonMessagesSearchPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy } from '@angular/core';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport {\n    AddonMessagesProvider,\n    AddonMessagesConversationMember,\n    AddonMessagesMessageAreaContact,\n    AddonMessages,\n} from '../../services/messages';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreApp } from '@services/app';\nimport { CoreNavigator } from '@services/navigator';\nimport { Params } from '@angular/router';\nimport { CoreScreen } from '@services/screen';\n\n/**\n * Page for searching users.\n */\n@Component({\n    selector: 'page-addon-messages-search',\n    templateUrl: 'search.html',\n})\nexport class AddonMessagesSearchPage implements OnDestroy {\n\n    disableSearch = false;\n    displaySearching = false;\n    displayResults = false;\n    query = '';\n    contacts: AddonMessagesSearchResults = {\n        type: 'contacts',\n        titleString: 'addon.messages.contacts',\n        results: [],\n        canLoadMore: false,\n        loadingMore: false,\n    };\n\n    nonContacts: AddonMessagesSearchResults = {\n        type: 'noncontacts',\n        titleString: 'addon.messages.noncontacts',\n        results: [],\n        canLoadMore: false,\n        loadingMore: false,\n    };\n\n    messages: AddonMessagesSearchMessageResults = {\n        type: 'messages',\n        titleString: 'addon.messages.messages',\n        results: [],\n        canLoadMore: false,\n        loadingMore: false,\n        loadMoreError: false,\n    };\n\n    selectedResult?: AddonMessagesConversationMember | AddonMessagesMessageAreaContact;\n\n    protected memberInfoObserver: CoreEventObserver;\n\n    constructor() {\n        // Update block status of a user.\n        this.memberInfoObserver = CoreEvents.on(\n            AddonMessagesProvider.MEMBER_INFO_CHANGED_EVENT,\n            (data) => {\n                if (!data.userBlocked && !data.userUnblocked) {\n                    // The block status has not changed, ignore.\n                    return;\n                }\n\n                const contact = this.contacts.results.find((user) => user.id == data.userId);\n                if (contact) {\n                    contact.isblocked = !!data.userBlocked;\n                } else {\n                    const nonContact = this.nonContacts.results.find((user) => user.id == data.userId);\n                    if (nonContact) {\n                        nonContact.isblocked = !!data.userBlocked;\n                    }\n                }\n\n                this.messages.results.forEach((message: AddonMessagesMessageAreaContact): void => {\n                    if (message.userid == data.userId) {\n                        message.isblocked = !!data.userBlocked;\n                    }\n                });\n            },\n            CoreSites.getCurrentSiteId(),\n        );\n    }\n\n    /**\n     * Clear search.\n     */\n    clearSearch(): void {\n        this.query = '';\n        this.displayResults = false;\n\n        // Empty details.\n        const splitViewLoaded = CoreNavigator.isCurrentPathInTablet('**/messages/search/discussion');\n        if (splitViewLoaded) {\n            CoreNavigator.navigate('../');\n        }\n    }\n\n    /**\n     * Start a new search or load more results.\n     *\n     * @param query Text to search for.\n     * @param loadMore Load more contacts, noncontacts or messages. If undefined, start a new search.\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     * @return Resolved when done.\n     */\n    async search(query: string, loadMore?: 'contacts' | 'noncontacts' | 'messages', infiniteComplete?: () => void): Promise<void> {\n        CoreApp.closeKeyboard();\n\n        this.query = query;\n        this.disableSearch = true;\n        this.displaySearching = !loadMore;\n\n        const promises: Promise<void>[] = [];\n        let newContacts: AddonMessagesConversationMember[] = [];\n        let newNonContacts: AddonMessagesConversationMember[] = [];\n        let newMessages: AddonMessagesMessageAreaContact[] = [];\n        let canLoadMoreContacts = false;\n        let canLoadMoreNonContacts = false;\n        let canLoadMoreMessages = false;\n\n        if (!loadMore || loadMore == 'contacts' || loadMore == 'noncontacts') {\n            const limitNum = loadMore ? AddonMessagesProvider.LIMIT_SEARCH : AddonMessagesProvider.LIMIT_INITIAL_USER_SEARCH;\n            let limitFrom = 0;\n            if (loadMore == 'contacts') {\n                limitFrom = this.contacts.results.length;\n                this.contacts.loadingMore = true;\n            } else if (loadMore == 'noncontacts') {\n                limitFrom = this.nonContacts.results.length;\n                this.nonContacts.loadingMore = true;\n            }\n\n            promises.push(\n                AddonMessages.searchUsers(query, limitFrom, limitNum).then((result) => {\n                    if (!loadMore || loadMore == 'contacts') {\n                        newContacts = result.contacts;\n                        canLoadMoreContacts = result.canLoadMoreContacts;\n                    }\n                    if (!loadMore || loadMore == 'noncontacts') {\n                        newNonContacts = result.nonContacts;\n                        canLoadMoreNonContacts = result.canLoadMoreNonContacts;\n                    }\n\n                    return;\n                }),\n            );\n        }\n\n        if (!loadMore || loadMore == 'messages') {\n            let limitFrom = 0;\n            if (loadMore == 'messages') {\n                limitFrom = this.messages.results.length;\n                this.messages.loadingMore = true;\n            }\n\n            promises.push(\n                AddonMessages.searchMessages(query, undefined, limitFrom).then((result) => {\n                    newMessages = result.messages;\n                    canLoadMoreMessages = result.canLoadMore;\n\n                    return;\n                }),\n            );\n        }\n\n        try {\n            await Promise.all(promises);\n            if (!loadMore) {\n                this.contacts.results = [];\n                this.nonContacts.results = [];\n                this.messages.results = [];\n            }\n\n            this.displayResults = true;\n\n            if (!loadMore || loadMore == 'contacts') {\n                this.contacts.results.push(...newContacts);\n                this.contacts.canLoadMore = canLoadMoreContacts;\n                this.setHighlight(newContacts, true);\n            }\n\n            if (!loadMore || loadMore == 'noncontacts') {\n                this.nonContacts.results.push(...newNonContacts);\n                this.nonContacts.canLoadMore = canLoadMoreNonContacts;\n                this.setHighlight(newNonContacts, true);\n            }\n\n            if (!loadMore || loadMore == 'messages') {\n                this.messages.results.push(...newMessages);\n                this.messages.canLoadMore = canLoadMoreMessages;\n                this.messages.loadMoreError = false;\n                this.setHighlight(newMessages, false);\n            }\n\n            if (!loadMore) {\n                if (this.contacts.results.length > 0) {\n                    this.openConversation(this.contacts.results[0], true);\n                } else if (this.nonContacts.results.length > 0) {\n                    this.openConversation(this.nonContacts.results[0], true);\n                } else if (this.messages.results.length > 0) {\n                    this.openConversation(this.messages.results[0], true);\n                }\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingusers', true);\n\n            if (loadMore == 'messages') {\n                this.messages.loadMoreError = true;\n            }\n        } finally {\n            this.disableSearch = false;\n            this.displaySearching = false;\n\n            if (loadMore == 'contacts') {\n                this.contacts.loadingMore = false;\n            } else if (loadMore == 'noncontacts') {\n                this.nonContacts.loadingMore = false;\n            } else if (loadMore == 'messages') {\n                this.messages.loadingMore = false;\n            }\n\n            infiniteComplete && infiniteComplete();\n        }\n    }\n\n    /**\n     * Open a conversation in the split view.\n     *\n     * @param result User or message.\n     * @param onInit Whether the tser was selected on initial load.\n     */\n    openConversation(result: AddonMessagesConversationMember | AddonMessagesMessageAreaContact, onInit: boolean = false): void {\n        if (!onInit || CoreScreen.isTablet) {\n            this.selectedResult = result;\n\n            const params: Params = {};\n            if ('conversationid' in result) {\n                params.conversationId = result.conversationid;\n            } else {\n                params.userId = result.id;\n            }\n\n            const splitViewLoaded = CoreNavigator.isCurrentPathInTablet('**/messages/search/discussion');\n            const path = (splitViewLoaded ? '../' : '') + 'discussion';\n            CoreNavigator.navigate(path, { params });\n        }\n    }\n\n    /**\n     * Set the highlight values for each entry.\n     *\n     * @param results Results to highlight.\n     * @param isUser Whether the results are from a user search or from a message search.\n     */\n    setHighlight(\n        results: (AddonMessagesConversationMemberWithHighlight | AddonMessagesMessageAreaContactWithHighlight)[],\n        isUser = false,\n    ): void {\n        results.forEach((result) => {\n            result.highlightName = isUser ? this.query : undefined;\n            result.highlightMessage = !isUser ? this.query : undefined;\n        });\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.memberInfoObserver?.off();\n    }\n\n}\n\ntype AddonMessagesSearchResults = {\n    type: string;\n    titleString: string;\n    results: AddonMessagesConversationMemberWithHighlight[];\n    canLoadMore: boolean;\n    loadingMore: boolean;\n};\n\ntype AddonMessagesSearchMessageResults = {\n    type: string;\n    titleString: string;\n    results: AddonMessagesMessageAreaContactWithHighlight[];\n    canLoadMore: boolean;\n    loadingMore: boolean;\n    loadMoreError: boolean;\n};\n\ntype AddonMessagesSearchResultHighlight = {\n    highlightName?: string;\n    highlightMessage?: string;\n};\n\ntype AddonMessagesConversationMemberWithHighlight = AddonMessagesConversationMember & AddonMessagesSearchResultHighlight;\ntype AddonMessagesMessageAreaContactWithHighlight = AddonMessagesMessageAreaContact & AddonMessagesSearchResultHighlight;\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreCoursesComponentsModule } from '../../components/components.module';\nimport { CoreSearchComponentsModule } from '@features/search/components/components.module';\n\nimport { CoreCoursesSearchPage } from './search';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreCoursesSearchPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreCoursesComponentsModule,\n        CoreSearchComponentsModule,\n    ],\n    declarations: [\n        CoreCoursesSearchPage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreCoursesSearchPageModule { }\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreCourseBasicSearchedData, CoreCourses } from '../../services/courses';\n\n/**\n * Page that allows searching for courses.\n */\n@Component({\n    selector: 'page-core-courses-search',\n    templateUrl: 'search.html',\n})\nexport class CoreCoursesSearchPage {\n\n    total = 0;\n    courses: CoreCourseBasicSearchedData[] = [];\n    canLoadMore = false;\n    loadMoreError = false;\n\n    protected page = 0;\n    protected currentSearch = '';\n\n    /**\n     * Search a new text.\n     *\n     * @param text The text to search.\n     */\n    async search(text: string): Promise<void> {\n        this.currentSearch = text;\n        this.courses = [];\n        this.page = 0;\n        this.total = 0;\n\n        const modal = await CoreDomUtils.showModalLoading('core.searching', true);\n        this.searchCourses().finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * Clear search box.\n     */\n    clearSearch(): void {\n        this.currentSearch = '';\n        this.courses = [];\n        this.page = 0;\n        this.total = 0;\n    }\n\n    /**\n     * Load more results.\n     *\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     */\n    loadMoreResults(infiniteComplete?: () => void ): void {\n        this.searchCourses().finally(() => {\n            infiniteComplete && infiniteComplete();\n        });\n    }\n\n    /**\n     * Search courses or load the next page of current search.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async searchCourses(): Promise<void> {\n        this.loadMoreError = false;\n\n        try {\n            const response = await CoreCourses.search(this.currentSearch, this.page);\n\n            if (this.page === 0) {\n                this.courses = response.courses;\n            } else {\n                this.courses = this.courses.concat(response.courses);\n            }\n            this.total = response.total;\n\n            this.page++;\n            this.canLoadMore = this.courses.length < this.total;\n        } catch (error) {\n            this.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n            CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorsearching', true);\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}