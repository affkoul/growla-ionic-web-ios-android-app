{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Device\n * @premier device\n * @description\n * Access information about the underlying device and platform.\n *\n * @usage\n * ```typescript\n * import { Device } from '@ionic-native/device/ngx';\n *\n * constructor(private device: Device) { }\n *\n * ...\n *\n * console.log('Device UUID is: ' + this.device.uuid);\n * ```\n */\nexport declare class Device extends IonicNativePlugin {\n    /** Get the version of Cordova running on the device. */\n    cordova: string;\n    /**\n     * The device.model returns the name of the device's model or product. The value is set\n     * by the device manufacturer and may be different across versions of the same product.\n     */\n    model: string;\n    /** Get the device's operating system name. */\n    platform: string;\n    /** Get the device's Universally Unique Identifier (UUID). */\n    uuid: string;\n    /** Get the operating system version. */\n    version: string;\n    /** Get the device's manufacturer. */\n    manufacturer: string;\n    /** Whether the device is running on a simulator. */\n    isVirtual: boolean;\n    /** Get the device hardware serial number. */\n    serial: string;\n}\n"]}