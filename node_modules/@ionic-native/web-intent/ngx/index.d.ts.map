{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nexport interface IntentClipItem {\n    uri: string;\n    type?: string;\n    extension?: string;\n}\nexport interface Intent {\n    action: string;\n    clipItems: IntentClipItem[];\n    component: string;\n    extras: object;\n    flags: number;\n    type: string;\n}\nexport interface RegisterBroadcastReceiverOptions {\n    filterActions?: string[];\n    filterCategories?: string[];\n    filterDataSchemes?: string[];\n}\nexport interface IntentOptions {\n    requestCode?: number;\n    type?: string;\n    package?: string;\n    url?: string;\n    extras?: object;\n    action?: string;\n    component?: {\n        package: string;\n        class: string;\n    };\n    flags?: number[];\n}\n/**\n * @name Web Intent\n * @description\n * This Plugin provides a general purpose shim layer for the Android intent mechanism, exposing various ways to handle sending and receiving intents.\n * @usage\n * For usage information please refer to the plugin's Github repo.\n *\n * ```typescript\n * import { WebIntent } from '@ionic-native/web-intent/ngx';\n *\n * constructor(private webIntent: WebIntent) { }\n *\n * ...\n *\n * const options = {\n *   action: this.webIntent.ACTION_VIEW,\n *   url: 'path/to/file',\n *   type: 'application/vnd.android.package-archive'\n * }\n *\n * this.webIntent.startActivity(options).then(onSuccess, onError);\n *\n * ```\n * @interfaces\n * IntentOptions\n */\nexport declare class WebIntent extends IonicNativePlugin {\n    /**\n     * Convenience constant for actions\n     * @type {string}\n     */\n    ACTION_SEND: string;\n    /**\n     * Convenience constant for actions\n     * @type {string}\n     */\n    ACTION_VIEW: string;\n    /**\n     * Convenience constant for extras\n     * @type {string}\n     */\n    EXTRA_TEXT: string;\n    /**\n     * Convenience constant for extras\n     * @type {string}\n     */\n    EXTRA_SUBJECT: string;\n    /**\n     * Convenience constant for extras\n     * @type {string}\n     */\n    EXTRA_STREAM: string;\n    /**\n     * Convenience constant for extras\n     * @type {string}\n     */\n    EXTRA_EMAIL: string;\n    /**\n     * Convenience constant for actions\n     * @type {string}\n     */\n    ACTION_CALL: string;\n    /**\n     * Convenience constant for actions\n     * @type {string}\n     */\n    ACTION_SENDTO: string;\n    /**\n     * Convenience constant for actions\n     * @type {string}\n     */\n    ACTION_GET_CONTENT: string;\n    /**\n     * Convenience constant for actions\n     * @type {string}\n     */\n    ACTION_PICK: string;\n    /**\n     * Convenience constant for actions\n     * @type {string}\n     */\n    ACTION_INSTALL_PACKAGE: string;\n    /**\n     * Convenience constant for actions\n     * @type {string}\n     */\n    ACTION_UNINSTALL_PACKAGE: string;\n    /**\n     * Launches an Android intent\n     * @param options {IntentOptions}\n     * @returns {Promise<any>}\n     */\n    startActivity(options: IntentOptions): Promise<any>;\n    /**\n     * Starts a new activity and return the result to the application\n     * @param options {IntentOptions}\n     * @returns {Promise<any>}\n     */\n    startActivityForResult(options: IntentOptions): Promise<any>;\n    /**\n     * Checks if this app was invoked with specified extra\n     * @param extra {string}\n     * @returns {Promise<any>}\n     */\n    hasExtra(extra: string): Promise<any>;\n    /**\n     * Gets the extra that this app was invoked with\n     * @param extra {string}\n     * @returns {Promise<any>}\n     */\n    getExtra(extra: string): Promise<any>;\n    /**\n     * Gets the Uri the app was invoked with\n     * @returns {Promise<any>}\n     */\n    getUri(): Promise<string>;\n    /**\n     * Returns the content of the intent used whenever the application activity is launched\n     * @returns {Observable<Intent>}\n     */\n    onIntent(): Observable<Intent>;\n    /**\n     * Sends a custom intent passing optional extras\n     * @param options {IntentOptions}\n     * @returns {Promise<any>}\n     */\n    sendBroadcast(options: IntentOptions): Promise<any>;\n    /**\n     * Request that a given application service be started\n     * @param options {IntentOptions}\n     * @returns {Promise<any>}\n     */\n    startService(options: IntentOptions): Promise<any>;\n    /**\n     * Registers a broadcast receiver for the specified filters\n     * @param filters {RegisterBroadcastReceiverOptions}\n     * @returns {Observable<any>}\n     */\n    registerBroadcastReceiver(filters: RegisterBroadcastReceiverOptions): Observable<any>;\n    /**\n     * Unregisters a broadcast receiver\n     */\n    unregisterBroadcastReceiver(): void;\n    /**\n     *\n     */\n    onActivityResult(): void;\n    /**\n     * @returns {Promise<any>}\n     */\n    getIntent(): Promise<Intent>;\n    /**\n     * Send a result back to the Intent that started this Activity.\n     * The data can be passed using 'extras'.\n     * @returns {Promise<any>}\n     */\n    sendResult({ extras: {} }: {\n        extras: {};\n    }): Promise<any>;\n}\n"]}