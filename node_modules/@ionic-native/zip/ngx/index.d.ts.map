{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Zip\n * @description\n * A Cordova plugin to unzip files in Android and iOS.\n *\n * @usage\n * ```typescript\n * import { Zip } from '@ionic-native/zip/ngx';\n *\n * constructor(private zip: Zip) { }\n *\n * ...\n *\n * this.zip.unzip('path/to/source.zip', 'path/to/dest', (progress) => console.log('Unzipping, ' + Math.round((progress.loaded / progress.total) * 100) + '%'))\n *  .then((result) => {\n *    if(result === 0) console.log('SUCCESS');\n *    if(result === -1) console.log('FAILED');\n *  });\n *\n * ```\n */\nexport declare class Zip extends IonicNativePlugin {\n    /**\n     * Extracts files from a ZIP archive\n     * @param sourceZip {string} Source ZIP file\n     * @param destUrl {string} Destination folder\n     * @param onProgress {Function} optional callback to be called on progress update\n     * @returns {Promise<number>} returns a promise that resolves with a number. 0 is success, -1 is error\n     */\n    unzip(sourceZip: string, destUrl: string, onProgress?: Function): Promise<number>;\n}\n"]}