import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
import * as ɵngcc0 from '@angular/core';
var Zip = /** @class */ (function (_super) {
    __extends(Zip, _super);
    function Zip() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Zip.prototype.unzip = function (sourceZip, destUrl, onProgress) { return cordova(this, "unzip", { "successIndex": 2, "errorIndex": 4 }, arguments); };
    Zip.pluginName = "Zip";
    Zip.plugin = "cordova-plugin-zip";
    Zip.pluginRef = "zip";
    Zip.repo = "https://github.com/MobileChromeApps/cordova-plugin-zip";
    Zip.platforms = ["Android", "iOS"];
Zip.ɵfac = function Zip_Factory(t) { return ɵZip_BaseFactory(t || Zip); };
Zip.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Zip, factory: function (t) { return Zip.ɵfac(t); } });
var ɵZip_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(Zip);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Zip, [{
        type: Injectable
    }], null, null); })();
    return Zip;
}(IonicNativePlugin));
export { Zip };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvemlwL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztBQUN4RTtBQUlXLElBMEJjLHVCQUFpQjtBQUFDO0FBRTlCO0FBRWI7QUFBTSxJQVFKLG1CQUFLLGFBQUMsU0FBaUIsRUFBRSxPQUFlLEVBQUUsVUFBcUI7QUFJZjtBQUE0QjtBQUF1QztBQUEyQjtBQUF5RTt1Q0FqQnhOLFVBQVU7Ozs7OzBCQUNMO0FBQUMsY0FoQ1A7QUFBRSxFQWdDdUIsaUJBQWlCO0FBQ3pDLFNBRFksR0FBRztBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgWmlwXG4gKiBAZGVzY3JpcHRpb25cbiAqIEEgQ29yZG92YSBwbHVnaW4gdG8gdW56aXAgZmlsZXMgaW4gQW5kcm9pZCBhbmQgaU9TLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgWmlwIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS96aXAvbmd4JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHppcDogWmlwKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLnppcC51bnppcCgncGF0aC90by9zb3VyY2UuemlwJywgJ3BhdGgvdG8vZGVzdCcsIChwcm9ncmVzcykgPT4gY29uc29sZS5sb2coJ1VuemlwcGluZywgJyArIE1hdGgucm91bmQoKHByb2dyZXNzLmxvYWRlZCAvIHByb2dyZXNzLnRvdGFsKSAqIDEwMCkgKyAnJScpKVxuICogIC50aGVuKChyZXN1bHQpID0+IHtcbiAqICAgIGlmKHJlc3VsdCA9PT0gMCkgY29uc29sZS5sb2coJ1NVQ0NFU1MnKTtcbiAqICAgIGlmKHJlc3VsdCA9PT0gLTEpIGNvbnNvbGUubG9nKCdGQUlMRUQnKTtcbiAqICB9KTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdaaXAnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi16aXAnLFxuICBwbHVnaW5SZWY6ICd6aXAnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL01vYmlsZUNocm9tZUFwcHMvY29yZG92YS1wbHVnaW4temlwJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFppcCBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIEV4dHJhY3RzIGZpbGVzIGZyb20gYSBaSVAgYXJjaGl2ZVxuICAgKiBAcGFyYW0gc291cmNlWmlwIHtzdHJpbmd9IFNvdXJjZSBaSVAgZmlsZVxuICAgKiBAcGFyYW0gZGVzdFVybCB7c3RyaW5nfSBEZXN0aW5hdGlvbiBmb2xkZXJcbiAgICogQHBhcmFtIG9uUHJvZ3Jlc3Mge0Z1bmN0aW9ufSBvcHRpb25hbCBjYWxsYmFjayB0byBiZSBjYWxsZWQgb24gcHJvZ3Jlc3MgdXBkYXRlXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPG51bWJlcj59IHJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIG51bWJlci4gMCBpcyBzdWNjZXNzLCAtMSBpcyBlcnJvclxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN1Y2Nlc3NJbmRleDogMixcbiAgICBlcnJvckluZGV4OiA0LFxuICB9KVxuICB1bnppcChzb3VyY2VaaXA6IHN0cmluZywgZGVzdFVybDogc3RyaW5nLCBvblByb2dyZXNzPzogRnVuY3Rpb24pOiBQcm9taXNlPG51bWJlcj4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19